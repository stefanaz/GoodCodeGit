//
// File generated by rootcint at Thu Oct 23 10:41:36 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GMCsDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GMCs_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_GMCs(void *p = 0);
   static void *newArray_GMCs(Long_t size, void *p);
   static void delete_GMCs(void *p);
   static void deleteArray_GMCs(void *p);
   static void destruct_GMCs(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GMCs*)
   {
      ::GMCs *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GMCs >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GMCs", ::GMCs::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GMCs.h", 23,
                  typeid(::GMCs), DefineBehavior(ptr, ptr),
                  &::GMCs::Dictionary, isa_proxy, 0,
                  sizeof(::GMCs) );
      instance.SetNew(&new_GMCs);
      instance.SetNewArray(&newArray_GMCs);
      instance.SetDelete(&delete_GMCs);
      instance.SetDeleteArray(&deleteArray_GMCs);
      instance.SetDestructor(&destruct_GMCs);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GMCs*)
   {
      return GenerateInitInstanceLocal((::GMCs*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GMCs*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GMCs::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GMCs::Class_Name()
{
   return "GMCs";
}

//______________________________________________________________________________
const char *GMCs::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GMCs*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GMCs::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GMCs*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GMCs::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GMCs*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GMCs::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GMCs*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GMCs::Streamer(TBuffer &R__b)
{
   // Stream an object of class GMCs.

   GPhysObj::Streamer(R__b);
}

//______________________________________________________________________________
void GMCs::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GMCs.
      TClass *R__cl = ::GMCs::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fIndex1", &fIndex1);
      R__insp.Inspect(R__cl, R__parent, "fIndex2", &fIndex2);
      R__insp.Inspect(R__cl, R__parent, "fXGammaJets", &fXGammaJets);
      R__insp.Inspect(R__cl, R__parent, "fXGamma", &fXGamma);
      R__insp.Inspect(R__cl, R__parent, "fXGammaJets_zufo", &fXGammaJets_zufo);
      R__insp.Inspect(R__cl, R__parent, "fMJets", &fMJets);
      R__insp.Inspect(R__cl, R__parent, "fDPhiJets", &fDPhiJets);
      R__insp.Inspect(R__cl, R__parent, "fDRJets", &fDRJets);
      R__insp.Inspect(R__cl, R__parent, "fPtJets", &fPtJets);
      R__insp.Inspect(R__cl, R__parent, "fCosThetaStarJets", &fCosThetaStarJets);
      R__insp.Inspect(R__cl, R__parent, "fEtaJets", &fEtaJets);
      R__insp.Inspect(R__cl, R__parent, "fPartIndex1", &fPartIndex1);
      R__insp.Inspect(R__cl, R__parent, "fPartIndex2", &fPartIndex2);
      R__insp.Inspect(R__cl, R__parent, "fPartXGammaJets", &fPartXGammaJets);
      R__insp.Inspect(R__cl, R__parent, "fPartXGamma", &fPartXGamma);
      R__insp.Inspect(R__cl, R__parent, "fPartXGammaJets_zufo", &fPartXGammaJets_zufo);
      R__insp.Inspect(R__cl, R__parent, "fPartMJets", &fPartMJets);
      R__insp.Inspect(R__cl, R__parent, "fPartDPhiJets", &fPartDPhiJets);
      R__insp.Inspect(R__cl, R__parent, "fPartDRJets", &fPartDRJets);
      R__insp.Inspect(R__cl, R__parent, "fPartPtJets", &fPartPtJets);
      R__insp.Inspect(R__cl, R__parent, "fPartCosThetaStarJets", &fPartCosThetaStarJets);
      R__insp.Inspect(R__cl, R__parent, "fPartEtaJets", &fPartEtaJets);
      R__insp.Inspect(R__cl, R__parent, "*fMCs", &fMCs);
      R__insp.Inspect(R__cl, R__parent, "fNMCs", &fNMCs);
      R__insp.Inspect(R__cl, R__parent, "*fMCMuons", &fMCMuons);
      R__insp.Inspect(R__cl, R__parent, "fNMCMuons", &fNMCMuons);
      R__insp.Inspect(R__cl, R__parent, "*fMCDIMuons", &fMCDIMuons);
      R__insp.Inspect(R__cl, R__parent, "fNMCDIMuons", &fNMCDIMuons);
      R__insp.Inspect(R__cl, R__parent, "*fMCVertices", &fMCVertices);
      R__insp.Inspect(R__cl, R__parent, "fNMCVertices", &fNMCVertices);
      R__insp.Inspect(R__cl, R__parent, "*fMCHJets", &fMCHJets);
      R__insp.Inspect(R__cl, R__parent, "fNMCHJets", &fNMCHJets);
      R__insp.Inspect(R__cl, R__parent, "*fMCHMJets", &fMCHMJets);
      R__insp.Inspect(R__cl, R__parent, "fNMCHMJets", &fNMCHMJets);
      R__insp.Inspect(R__cl, R__parent, "*fMCHBJets", &fMCHBJets);
      R__insp.Inspect(R__cl, R__parent, "fNMCHBJets", &fNMCHBJets);
      R__insp.Inspect(R__cl, R__parent, "*fMCHBMJets", &fMCHBMJets);
      R__insp.Inspect(R__cl, R__parent, "fNMCHBMJets", &fNMCHBMJets);
      R__insp.Inspect(R__cl, R__parent, "*fMCPJets", &fMCPJets);
      R__insp.Inspect(R__cl, R__parent, "fNMCPJets", &fNMCPJets);
      R__insp.Inspect(R__cl, R__parent, "*fMCPMJets", &fMCPMJets);
      R__insp.Inspect(R__cl, R__parent, "fNMCPMJets", &fNMCPMJets);
      R__insp.Inspect(R__cl, R__parent, "fMCHJetPtACut", &fMCHJetPtACut);
      R__insp.Inspect(R__cl, R__parent, "fMCHJetPtBCut", &fMCHJetPtBCut);
      R__insp.Inspect(R__cl, R__parent, "fMCHMJetPtACut", &fMCHMJetPtACut);
      R__insp.Inspect(R__cl, R__parent, "fMCHMJetPtBCut", &fMCHMJetPtBCut);
      R__insp.Inspect(R__cl, R__parent, "fMCHBJetPtACut", &fMCHBJetPtACut);
      R__insp.Inspect(R__cl, R__parent, "fMCHBJetPtBCut", &fMCHBJetPtBCut);
      R__insp.Inspect(R__cl, R__parent, "fMCHBMJetPtACut", &fMCHBMJetPtACut);
      R__insp.Inspect(R__cl, R__parent, "fMCHBMJetPtBCut", &fMCHBMJetPtBCut);
      R__insp.Inspect(R__cl, R__parent, "fMCPJetPtACut", &fMCPJetPtACut);
      R__insp.Inspect(R__cl, R__parent, "fMCPJetPtBCut", &fMCPJetPtBCut);
      R__insp.Inspect(R__cl, R__parent, "fMCPMJetPtACut", &fMCPMJetPtACut);
      R__insp.Inspect(R__cl, R__parent, "fMCPMJetPtBCut", &fMCPMJetPtBCut);
      R__insp.Inspect(R__cl, R__parent, "fOwnFMCKINID", &fOwnFMCKINID);
      R__insp.Inspect(R__cl, R__parent, "fHeavyFlavours", &fHeavyFlavours);
      R__insp.Inspect(R__cl, R__parent, "fQ2Cut", &fQ2Cut);
      R__insp.Inspect(R__cl, R__parent, "fQ2LowCut", &fQ2LowCut);
      R__insp.Inspect(R__cl, R__parent, "fQ2SelectionCut", &fQ2SelectionCut);
      R__insp.Inspect(R__cl, R__parent, "fYCut", &fYCut);
      R__insp.Inspect(R__cl, R__parent, "fMuonCuts", &fMuonCuts);
      R__insp.Inspect(R__cl, R__parent, "fMCDIMuonCuts", &fMCDIMuonCuts);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQ2_uncut", &fGeneralQ2_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralY_uncut", &fGeneralY_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralX_uncut", &fGeneralX_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQ2", &fGeneralQ2);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQ2_1", &fGeneralQ2_1);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQ2_2", &fGeneralQ2_2);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQ2_3", &fGeneralQ2_3);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralY", &fGeneralY);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralX", &fGeneralX);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotalTrue", &fGeneralCrossTotalTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotalTrueNRec", &fGeneralCrossTotalTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotalAssociatedTrue", &fGeneralCrossTotalAssociatedTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotalAssociatedTrueNRec", &fGeneralCrossTotalAssociatedTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotalEventTrue", &fGeneralCrossTotalEventTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotalEventTrueNRec", &fGeneralCrossTotalEventTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonRegionsTrue", &fGeneralCrossMuonRegionsTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonRegionsTrueNRec", &fGeneralCrossMuonRegionsTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonFinderTrue", &fGeneralCrossMuonFinderTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonFinderTrueNRec", &fGeneralCrossMuonFinderTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtTrue", &fGeneralCrossMuonPtTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtTrueNRec", &fGeneralCrossMuonPtTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaTrue", &fGeneralCrossMuonEtaTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaTrueNRec", &fGeneralCrossMuonEtaTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtFineTrue", &fGeneralCrossMuonPtFineTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtFineTrueNRec", &fGeneralCrossMuonPtFineTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaFineTrue", &fGeneralCrossMuonEtaFineTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaFineTrueNRec", &fGeneralCrossMuonEtaFineTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtMassimoTrue", &fGeneralCrossMuonPtMassimoTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtMassimoTrueNRec", &fGeneralCrossMuonPtMassimoTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaMassimoTrue", &fGeneralCrossMuonEtaMassimoTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaMassimoTrueNRec", &fGeneralCrossMuonEtaMassimoTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonRegionsNoJetTrue", &fGeneralCrossMuonRegionsNoJetTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonRegionsNoJetTrueNRec", &fGeneralCrossMuonRegionsNoJetTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtNoJetTrue", &fGeneralCrossMuonPtNoJetTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtNoJetTrueNRec", &fGeneralCrossMuonPtNoJetTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaNoJetTrue", &fGeneralCrossMuonEtaNoJetTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaNoJetTrueNRec", &fGeneralCrossMuonEtaNoJetTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtFineNoJetTrue", &fGeneralCrossMuonPtFineNoJetTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtFineNoJetTrueNRec", &fGeneralCrossMuonPtFineNoJetTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaFineNoJetTrue", &fGeneralCrossMuonEtaFineNoJetTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaFineNoJetTrueNRec", &fGeneralCrossMuonEtaFineNoJetTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtMassimoNoJetTrue", &fGeneralCrossMuonPtMassimoNoJetTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtMassimoNoJetTrueNRec", &fGeneralCrossMuonPtMassimoNoJetTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaMassimoNoJetTrue", &fGeneralCrossMuonEtaMassimoNoJetTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaMassimoNoJetTrueNRec", &fGeneralCrossMuonEtaMassimoNoJetTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetPtTrue", &fGeneralCrossMuonJetPtTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetPtTrueNRec", &fGeneralCrossMuonJetPtTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetEtaTrue", &fGeneralCrossMuonJetEtaTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetEtaTrueNRec", &fGeneralCrossMuonJetEtaTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetPtFineTrue", &fGeneralCrossMuonJetPtFineTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetPtFineTrueNRec", &fGeneralCrossMuonJetPtFineTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetEtaFineTrue", &fGeneralCrossMuonJetEtaFineTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetEtaFineTrueNRec", &fGeneralCrossMuonJetEtaFineTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetXGammaTrue", &fGeneralCrossJetXGammaTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetXGammaTrueNRec", &fGeneralCrossJetXGammaTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetXGammaFineTrue", &fGeneralCrossJetXGammaFineTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetXGammaFineTrueNRec", &fGeneralCrossJetXGammaFineTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsTrue", &fGeneralCrossJetMJetsTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsTrueNRec", &fGeneralCrossJetMJetsTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsLowTrue", &fGeneralCrossJetMJetsLowTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsLowTrueNRec", &fGeneralCrossJetMJetsLowTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsHighTrue", &fGeneralCrossJetMJetsHighTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsHighTrueNRec", &fGeneralCrossJetMJetsHighTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsTrue", &fGeneralCrossJetDPhiJetsTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsTrueNRec", &fGeneralCrossJetDPhiJetsTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsLowTrue", &fGeneralCrossJetDPhiJetsLowTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsLowTrueNRec", &fGeneralCrossJetDPhiJetsLowTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsHighTrue", &fGeneralCrossJetDPhiJetsHighTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsHighTrueNRec", &fGeneralCrossJetDPhiJetsHighTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsTrue", &fGeneralCrossJetDRJetsTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsTrueNRec", &fGeneralCrossJetDRJetsTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsLowTrue", &fGeneralCrossJetDRJetsLowTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsLowTrueNRec", &fGeneralCrossJetDRJetsLowTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsHighTrue", &fGeneralCrossJetDRJetsHighTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsHighTrueNRec", &fGeneralCrossJetDRJetsHighTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsTrue", &fGeneralCrossJetPtJetsTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsTrueNRec", &fGeneralCrossJetPtJetsTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsLowTrue", &fGeneralCrossJetPtJetsLowTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsLowTrueNRec", &fGeneralCrossJetPtJetsLowTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsHighTrue", &fGeneralCrossJetPtJetsHighTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsHighTrueNRec", &fGeneralCrossJetPtJetsHighTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsTrue", &fGeneralCrossJetCosThetaStarJetsTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsTrueNRec", &fGeneralCrossJetCosThetaStarJetsTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsLowTrue", &fGeneralCrossJetCosThetaStarJetsLowTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsLowTrueNRec", &fGeneralCrossJetCosThetaStarJetsLowTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsHighTrue", &fGeneralCrossJetCosThetaStarJetsHighTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsHighTrueNRec", &fGeneralCrossJetCosThetaStarJetsHighTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMJMatchCosThetaStarJetsTrue", &fGeneralCrossMJMatchCosThetaStarJetsTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMJMatchCosThetaStarJetsTrueNRec", &fGeneralCrossMJMatchCosThetaStarJetsTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMJMatchCosThetaStarJetsLowTrue", &fGeneralCrossMJMatchCosThetaStarJetsLowTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMJMatchCosThetaStarJetsLowTrueNRec", &fGeneralCrossMJMatchCosThetaStarJetsLowTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMJMatchCosThetaStarJetsHighTrue", &fGeneralCrossMJMatchCosThetaStarJetsHighTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMJMatchCosThetaStarJetsHighTrueNRec", &fGeneralCrossMJMatchCosThetaStarJetsHighTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonRegionsPartTrue", &fGeneralCrossMuonRegionsPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtPartTrue", &fGeneralCrossMuonPtPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaPartTrue", &fGeneralCrossMuonEtaPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtFinePartTrue", &fGeneralCrossMuonPtFinePartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaFinePartTrue", &fGeneralCrossMuonEtaFinePartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonPtMassimoPartTrue", &fGeneralCrossMuonPtMassimoPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonEtaMassimoPartTrue", &fGeneralCrossMuonEtaMassimoPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetPtPartTrue", &fGeneralCrossMuonJetPtPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetEtaPartTrue", &fGeneralCrossMuonJetEtaPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetPtFinePartTrue", &fGeneralCrossMuonJetPtFinePartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetEtaFinePartTrue", &fGeneralCrossMuonJetEtaFinePartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetXGammaPartTrue", &fGeneralCrossJetXGammaPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetXGammaFinePartTrue", &fGeneralCrossJetXGammaFinePartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsPartTrue", &fGeneralCrossJetMJetsPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsLowPartTrue", &fGeneralCrossJetMJetsLowPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsHighPartTrue", &fGeneralCrossJetMJetsHighPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsPartTrue", &fGeneralCrossJetDPhiJetsPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsLowPartTrue", &fGeneralCrossJetDPhiJetsLowPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsHighPartTrue", &fGeneralCrossJetDPhiJetsHighPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsPartTrue", &fGeneralCrossJetDRJetsPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsLowPartTrue", &fGeneralCrossJetDRJetsLowPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsHighPartTrue", &fGeneralCrossJetDRJetsHighPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsPartTrue", &fGeneralCrossJetPtJetsPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsLowPartTrue", &fGeneralCrossJetPtJetsLowPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsHighPartTrue", &fGeneralCrossJetPtJetsHighPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsPartTrue", &fGeneralCrossJetCosThetaStarJetsPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsLowPartTrue", &fGeneralCrossJetCosThetaStarJetsLowPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsHighPartTrue", &fGeneralCrossJetCosThetaStarJetsHighPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMJMatchCosThetaStarJetsPartTrue", &fGeneralCrossMJMatchCosThetaStarJetsPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMJMatchCosThetaStarJetsLowPartTrue", &fGeneralCrossMJMatchCosThetaStarJetsLowPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMJMatchCosThetaStarJetsHighPartTrue", &fGeneralCrossMJMatchCosThetaStarJetsHighPartTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaRTrue", &fGeneralMCDeltaRTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaRTrue_lu", &fGeneralMCDeltaRTrue_lu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaRTrue_ll", &fGeneralMCDeltaRTrue_ll);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaRTrue_hu", &fGeneralMCDeltaRTrue_hu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaRTrue_hl", &fGeneralMCDeltaRTrue_hl);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaRTrueNRec", &fGeneralMCDeltaRTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaRTrueNRec_lu", &fGeneralMCDeltaRTrueNRec_lu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaRTrueNRec_ll", &fGeneralMCDeltaRTrueNRec_ll);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaRTrueNRec_hu", &fGeneralMCDeltaRTrueNRec_hu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaRTrueNRec_hl", &fGeneralMCDeltaRTrueNRec_hl);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaPhiTrue", &fGeneralMCDeltaPhiTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaPhiTrue_lu", &fGeneralMCDeltaPhiTrue_lu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaPhiTrue_ll", &fGeneralMCDeltaPhiTrue_ll);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaPhiTrue_hu", &fGeneralMCDeltaPhiTrue_hu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaPhiTrue_hl", &fGeneralMCDeltaPhiTrue_hl);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaPhiTrueNRec", &fGeneralMCDeltaPhiTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaPhiTrueNRec_lu", &fGeneralMCDeltaPhiTrueNRec_lu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaPhiTrueNRec_ll", &fGeneralMCDeltaPhiTrueNRec_ll);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaPhiTrueNRec_hu", &fGeneralMCDeltaPhiTrueNRec_hu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMCDeltaPhiTrueNRec_hl", &fGeneralMCDeltaPhiTrueNRec_hl);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuParentPhiTrueNRec", &fGeneralMuParentPhiTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuParentPhiResTrueNRec", &fGeneralMuParentPhiResTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuParentDRResTrueNRec", &fGeneralMuParentDRResTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuParentPTResTrueNRec", &fGeneralMuParentPTResTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuQuarkPhiTrueNRec", &fGeneralMuQuarkPhiTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuQuarkPhiResTrueNRec", &fGeneralMuQuarkPhiResTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuQuarkDRResTrueNRec", &fGeneralMuQuarkDRResTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuQuarkPTResTrueNRec", &fGeneralMuQuarkPTResTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetbothDimuMass1bin_true_hflmu", &fGeneralDijetbothDimuMass1bin_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetbothDimuxsecPt_true_hflmu", &fGeneralDijetbothDimuxsecPt_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetbothDimuxsecEta_true_hflmu", &fGeneralDijetbothDimuxsecEta_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetbothDimuxsecDphi_true_hflmu", &fGeneralDijetbothDimuxsecDphi_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetoneDimuMass1bin_true_hflmu", &fGeneralDijetoneDimuMass1bin_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetoneDimuxsecPt_true_hflmu", &fGeneralDijetoneDimuxsecPt_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetoneDimuxsecEta_true_hflmu", &fGeneralDijetoneDimuxsecEta_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetoneDimuxsecDphi_true_hflmu", &fGeneralDijetoneDimuxsecDphi_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetnoneDimuMass1bin_true_hflmu", &fGeneralDijetnoneDimuMass1bin_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetnoneDimuxsecPt_true_hflmu", &fGeneralDijetnoneDimuxsecPt_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetnoneDimuxsecEta_true_hflmu", &fGeneralDijetnoneDimuxsecEta_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDijetnoneDimuxsecDphi_true_hflmu", &fGeneralDijetnoneDimuxsecDphi_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuMass_any", &fGeneralDimuMass_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuMass_true_hflmu", &fGeneralDimuMass_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuMass_truenrec_hflmu", &fGeneralDimuMass_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuQuarkPtTrueNRec", &fGeneralMuQuarkPtTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuQuarkPtTrueNRec_singlb", &fGeneralMuQuarkPtTrueNRec_singlb);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuBMesonPtTrueNRec", &fGeneralMuBMesonPtTrueNRec);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuBMesonPtTrueNRec_singlb", &fGeneralMuBMesonPtTrueNRec_singlb);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuMass1bin_any", &fGeneralDimuMass1bin_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuMass1bin_true_hflmu", &fGeneralDimuMass1bin_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuMass1bin_truenrec_hflmu", &fGeneralDimuMass1bin_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPt_any", &fGeneralDimuxsecPt_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPt_true_hflmu", &fGeneralDimuxsecPt_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPt_truenrec_hflmu", &fGeneralDimuxsecPt_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecEta_any", &fGeneralDimuxsecEta_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecEta_true_hflmu", &fGeneralDimuxsecEta_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecEta_truenrec_hflmu", &fGeneralDimuxsecEta_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecFinders_any", &fGeneralDimuxsecFinders_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecFinders_true_hflmu", &fGeneralDimuxsecFinders_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecFinders_truenrec_hflmu", &fGeneralDimuxsecFinders_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecDR_any", &fGeneralDimuxsecDR_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecDR_true_hflmu", &fGeneralDimuxsecDR_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecDR_truenrec_hflmu", &fGeneralDimuxsecDR_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecDphi_any", &fGeneralDimuxsecDphi_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecDphi_true_hflmu", &fGeneralDimuxsecDphi_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecDphi_truenrec_hflmu", &fGeneralDimuxsecDphi_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_any", &fGeneralDimuxsecPtb_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_true_hflmu", &fGeneralDimuxsecPtb_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_truenrec_hflmu", &fGeneralDimuxsecPtb_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_sameb_any", &fGeneralDimuxsecPtb_sameb_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_sameb_true_hflmu", &fGeneralDimuxsecPtb_sameb_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_sameb_truenrec_hflmu", &fGeneralDimuxsecPtb_sameb_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_diffb_any", &fGeneralDimuxsecPtb_diffb_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_diffb_true_hflmu", &fGeneralDimuxsecPtb_diffb_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_diffb_truenrec_hflmu", &fGeneralDimuxsecPtb_diffb_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_samecone_any", &fGeneralDimuxsecPtb_samecone_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_samecone_true_hflmu", &fGeneralDimuxsecPtb_samecone_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_samecone_truenrec_hflmu", &fGeneralDimuxsecPtb_samecone_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_asym_any", &fGeneralDimuxsecPtb_asym_any);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_asym_true_hflmu", &fGeneralDimuxsecPtb_asym_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimuxsecPtb_asym_truenrec_hflmu", &fGeneralDimuxsecPtb_asym_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimu_b_pt_true_hflmu", &fGeneralDimu_b_pt_true_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDimu_b_pt_truenrec_hflmu", &fGeneralDimu_b_pt_truenrec_hflmu);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDeltaRMuonJet", &fGeneralDeltaRMuonJet);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDeltaRMuonJet2D", &fGeneralDeltaRMuonJet2D);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDeltaRMuonSecondJet", &fGeneralDeltaRMuonSecondJet);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetPtDeltaR", &fControlJetPtDeltaR);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetEtDeltaR", &fControlJetEtDeltaR);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetMassDeltaR", &fControlJetMassDeltaR);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetPtDeltaRB", &fControlJetPtDeltaRB);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetEtDeltaRB", &fControlJetEtDeltaRB);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetMassDeltaRB", &fControlJetMassDeltaRB);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetPtDeltaRC", &fControlJetPtDeltaRC);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetEtDeltaRC", &fControlJetEtDeltaRC);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetMassDeltaRC", &fControlJetMassDeltaRC);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetPtDeltaRLF", &fControlJetPtDeltaRLF);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetEtDeltaRLF", &fControlJetEtDeltaRLF);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetMassDeltaRLF", &fControlJetMassDeltaRLF);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetPtPtRelRec", &fControlJetPtPtRelRec);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetEtPtRelRec", &fControlJetEtPtRelRec);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetMassPtRelRec", &fControlJetMassPtRelRec);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetPtPtRelRecB", &fControlJetPtPtRelRecB);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetEtPtRelRecB", &fControlJetEtPtRelRecB);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetMassPtRelRecB", &fControlJetMassPtRelRecB);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetPtPtRelRecC", &fControlJetPtPtRelRecC);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetEtPtRelRecC", &fControlJetEtPtRelRecC);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetMassPtRelRecC", &fControlJetMassPtRelRecC);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetPtPtRelRecLF", &fControlJetPtPtRelRecLF);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetEtPtRelRecLF", &fControlJetEtPtRelRecLF);
      R__insp.Inspect(R__cl, R__parent, "*fControlJetMassPtRelRecLF", &fControlJetMassPtRelRecLF);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetQuark", &fControlPtRelJetQuark);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetQuark45", &fControlPtRelJetQuark45);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetQuark56", &fControlPtRelJetQuark56);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetQuark6", &fControlPtRelJetQuark6);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetBQuark", &fControlPtRelJetBQuark);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetBQuark45", &fControlPtRelJetBQuark45);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetBQuark56", &fControlPtRelJetBQuark56);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetBQuark6", &fControlPtRelJetBQuark6);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetCQuark", &fControlPtRelJetCQuark);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetCQuark45", &fControlPtRelJetCQuark45);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetCQuark56", &fControlPtRelJetCQuark56);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetCQuark6", &fControlPtRelJetCQuark6);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetLFQuark", &fControlPtRelJetLFQuark);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetLFQuark45", &fControlPtRelJetLFQuark45);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetLFQuark56", &fControlPtRelJetLFQuark56);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRelJetLFQuark6", &fControlPtRelJetLFQuark6);
      R__insp.Inspect(R__cl, R__parent, "*fControlMCWeightsQ2", &fControlMCWeightsQ2);
      R__insp.Inspect(R__cl, R__parent, "*fControlMCWeights", &fControlMCWeights);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronPionPt", &fFakeHadronPionPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronPionEta_lowPt", &fFakeHadronPionEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronPionPhi_lowPt", &fFakeHadronPionPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronPionEta_highPt", &fFakeHadronPionEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronPionPhi_highPt", &fFakeHadronPionPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronAllPt", &fFakeHadronAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronAllEta_lowPt", &fFakeHadronAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronAllPhi_lowPt", &fFakeHadronAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronAllEta_highPt", &fFakeHadronAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronAllPhi_highPt", &fFakeHadronAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronKaonPt", &fFakeHadronKaonPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronKaonEta_lowPt", &fFakeHadronKaonEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronKaonPhi_lowPt", &fFakeHadronKaonPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronKaonEta_highPt", &fFakeHadronKaonEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeHadronKaonPhi_highPt", &fFakeHadronKaonPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityAllPt", &fFakeProbabilityAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityAllEta_lowPt", &fFakeProbabilityAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityAllPhi_lowPt", &fFakeProbabilityAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityAllEta_highPt", &fFakeProbabilityAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityAllPhi_highPt", &fFakeProbabilityAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityPionPt", &fFakeProbabilityPionPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityPionEta_lowPt", &fFakeProbabilityPionEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityPionPhi_lowPt", &fFakeProbabilityPionPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityPionEta_highPt", &fFakeProbabilityPionEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityPionPhi_highPt", &fFakeProbabilityPionPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityKaonPt", &fFakeProbabilityKaonPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityKaonEta_lowPt", &fFakeProbabilityKaonEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityKaonPhi_lowPt", &fFakeProbabilityKaonPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityKaonEta_highPt", &fFakeProbabilityKaonEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityKaonPhi_highPt", &fFakeProbabilityKaonPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayProbabilityPionPt", &fFakeDecayProbabilityPionPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayProbabilityPionEta_lowPt", &fFakeDecayProbabilityPionEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayProbabilityPionPhi_lowPt", &fFakeDecayProbabilityPionPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayProbabilityPionEta_highPt", &fFakeDecayProbabilityPionEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayProbabilityPionPhi_highPt", &fFakeDecayProbabilityPionPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayProbabilityKaonPt", &fFakeDecayProbabilityKaonPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayProbabilityKaonEta_lowPt", &fFakeDecayProbabilityKaonEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayProbabilityKaonPhi_lowPt", &fFakeDecayProbabilityKaonPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayProbabilityKaonEta_highPt", &fFakeDecayProbabilityKaonEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayProbabilityKaonPhi_highPt", &fFakeDecayProbabilityKaonPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchProbabilityPionPt", &fFakePunchProbabilityPionPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchProbabilityPionEta_lowPt", &fFakePunchProbabilityPionEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchProbabilityPionPhi_lowPt", &fFakePunchProbabilityPionPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchProbabilityPionEta_highPt", &fFakePunchProbabilityPionEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchProbabilityPionPhi_highPt", &fFakePunchProbabilityPionPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchProbabilityKaonPt", &fFakePunchProbabilityKaonPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchProbabilityKaonEta_lowPt", &fFakePunchProbabilityKaonEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchProbabilityKaonPhi_lowPt", &fFakePunchProbabilityKaonPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchProbabilityKaonEta_highPt", &fFakePunchProbabilityKaonEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchProbabilityKaonPhi_highPt", &fFakePunchProbabilityKaonPhi_highPt);
      GPhysObj::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GMCs(void *p) {
      return  p ? new(p) ::GMCs : new ::GMCs;
   }
   static void *newArray_GMCs(Long_t nElements, void *p) {
      return p ? new(p) ::GMCs[nElements] : new ::GMCs[nElements];
   }
   // Wrapper around operator delete
   static void delete_GMCs(void *p) {
      delete ((::GMCs*)p);
   }
   static void deleteArray_GMCs(void *p) {
      delete [] ((::GMCs*)p);
   }
   static void destruct_GMCs(void *p) {
      typedef ::GMCs current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GMCs

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GMCsDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGMCsDict();

extern "C" void G__set_cpp_environmentGMCsDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GMCs.h");
  G__cpp_reset_tagtableGMCsDict();
}
#include <new>
extern "C" int G__cpp_dllrevGMCsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GMCs */
static int G__GMCsDict_167_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GMCs* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GMCs[n];
     } else {
       p = new((void*) gvp) GMCs[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GMCs;
     } else {
       p = new((void*) gvp) GMCs;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GMCsDictLN_GMCs));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CreateFake());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->ObjectsFillHistos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->ObjectsFillControl((GMC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->ObjectsFillGeneral((GMC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->ObjectsFillControlJets((GJet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->ObjectsFillGeneralJets((GJet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->ObjectsFillGeneralPMJets((GJet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->ObjectsFillGeneralMCDIMuons((GDIMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->Fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->AddMuonMCInfo(
(GMuon*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Int_t) G__int(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMC((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCVertex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCHJet((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCHJetWithID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCHMJet((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCHMJetWithID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCHBJet((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCHBJetWithID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCHBMJet((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCHBMJetWithID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCPJet((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCPJetWithID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCPMJet((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMCs*) G__getstructoffset())->GetMCPMJetWithID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CheckMothersAndVertices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->GetAllMCCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->GetAllPartMCCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CheckQ2Cut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CheckQ2SelectionCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->GetQ2SelectionCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CheckYCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CheckHeavyFlavours((GMC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CheckMCDIMuonHFL((GDIMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CheckAllCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CheckMuonCutsStage1((GMC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CheckMuonCutsStage2((GMC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CheckBParent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CheckCParent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMCs*) G__getstructoffset())->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->AssociateMCJet((GJet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->AssociateMCJet((GMC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->AssociateMCPMJet((GMC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->AssociateMCJetToMCMuon((GMC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->AssociateMCPMJetToMCMuon((GMC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMCs*) G__getstructoffset())->IsMuonAssociatedToMCJet((GJet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMCs*) G__getstructoffset())->IsMuonAssociatedToMCPMJet((GJet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMCs*) G__getstructoffset())->IsJetAssociatedToMCMuon((GMC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMCs*) G__getstructoffset())->IsPMJetAssociatedToMCMuon((GMC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->Calc((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CalcPart((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CalcMJCosThetaStarpmjets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMCs*) G__getstructoffset())->CalcMJCosThetaStarhbmjets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GMCs::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMCs::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GMCs::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GMCs::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMCs*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMCs::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GMCs::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMCs::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCsDict_167_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GMCs::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GMCsDict_167_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GMCs* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GMCs(*(GMCs*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GMCsDictLN_GMCs));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GMCs G__TGMCs;
static int G__GMCsDict_167_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GMCs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GMCs*) (soff+(sizeof(GMCs)*i)))->~G__TGMCs();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GMCs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GMCs*) (soff))->~G__TGMCs();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GMCsDict_167_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GMCs* dest = (GMCs*) G__getstructoffset();
   *dest = *(GMCs*) libp->para[0].ref;
   const GMCs& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GMCs */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGMCsDict {
 public:
  G__Sizep2memfuncGMCsDict(): p(&G__Sizep2memfuncGMCsDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGMCsDict::*p)();
};

size_t G__get_sizep2memfuncGMCsDict()
{
  G__Sizep2memfuncGMCsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGMCsDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GMCsDictLN_GMCs))) {
     GMCs *G__Lderived;
     G__Lderived=(GMCs*)0x1000;
     {
       GPhysObj *G__Lpbase=(GPhysObj*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GMCsDictLN_GMCs),G__get_linked_tagnum(&G__GMCsDictLN_GPhysObj),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GMCsDictLN_GMCs),G__get_linked_tagnum(&G__GMCsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGMCsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GMCsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GMCsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GMCsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GMCsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GMCsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GMCsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GMCs */
static void G__setup_memvarGMCs(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GMCsDictLN_GMCs));
   { GMCs *p; p=(GMCs*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIndex1=",0,"index of highest jet, only used for massive b-hadron jets");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIndex2=",0,"index of second highest jet, only used for massive b-hadron jets");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXGammaJets=",0,"x_gamma^jets");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXGamma=",0,"x_gamma^jets in second definition");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXGammaJets_zufo=",0,"x_gamma^jets with zufo properties");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMJets=",0,"dijet invariant mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDPhiJets=",0,"dphi from jets");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDRJets=",0,"dphi from jets");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPtJets=",0,"p_T of hijet system");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCosThetaStarJets=",0,"cos ( theta* )");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEtaJets=",0,"average eta of jets");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPartIndex1=",0,"index of highest jet, only used for massive b-hadron jets parton level");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPartIndex2=",0,"index of second highest jet, only used for massive b-hadron jets parton level");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPartXGammaJets=",0,"x_gamma^jets parton level");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPartXGamma=",0,"x_gamma^jets in second definition parton level");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPartXGammaJets_zufo=",0,"x_gamma^jets with zufo properties parton level");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPartMJets=",0,"dijet invariant mass parton level");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPartDPhiJets=",0,"dphi from jets parton level");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPartDRJets=",0,"dphi from jets parton level");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPartPtJets=",0,"p_T of hijet system parton level");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPartCosThetaStarJets=",0,"cos ( theta* ) parton level");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPartEtaJets=",0,"average eta of parton level jets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TClonesArray),-1,-1,4,"fMCs=",0,"mc particle array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMCs=",0,"counter for mc particle clonesarray");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TClonesArray),-1,-1,4,"fMCMuons=",0,"fmckin particle array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMCMuons=",0,"counter for fmckin particle clonesarray");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TClonesArray),-1,-1,4,"fMCDIMuons=",0,"fmckin particle array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMCDIMuons=",0,"counter for fmckin particle clonesarray");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TClonesArray),-1,-1,4,"fMCVertices=",0,"mc vertex array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMCVertices=",0,"counter for mc vertex clonesarray");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TClonesArray),-1,-1,4,"fMCHJets=",0,"mc hadron jets array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMCHJets=",0,"counter for mc hadron jets clonesarray");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TClonesArray),-1,-1,4,"fMCHMJets=",0,"massive mc hadron jets array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMCHMJets=",0,"counter for massive mc hadron jets clonesarray");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TClonesArray),-1,-1,4,"fMCHBJets=",0,"mc hadron jets with stable B mesons array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMCHBJets=",0,"counter for mc hadron jets with stable B mesons clonesarray");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TClonesArray),-1,-1,4,"fMCHBMJets=",0,"massive mc hadron jets with stable B mesons array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMCHBMJets=",0,"counter for massive mc hadron jets with stable B mesons clonesarray");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TClonesArray),-1,-1,4,"fMCPJets=",0,"mc hadron jets array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMCPJets=",0,"counter for mc hadron jets clonesarray");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TClonesArray),-1,-1,4,"fMCPMJets=",0,"massive mc parton jets array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMCPMJets=",0,"counter for massive mc parton jets clonesarray");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCHJetPtACut=",0,"cut on highest pt MC hadron jet");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCHJetPtBCut=",0,"cut on second highest pt MC hadron jet");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCHMJetPtACut=",0,"cut on highest pt massive MC hadron jet");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCHMJetPtBCut=",0,"cut on second highest pt massive MC hadron jet");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCHBJetPtACut=",0,"cut on highest pt MC hadron jet with stable B mesons");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCHBJetPtBCut=",0,"cut on second highest pt MC hadron jet with stable B mesons");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCHBMJetPtACut=",0,"cut on highest pt massive MC hadron jet with stable B mesons");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCHBMJetPtBCut=",0,"cut on second highest pt massive MC hadron jet with stable B mesons");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCPJetPtACut=",0,"cut on highest pt MC parton jet");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCPJetPtBCut=",0,"cut on second highest pt MC parton jet");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCPMJetPtACut=",0,"cut on highest pt massive MC parton jet");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCPMJetPtBCut=",0,"cut on second highest pt massive MC parton jet");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOwnFMCKINID=",0,"own fmckin id for particles without id");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fHeavyFlavours=",0,"event contains heavy flavour particles");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fQ2Cut=",0,"cut on true Q2 for histograms");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fQ2LowCut=",0,"low cut on true Q2 for histograms");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fQ2SelectionCut=",0,"cut for selection on true Q2");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fYCut=",0,"cut in true y");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMuonCuts=",0,"at least one true muon which fulfills muon kin cuts and coming from b quark");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMCDIMuonCuts=",0,"at least one true mcdimuon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralQ2_uncut=",0,"uncut MC Q2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralY_uncut=",0,"uncut MC Y");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralX_uncut=",0,"uncut MC X");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralQ2=",0,"MC Q2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralQ2_1=",0,"MC Q2 fulfilling trigger requirement");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralQ2_2=",0,"MC Q2 fulfilling trigger and sinistra requirement");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralQ2_3=",0,"MC Q2 fulfilling trigger, sinistra and zufo requirement");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralY=",0,"MC Y");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralX=",0,"MC X");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotalTrue=",0,"true plot of total cross");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotalTrueNRec=",0,"true and rec plot of total cross");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotalAssociatedTrue=",0,"true plot of total cross for muons ass. to a jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotalAssociatedTrueNRec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotalEventTrue=",0,"true plot of total cross eventwise filled");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotalEventTrueNRec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonRegionsTrue=",0,"true plot of chosen muons region");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonRegionsTrueNRec=",0,"true and rec plot of chosen muons region");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonFinderTrue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonFinderTrueNRec=",0,"filled like muon region plot 0-4 barrel,5-9 rear 10-14 forward");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtTrue=",0,"true plot of chosen muons pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtTrueNRec=",0,"true and rec plot of chosen muons pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaTrue=",0,"true plot of chosen muons eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaTrueNRec=",0,"true and rec plot of chosen muons eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtFineTrue=",0,"true plot of fine chosen muons pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtFineTrueNRec=",0,"true and rec plot of fine chosen muons pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaFineTrue=",0,"true plot of fine chosen muons eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaFineTrueNRec=",0,"true and rec plot of fine chosen muons eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtMassimoTrue=",0,"true plot of chosen muons pt in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtMassimoTrueNRec=",0,"true and rec plot of chosen muons pt in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaMassimoTrue=",0,"true plot of chosen muons eta in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaMassimoTrueNRec=",0,"true and rec plot of chosen muons eta in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonRegionsNoJetTrue=",0,"true plot of chosen muons region");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonRegionsNoJetTrueNRec=",0,"true and rec plot of chosen muons region");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtNoJetTrue=",0,"true plot of chosen muons pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtNoJetTrueNRec=",0,"true and rec plot of chosen muons pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaNoJetTrue=",0,"true plot of chosen muons eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaNoJetTrueNRec=",0,"true and rec plot of chosen muons eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtFineNoJetTrue=",0,"true plot of fine chosen muons pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtFineNoJetTrueNRec=",0,"true and rec plot of fine chosen muons pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaFineNoJetTrue=",0,"true plot of fine chosen muons eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaFineNoJetTrueNRec=",0,"true and rec plot of fine chosen muons eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtMassimoNoJetTrue=",0,"true plot of chosen muons pt in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtMassimoNoJetTrueNRec=",0,"true and rec plot of chosen muons pt in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaMassimoNoJetTrue=",0,"true plot of chosen muons eta in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaMassimoNoJetTrueNRec=",0,"true and rec plot of chosen muons eta in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetPtTrue=",0,"true plot of chosen muon jets pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetPtTrueNRec=",0,"true and rec plot of chosen muon jets pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetEtaTrue=",0,"true plot of chosen muon jets eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetEtaTrueNRec=",0,"true and rec plot of chosen muon jets eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetPtFineTrue=",0,"true plot of fine chosen muon jets pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetPtFineTrueNRec=",0,"true and rec plot of fine chosen muon jets pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetEtaFineTrue=",0,"true plot of fine chosen muon jets eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetEtaFineTrueNRec=",0,"true and rec plot of fine chosen muon jets eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetXGammaTrue=",0,"true x_gamma_zufo for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetXGammaTrueNRec=",0,"x_gamma_zufo true and rec for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetXGammaFineTrue=",0,"true fine x_gamma_zufo for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetXGammaFineTrueNRec=",0,"fine x_gamma_zufo true and rec for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsTrue=",0,"true jet dijet invariant mass for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsTrueNRec=",0,"jet dijet invariant mass true and rec for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsLowTrue=",0,"true jet dijet invariant mass for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsLowTrueNRec=",0,"jet dijet invariant mass true and rec for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsHighTrue=",0,"true jet dijet invariant mass for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsHighTrueNRec=",0,"jet dijet invariant mass true and rec for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsTrue=",0,"true jet dijet dphi for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsTrueNRec=",0,"jet dijet dphi true and rec for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsLowTrue=",0,"true jet dijet dphi for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsLowTrueNRec=",0,"jet dijet dphi true and rec for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsHighTrue=",0,"true jet dijet dphi for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsHighTrueNRec=",0,"jet dijet dphi true and rec for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsTrue=",0,"true jet dijet dr for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsTrueNRec=",0,"jet dijet dr true and rec for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsLowTrue=",0,"true jet dijet dr for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsLowTrueNRec=",0,"jet dijet dr true and rec for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsHighTrue=",0,"true jet dijet dr for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsHighTrueNRec=",0,"jet dijet dr true and rec for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsTrue=",0,"true jet dijet p_T for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsTrueNRec=",0,"jet dijet p_T true and rec for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsLowTrue=",0,"true jet dijet p_T for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsLowTrueNRec=",0,"jet dijet p_T true and rec for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsHighTrue=",0,"true jet dijet p_T for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsHighTrueNRec=",0,"jet dijet p_T true and rec for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsTrue=",0,"true cos(theta*) for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsTrueNRec=",0,"jet cos(theta*) true and rec for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsLowTrue=",0,"true cos(theta*) for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsLowTrueNRec=",0,"jet cos(theta*) true and rec for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsHighTrue=",0,"true cos(theta*) for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsHighTrueNRec=",0,"jet cos(theta*) true and rec for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMJMatchCosThetaStarJetsTrue=",0,"cos theta star of matched and next highest pt(or et) jet ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMJMatchCosThetaStarJetsTrueNRec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMJMatchCosThetaStarJetsLowTrue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMJMatchCosThetaStarJetsLowTrueNRec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMJMatchCosThetaStarJetsHighTrue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMJMatchCosThetaStarJetsHighTrueNRec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonRegionsPartTrue=",0,"true plot of chosen muons region");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtPartTrue=",0,"true plot of chosen muons pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaPartTrue=",0,"true plot of chosen muons eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtFinePartTrue=",0,"true plot of fine chosen muons pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaFinePartTrue=",0,"true plot of fine chosen muons eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonPtMassimoPartTrue=",0,"true plot of chosen muons pt in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonEtaMassimoPartTrue=",0,"true plot of chosen muons eta in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetPtPartTrue=",0,"true plot of chosen muon jets pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetEtaPartTrue=",0,"true plot of chosen muon jets eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetPtFinePartTrue=",0,"true plot of fine chosen muon jets pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetEtaFinePartTrue=",0,"true plot of fine chosen muon jets eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetXGammaPartTrue=",0,"true x_gamma_zufo for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetXGammaFinePartTrue=",0,"true fine x_gamma_zufo for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsPartTrue=",0,"true jet dijet invariant mass for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsLowPartTrue=",0,"true jet dijet invariant mass for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsHighPartTrue=",0,"true jet dijet invariant mass for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsPartTrue=",0,"true jet dijet dphi for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsLowPartTrue=",0,"true jet dijet dphi for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsHighPartTrue=",0,"true jet dijet dphi for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsPartTrue=",0,"true jet dijet dr for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsLowPartTrue=",0,"true jet dijet dr for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsHighPartTrue=",0,"true jet dijet dr for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsPartTrue=",0,"true jet dijet p_T for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsLowPartTrue=",0,"true jet dijet p_T for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsHighPartTrue=",0,"true jet dijet p_T for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsPartTrue=",0,"true cos(theta*) for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsLowPartTrue=",0,"true cos(theta*) for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsHighPartTrue=",0,"true cos(theta*) for cross section for x_gamma >= 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMJMatchCosThetaStarJetsPartTrue=",0,"cos theta star of matched and next highest pt(or et) jet ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMJMatchCosThetaStarJetsLowPartTrue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralCrossMJMatchCosThetaStarJetsHighPartTrue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaRTrue=",0,"true mcdimuon deltaR for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaRTrue_lu=",0,"true mcdimuon deltaR for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaRTrue_ll=",0,"true mcdimuon deltaR for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaRTrue_hu=",0,"true mcdimuon deltaR for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaRTrue_hl=",0,"true mcdimuon deltaR for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaRTrueNRec=",0,"true and reconstructed mcdimuon deltaR for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaRTrueNRec_lu=",0,"true and reconstructed mcdimuon deltaR for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaRTrueNRec_ll=",0,"true and reconstructed mcdimuon deltaR for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaRTrueNRec_hu=",0,"true and reconstructed mcdimuon deltaR for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaRTrueNRec_hl=",0,"true and reconstructed mcdimuon deltaR for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaPhiTrue=",0,"mcdimuon delta phi    ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaPhiTrue_lu=",0,"mcdimuon delta phi    ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaPhiTrue_ll=",0,"mcdimuon delta phi    ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaPhiTrue_hu=",0,"mcdimuon delta phi    ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaPhiTrue_hl=",0,"mcdimuon delta phi    ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaPhiTrueNRec=",0,"mcdimuon delta phi    ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaPhiTrueNRec_lu=",0,"mcdimuon delta phi    ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaPhiTrueNRec_ll=",0,"mcdimuon delta phi    ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaPhiTrueNRec_hu=",0,"mcdimuon delta phi    ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMCDeltaPhiTrueNRec_hl=",0,"mcdimuon delta phi    ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fGeneralMuParentPhiTrueNRec=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMuParentPhiResTrueNRec=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMuParentDRResTrueNRec=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMuParentPTResTrueNRec=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fGeneralMuQuarkPhiTrueNRec=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMuQuarkPhiResTrueNRec=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMuQuarkDRResTrueNRec=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralMuQuarkPTResTrueNRec=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetbothDimuMass1bin_true_hflmu=",0,"Dimuon total xsection true def");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetbothDimuxsecPt_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetbothDimuxsecEta_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetbothDimuxsecDphi_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetoneDimuMass1bin_true_hflmu=",0,"Dimuon total xsection true def");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetoneDimuxsecPt_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetoneDimuxsecEta_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetoneDimuxsecDphi_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetnoneDimuMass1bin_true_hflmu=",0,"Dimuon total xsection true def");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetnoneDimuxsecPt_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetnoneDimuxsecEta_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDijetnoneDimuxsecDphi_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuMass_any=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuMass_true_hflmu=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuMass_truenrec_hflmu=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fGeneralMuQuarkPtTrueNRec=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fGeneralMuQuarkPtTrueNRec_singlb=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fGeneralMuBMesonPtTrueNRec=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fGeneralMuBMesonPtTrueNRec_singlb=",0,"Ingo dirty paste");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuMass1bin_any=",0,"Dimuon total xsection true def");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuMass1bin_true_hflmu=",0,"Dimuon total xsection true def");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuMass1bin_truenrec_hflmu=",0,"Dimuon total xsection true def");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPt_any=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPt_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPt_truenrec_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecEta_any=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecEta_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecEta_truenrec_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecFinders_any=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecFinders_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecFinders_truenrec_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecDR_any=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecDR_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecDR_truenrec_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecDphi_any=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecDphi_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecDphi_truenrec_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_any=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_truenrec_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_sameb_any=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_sameb_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_sameb_truenrec_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_diffb_any=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_diffb_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_diffb_truenrec_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_samecone_any=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_samecone_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_samecone_truenrec_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_asym_any=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_asym_true_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimuxsecPtb_asym_truenrec_hflmu=",0,"Dimuon xsection true plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimu_b_pt_true_hflmu=",0,"pt of b quark from which the muon came");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDimu_b_pt_truenrec_hflmu=",0,"pt of b quark from which the muon came");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDeltaRMuonJet=",0,"dr between muon and nearest jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fGeneralDeltaRMuonJet2D=",0,"dr between muon and nearest jet vs dr between muon and second nearest jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fGeneralDeltaRMuonSecondJet=",0,"dr between muon and second nearest jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetPtDeltaR=",0,"control histogram for delta r between jet and any quark associated by muon and p_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetEtDeltaR=",0,"control histogram for delta r between jet and any quark associated by muon and E_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetMassDeltaR=",0,"control histogram for delta r between jet and any quark associated by muon and jet_mass");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetPtDeltaRB=",0,"control histogram for delta r between jet and b-quark associated by muon and p_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetEtDeltaRB=",0,"control histogram for delta r between jet and b-quark associated by muon and E_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetMassDeltaRB=",0,"control histogram for delta r between jet and b-quark associated by muon and jet_mass");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetPtDeltaRC=",0,"control histogram for delta r between jet and c-quark associated by muon and p_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetEtDeltaRC=",0,"control histogram for delta r between jet and c-quark associated by muon and E_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetMassDeltaRC=",0,"control histogram for delta r between jet and c-quark associated by muon and jet_mass");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetPtDeltaRLF=",0,"control histogram for delta r between jet and light quark associated by muon and p_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetEtDeltaRLF=",0,"control histogram for delta r between jet and light quark associated by muon and E_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetMassDeltaRLF=",0,"control histogram for delta r between jet and light quark associated by muon and jet_mass");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetPtPtRelRec=",0,"control histogram for between rec ptrel (any quark) and p_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetEtPtRelRec=",0,"control histogram for between rec ptrel (any quark) and E_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetMassPtRelRec=",0,"control histogram for between rec ptrel (any quark) and jet_mass");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetPtPtRelRecB=",0,"control histogram for between rec ptrel (b-quark) and p_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetEtPtRelRecB=",0,"control histogram for between rec ptrel (b-quark) and E_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetMassPtRelRecB=",0,"control histogram for between rec ptrel (b-quark) and jet_mass");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetPtPtRelRecC=",0,"control histogram for between rec ptrel (c-quark) and p_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetEtPtRelRecC=",0,"control histogram for between rec ptrel (c-quark) and E_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetMassPtRelRecC=",0,"control histogram for between rec ptrel (c-quark) and jet_mass");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetPtPtRelRecLF=",0,"control histogram for between rec ptrel (light quark) and p_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetEtPtRelRecLF=",0,"control histogram for between rec ptrel (light quark) and E_T_jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlJetMassPtRelRecLF=",0,"control histogram for between rec ptrel (light quark) and jet_mass");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetQuark=",0,"control histogram for ptrel between jet or any quark and reconstructed muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetQuark45=",0,"control histogram for ptrel between jet or any quark and reconstructed muon for 4 < p_T_jet < 5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetQuark56=",0,"control histogram for ptrel between jet or any quark and reconstructed muon for 5 < p_T_jet < 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetQuark6=",0,"control histogram for ptrel between jet or any quark and reconstructed muon for p_T_jet > 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetBQuark=",0,"control histogram for ptrel between jet or b-quark and reconstructed muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetBQuark45=",0,"control histogram for ptrel between jet or b-quark and reconstructed muon for 4 < p_T_jet < 5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetBQuark56=",0,"control histogram for ptrel between jet or b-quark and reconstructed muon for 5 < p_T_jet < 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetBQuark6=",0,"control histogram for ptrel between jet or b-quark and reconstructed muon for p_T_jet > 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetCQuark=",0,"control histogram for ptrel between jet or c-quark and reconstructed muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetCQuark45=",0,"control histogram for ptrel between jet or c-quark and reconstructed muon for 4 < p_T_jet < 5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetCQuark56=",0,"control histogram for ptrel between jet or c-quark and reconstructed muon for 5 < p_T_jet < 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetCQuark6=",0,"control histogram for ptrel between jet or c-quark and reconstructed muon for p_T_jet > 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetLFQuark=",0,"control histogram for ptrel between jet or light quark and reconstructed muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetLFQuark45=",0,"control histogram for ptrel between jet or light quark and reconstructed muon for 4 < p_T_jet < 5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetLFQuark56=",0,"control histogram for ptrel between jet or light quark and reconstructed muon for 5 < p_T_jet < 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlPtRelJetLFQuark6=",0,"control histogram for ptrel between jet or light quark and reconstructed muon for p_T_jet > 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH2D),-1,-1,4,"fControlMCWeightsQ2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fControlMCWeights=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronPionPt=",0,"pt distribution of all true pions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronPionEta_lowPt=",0,"eta distribution of all true pions  low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronPionPhi_lowPt=",0,"phi distribution of all true pions  low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronPionEta_highPt=",0,"eta distribution of all true pions high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronPionPhi_highPt=",0,"phi distribution of all true pions high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronAllPt=",0,"pt distribution of all true charged particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronAllEta_lowPt=",0,"eta distribution of all charged particles low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronAllPhi_lowPt=",0,"phi distribution of all charged particles low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronAllEta_highPt=",0,"eta distribution of all true charged particles high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronAllPhi_highPt=",0,"phi distribution of all true charged particles high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronKaonPt=",0,"pt distribution of all true kaons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronKaonEta_lowPt=",0,"eta distribution of all true kaons low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronKaonPhi_lowPt=",0,"phi distribution of all true kaons low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronKaonEta_highPt=",0,"eta distribution of all true kaons high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeHadronKaonPhi_highPt=",0,"phi distribution of all true kaons high Pt ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityAllPt=",0,"pt dependence of probability to identify pion as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityAllEta_lowPt=",0,"eta dependence of probability to identify charged particle as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityAllPhi_lowPt=",0,"phi dependence of probability to identify charged particle as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityAllEta_highPt=",0,"eta dependence of probability to identify charged particle as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityAllPhi_highPt=",0,"phi dependence of probability to identify charged particle as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityPionPt=",0,"pt dependence of probability to identify pion as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityPionEta_lowPt=",0,"eta dependence of probability to identify pion as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityPionPhi_lowPt=",0,"phi dependence of probability to identify pion as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityPionEta_highPt=",0,"eta dependence of probability to identify pion as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityPionPhi_highPt=",0,"phi dependence of probability to identify pion as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityKaonPt=",0,"pt dependence of probability to identify kaon as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityKaonEta_lowPt=",0,"eta dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityKaonPhi_lowPt=",0,"phi dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityKaonEta_highPt=",0,"eta dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeProbabilityKaonPhi_highPt=",0,"phi dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeDecayProbabilityPionPt=",0,"pt dependence of probability to identify pion as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeDecayProbabilityPionEta_lowPt=",0,"eta dependence of probability to identify pion as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeDecayProbabilityPionPhi_lowPt=",0,"phi dependence of probability to identify pion as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeDecayProbabilityPionEta_highPt=",0,"eta dependence of probability to identify pion as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeDecayProbabilityPionPhi_highPt=",0,"phi dependence of probability to identify pion as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeDecayProbabilityKaonPt=",0,"pt dependence of probability to identify kaon as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeDecayProbabilityKaonEta_lowPt=",0,"eta dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeDecayProbabilityKaonPhi_lowPt=",0,"phi dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeDecayProbabilityKaonEta_highPt=",0,"eta dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakeDecayProbabilityKaonPhi_highPt=",0,"phi dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakePunchProbabilityPionPt=",0,"pt dependence of probability to identify pion as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakePunchProbabilityPionEta_lowPt=",0,"eta dependence of probability to identify pion as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakePunchProbabilityPionPhi_lowPt=",0,"phi dependence of probability to identify pion as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakePunchProbabilityPionEta_highPt=",0,"eta dependence of probability to identify pion as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakePunchProbabilityPionPhi_highPt=",0,"phi dependence of probability to identify pion as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakePunchProbabilityKaonPt=",0,"pt dependence of probability to identify kaon as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakePunchProbabilityKaonEta_lowPt=",0,"eta dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakePunchProbabilityKaonPhi_lowPt=",0,"phi dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakePunchProbabilityKaonEta_highPt=",0,"eta dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TH1D),-1,-1,4,"fFakePunchProbabilityKaonPhi_highPt=",0,"phi dependence of probability to identify kaon as muon high Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGMCsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGMCs(void) {
   /* GMCs */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GMCsDictLN_GMCs));
   G__memfunc_setup("GMCs",330,G__GMCsDict_167_0_1, 105, G__get_linked_tagnum(&G__GMCsDictLN_GMCs), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateControl",1333,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillControl",1128,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateFake",971,G__GMCsDict_167_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateGeneral",1298,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillGeneral",1093,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillHistos",1025,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillHistos",1739,G__GMCsDict_167_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillControl",1842,G__GMCsDict_167_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMC' - 0 - mc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillGeneral",1807,G__GMCsDict_167_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMC' - 0 - mc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillControlJets",2248,G__GMCsDict_167_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GJet' - 0 - mc_jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillGeneralJets",2213,G__GMCsDict_167_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GJet' - 0 - mc_jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillGeneralPMJets",2370,G__GMCsDict_167_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GJet' - 0 - mc_jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillGeneralMCDIMuons",2622,G__GMCsDict_167_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GDIMuon' - 0 - mcdimuon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Do",179,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,G__GMCsDict_167_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddMuonMCInfo",1220,G__GMCsDict_167_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 17, 1, 1, 0, 
"U 'GMuon' - 0 - muon i - 'Int_t' 0 - fmckinid "
"i - 'Int_t' 0 - partid d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"d - 'Double_t' 0 - e i - 'Int_t' 0 - qpartid "
"d - 'Double_t' 0 - qpx d - 'Double_t' 0 - qpy "
"d - 'Double_t' 0 - qpz d - 'Double_t' 0 - qe "
"i - 'Int_t' 0 - dirpartid d - 'Double_t' 0 - dirpx "
"d - 'Double_t' 0 - dirpy d - 'Double_t' 0 - dirpz "
"d - 'Double_t' 0 - dire", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMC",432,G__GMCsDict_167_0_20, 85, G__get_linked_tagnum(&G__GMCsDictLN_GMC), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMC",432,G__GMCsDict_167_0_21, 85, G__get_linked_tagnum(&G__GMCsDictLN_GMC), -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - partid d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCVertex",1070,G__GMCsDict_167_0_22, 85, G__get_linked_tagnum(&G__GMCsDictLN_GMCVertex), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCHJet",795,G__GMCsDict_167_0_23, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCHJetWithID",1348,G__GMCsDict_167_0_24, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCHMJet",872,G__GMCsDict_167_0_25, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCHMJetWithID",1425,G__GMCsDict_167_0_26, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCHBJet",861,G__GMCsDict_167_0_27, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCHBJetWithID",1414,G__GMCsDict_167_0_28, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCHBMJet",938,G__GMCsDict_167_0_29, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCHBMJetWithID",1491,G__GMCsDict_167_0_30, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCPJet",803,G__GMCsDict_167_0_31, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCPJetWithID",1356,G__GMCsDict_167_0_32, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCPMJet",880,G__GMCsDict_167_0_33, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCPMJetWithID",1433,G__GMCsDict_167_0_34, 85, G__get_linked_tagnum(&G__GMCsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckMothersAndVertices",2328,G__GMCsDict_167_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAllCuts",984,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAllMCCuts",1128,G__GMCsDict_167_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAllPartMCCuts",1535,G__GMCsDict_167_0_38, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckQ2Cut",909,G__GMCsDict_167_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckQ2SelectionCut",1843,G__GMCsDict_167_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQ2SelectionCut",1653,G__GMCsDict_167_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckYCut",867,G__GMCsDict_167_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckHeavyFlavours",1837,G__GMCsDict_167_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMC' - 0 - mc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckMCDIMuonHFL",1396,G__GMCsDict_167_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GDIMuon' - 0 - mcdimuon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckAllCuts",1174,G__GMCsDict_167_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckMuonCutsStage1",1857,G__GMCsDict_167_0_46, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMC' - 0 - mc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckMuonCutsStage2",1858,G__GMCsDict_167_0_47, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMC' - 0 - mc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckBParent",1162,G__GMCsDict_167_0_48, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckCParent",1163,G__GMCsDict_167_0_49, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWeight",904,G__GMCsDict_167_0_50, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AssociateMCJet",1359,G__GMCsDict_167_0_51, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GJet' - 0 - jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AssociateMCJet",1359,G__GMCsDict_167_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMC' - 0 - particle", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AssociateMCPMJet",1516,G__GMCsDict_167_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMC' - 0 - particle", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AssociateMCJetToMCMuon",2113,G__GMCsDict_167_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMC' - 0 - mc_muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AssociateMCPMJetToMCMuon",2270,G__GMCsDict_167_0_55, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMC' - 0 - mc_muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsMuonAssociatedToMCJet",2257,G__GMCsDict_167_0_56, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'GJet' - 0 - mc_jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsMuonAssociatedToMCPMJet",2414,G__GMCsDict_167_0_57, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'GJet' - 0 - mc_jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsJetAssociatedToMCMuon",2257,G__GMCsDict_167_0_58, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'GMC' - 0 - mcmuon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsPMJetAssociatedToMCMuon",2414,G__GMCsDict_167_0_59, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'GMC' - 0 - mcmuon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calc",371,G__GMCsDict_167_0_60, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index1 i - 'Int_t' 0 - index2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcPart",778,G__GMCsDict_167_0_61, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index1 i - 'Int_t' 0 - index2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcMJCosThetaStarpmjets",2386,G__GMCsDict_167_0_62, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcMJCosThetaStarhbmjets",2476,G__GMCsDict_167_0_63, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintMessage",1234,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__GMCsDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GMCsDict_167_0_66, 85, G__get_linked_tagnum(&G__GMCsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GMCs::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GMCsDict_167_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMCs::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GMCsDict_167_0_68, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GMCs::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GMCsDict_167_0_69, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GMCs::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GMCsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GMCsDict_167_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GMCsDict_167_0_74, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMCs::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GMCsDict_167_0_75, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GMCs::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GMCsDict_167_0_76, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMCs::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GMCsDict_167_0_77, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GMCs::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GMCs", 330, G__GMCsDict_167_0_78, (int) ('i'), G__get_linked_tagnum(&G__GMCsDictLN_GMCs), -1, 0, 1, 1, 1, 0, "u 'GMCs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GMCs", 456, G__GMCsDict_167_0_79, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GMCsDict_167_0_80, (int) ('u'), G__get_linked_tagnum(&G__GMCsDictLN_GMCs), -1, 1, 1, 1, 1, 0, "u 'GMCs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGMCsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGMCsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGMCsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GMCsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_GMuon = { "GMuon" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_GJet = { "GJet" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_GDIMuon = { "GDIMuon" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_GPhysObj = { "GPhysObj" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_GMC = { "GMC" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_GMCVertex = { "GMCVertex" , 99 , -1 };
G__linked_taginfo G__GMCsDictLN_GMCs = { "GMCs" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGMCsDict() {
  G__GMCsDictLN_TClass.tagnum = -1 ;
  G__GMCsDictLN_TBuffer.tagnum = -1 ;
  G__GMCsDictLN_TMemberInspector.tagnum = -1 ;
  G__GMCsDictLN_TObject.tagnum = -1 ;
  G__GMCsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GMCsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GMCsDictLN_TString.tagnum = -1 ;
  G__GMCsDictLN_TClonesArray.tagnum = -1 ;
  G__GMCsDictLN_TH1D.tagnum = -1 ;
  G__GMCsDictLN_TH2D.tagnum = -1 ;
  G__GMCsDictLN_GMuon.tagnum = -1 ;
  G__GMCsDictLN_GJet.tagnum = -1 ;
  G__GMCsDictLN_GDIMuon.tagnum = -1 ;
  G__GMCsDictLN_GPhysObj.tagnum = -1 ;
  G__GMCsDictLN_GMC.tagnum = -1 ;
  G__GMCsDictLN_GMCVertex.tagnum = -1 ;
  G__GMCsDictLN_GMCs.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGMCsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_TString);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_GMuon);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_GJet);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_GDIMuon);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_GPhysObj);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_GMC);
   G__get_linked_tagnum_fwd(&G__GMCsDictLN_GMCVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GMCsDictLN_GMCs),sizeof(GMCs),-1,29952,"MCs Class for everything which is related only to mc particles",G__setup_memvarGMCs,G__setup_memfuncGMCs);
}
extern "C" void G__cpp_setupGMCsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGMCsDict()");
  G__set_cpp_environmentGMCsDict();
  G__cpp_setup_tagtableGMCsDict();

  G__cpp_setup_inheritanceGMCsDict();

  G__cpp_setup_typetableGMCsDict();

  G__cpp_setup_memvarGMCsDict();

  G__cpp_setup_memfuncGMCsDict();
  G__cpp_setup_globalGMCsDict();
  G__cpp_setup_funcGMCsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGMCsDict();
  return;
}
class G__cpp_setup_initGMCsDict {
  public:
    G__cpp_setup_initGMCsDict() { G__add_setup_func("GMCsDict",(G__incsetup)(&G__cpp_setupGMCsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGMCsDict() { G__remove_setup_func("GMCsDict"); }
};
G__cpp_setup_initGMCsDict G__cpp_setup_initializerGMCsDict;

