//
// File generated by rootcint at Thu Oct 23 10:41:34 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GListerDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GLister_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_GLister(void *p);
   static void deleteArray_GLister(void *p);
   static void destruct_GLister(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GLister*)
   {
      ::GLister *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GLister >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GLister", ::GLister::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GLister.h", 20,
                  typeid(::GLister), DefineBehavior(ptr, ptr),
                  &::GLister::Dictionary, isa_proxy, 0,
                  sizeof(::GLister) );
      instance.SetDelete(&delete_GLister);
      instance.SetDeleteArray(&deleteArray_GLister);
      instance.SetDestructor(&destruct_GLister);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GLister*)
   {
      return GenerateInitInstanceLocal((::GLister*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GLister*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GLister::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GLister::Class_Name()
{
   return "GLister";
}

//______________________________________________________________________________
const char *GLister::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GLister*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GLister::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GLister*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GLister::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GLister*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GLister::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GLister*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GLister::Streamer(TBuffer &R__b)
{
   // Stream an object of class GLister.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void GLister::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GLister.
      TClass *R__cl = ::GLister::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPath", &fPath);
      fPath.ShowMembers(R__insp, strcat(R__parent,"fPath.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelList96p", &fSelList96p);
      fSelList96p.ShowMembers(R__insp, strcat(R__parent,"fSelList96p.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelList97p", &fSelList97p);
      fSelList97p.ShowMembers(R__insp, strcat(R__parent,"fSelList97p.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelList98e", &fSelList98e);
      fSelList98e.ShowMembers(R__insp, strcat(R__parent,"fSelList98e.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelList99e", &fSelList99e);
      fSelList99e.ShowMembers(R__insp, strcat(R__parent,"fSelList99e.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelList99p", &fSelList99p);
      fSelList99p.ShowMembers(R__insp, strcat(R__parent,"fSelList99p.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelList00p", &fSelList00p);
      fSelList00p.ShowMembers(R__insp, strcat(R__parent,"fSelList00p.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelList02p", &fSelList02p);
      fSelList02p.ShowMembers(R__insp, strcat(R__parent,"fSelList02p.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelList03p", &fSelList03p);
      fSelList03p.ShowMembers(R__insp, strcat(R__parent,"fSelList03p.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelList04p", &fSelList04p);
      fSelList04p.ShowMembers(R__insp, strcat(R__parent,"fSelList04p.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelListMC", &fSelListMC);
      fSelListMC.ShowMembers(R__insp, strcat(R__parent,"fSelListMC.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelListGen", &fSelListGen);
      fSelListGen.ShowMembers(R__insp, strcat(R__parent,"fSelListGen.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fError", &fError);
      R__insp.Inspect(R__cl, R__parent, "fOutput", &fOutput);
      R__insp.Inspect(R__cl, R__parent, "fSelection", &fSelection);
      R__insp.Inspect(R__cl, R__parent, "*fErrorList", &fErrorList);
      R__insp.Inspect(R__cl, R__parent, "*fProcEvents", &fProcEvents);
      R__insp.Inspect(R__cl, R__parent, "*fSelectionList", &fSelectionList);
      R__insp.Inspect(R__cl, R__parent, "*fOutputList", &fOutputList);
      R__insp.Inspect(R__cl, R__parent, "fFileName", &fFileName);
      fFileName.ShowMembers(R__insp, strcat(R__parent,"fFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNewFile", &fNewFile);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_GLister(void *p) {
      delete ((::GLister*)p);
   }
   static void deleteArray_GLister(void *p) {
      delete [] ((::GLister*)p);
   }
   static void destruct_GLister(void *p) {
      typedef ::GLister current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GLister

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GListerDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGListerDict();

extern "C" void G__set_cpp_environmentGListerDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GLister.h");
  G__cpp_reset_tagtableGListerDict();
}
#include <new>
extern "C" int G__cpp_dllrevGListerDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GLister */
static int G__GListerDict_165_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GLister* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GLister(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) GLister(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GListerDictLN_GLister));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->GenerateLists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->InitProcEvents(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->InitErrorList(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->InitSelectionList(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->InitOutputList(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->FillLists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->FillErrorList(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->FillSelectionList((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->FillOutputList((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->FillOutputList(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->ResetLists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->FinalizeLists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->FinalizeProcEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->FinalizeErrorList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->FinalizeSelectionList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->FinalizeOutputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->SelListHeader((ofstream*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->Header((ofstream*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLister*) G__getstructoffset())->Footer((ofstream*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GLister*) G__getstructoffset())->SetOutput((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GLister*) G__getstructoffset())->SetSelection((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GLister*) G__getstructoffset())->SetFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GLister::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GLister::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GLister::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GLister::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GLister*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GLister::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GLister::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GLister::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GListerDict_165_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GLister::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GListerDict_165_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GLister* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GLister(*(GLister*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GListerDictLN_GLister));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GLister G__TGLister;
static int G__GListerDict_165_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GLister*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GLister*) (soff+(sizeof(GLister)*i)))->~G__TGLister();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GLister*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GLister*) (soff))->~G__TGLister();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GListerDict_165_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GLister* dest = (GLister*) G__getstructoffset();
   *dest = *(GLister*) libp->para[0].ref;
   const GLister& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GLister */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGListerDict {
 public:
  G__Sizep2memfuncGListerDict(): p(&G__Sizep2memfuncGListerDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGListerDict::*p)();
};

size_t G__get_sizep2memfuncGListerDict()
{
  G__Sizep2memfuncGListerDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGListerDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GListerDictLN_GLister))) {
     GLister *G__Lderived;
     G__Lderived=(GLister*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GListerDictLN_GLister),G__get_linked_tagnum(&G__GListerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGListerDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GListerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GListerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GListerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GListerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GListerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GListerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GLister */
static void G__setup_memvarGLister(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GListerDictLN_GLister));
   { GLister *p; p=(GLister*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fPath=",0,"output path");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fSelList96p=",0,"selection list content for 96p runperiod");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fSelList97p=",0,"selection list content for 97p runperiod");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fSelList98e=",0,"selection list content for 98e runperiod");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fSelList99e=",0,"selection list content for 99e runperiod");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fSelList99p=",0,"selection list content for 99p runperiod");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fSelList00p=",0,"selection list content for 00p runperiod");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fSelList02p=",0,"selection list content for 02p runperiod");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fSelList03p=",0,"selection list content for 03p runperiod");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fSelList04p=",0,"selection list content for 04p runperiod");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fSelListMC=",0,"selection list content for monte carlo");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fSelListGen=",0,"selection list content for no specific run period");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fError=",0,"flag if event has error ");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fOutput=",0,"flag if output of event should be written out");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSelection=",0,"flag if entry to selection list should be made");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GListerDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,4,"fErrorList=",0,"ascii list of error flags or processed events");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GListerDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,4,"fProcEvents=",0,"ascii lists of processed events");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GListerDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,4,"fSelectionList=",0,"ascii list of selected events");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GListerDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,4,"fOutputList=",0,"ascii list of output");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GListerDictLN_TString),-1,-1,4,"fFileName=",0,"current filename");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fNewFile=",0,"flag indicating filename was never used in gLister");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GListerDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGListerDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGLister(void) {
   /* GLister */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GListerDictLN_GLister));
   G__memfunc_setup("GLister",698,G__GListerDict_165_0_1, 105, G__get_linked_tagnum(&G__GListerDictLN_GLister), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateLists",1338,G__GListerDict_165_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitProcEvents",1437,G__GListerDict_165_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - listname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitErrorList",1338,G__GListerDict_165_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - listname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitSelectionList",1750,G__GListerDict_165_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - listname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitOutputList",1473,G__GListerDict_165_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - listname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillLists",918,G__GListerDict_165_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillErrorList",1325,G__GListerDict_165_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - message", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillSelectionList",1737,G__GListerDict_165_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - run i - 'Int_t' 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillOutputList",1460,G__GListerDict_165_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - run i - 'Int_t' 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillOutputList",1460,G__GListerDict_165_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - string", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetLists",1042,G__GListerDict_165_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinalizeLists",1345,G__GListerDict_165_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinalizeProcEvents",1851,G__GListerDict_165_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinalizeErrorList",1752,G__GListerDict_165_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinalizeSelectionList",2164,G__GListerDict_165_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinalizeOutputList",1887,G__GListerDict_165_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SelListHeader",1289,G__GListerDict_165_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'basic_ofstream<char,char_traits<char> >' 'ofstream' 0 - stream u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Header",585,G__GListerDict_165_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'basic_ofstream<char,char_traits<char> >' 'ofstream' 0 - stream u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Footer",623,G__GListerDict_165_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'basic_ofstream<char,char_traits<char> >' 'ofstream' 0 - stream u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOutput",957,G__GListerDict_165_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSelection",1234,G__GListerDict_165_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFileName",1069,G__GListerDict_165_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GListerDict_165_0_24, 85, G__get_linked_tagnum(&G__GListerDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GLister::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GListerDict_165_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GLister::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GListerDict_165_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GLister::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GListerDict_165_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GLister::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GListerDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GListerDict_165_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GListerDict_165_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GLister::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GListerDict_165_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GLister::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GListerDict_165_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GLister::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GListerDict_165_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GLister::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GLister", 698, G__GListerDict_165_0_36, (int) ('i'), G__get_linked_tagnum(&G__GListerDictLN_GLister), -1, 0, 1, 1, 1, 0, "u 'GLister' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GLister", 824, G__GListerDict_165_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GListerDict_165_0_38, (int) ('u'), G__get_linked_tagnum(&G__GListerDictLN_GLister), -1, 1, 1, 1, 1, 0, "u 'GLister' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGListerDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGListerDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGListerDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GListerDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GListerDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GListerDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GListerDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GListerDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__GListerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GListerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GListerDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GListerDictLN_GLister = { "GLister" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGListerDict() {
  G__GListerDictLN_TClass.tagnum = -1 ;
  G__GListerDictLN_TBuffer.tagnum = -1 ;
  G__GListerDictLN_TMemberInspector.tagnum = -1 ;
  G__GListerDictLN_TObject.tagnum = -1 ;
  G__GListerDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__GListerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GListerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GListerDictLN_TString.tagnum = -1 ;
  G__GListerDictLN_GLister.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGListerDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GListerDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GListerDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GListerDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GListerDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GListerDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__GListerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GListerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GListerDictLN_TString);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GListerDictLN_GLister),sizeof(GLister),-1,62464,"ascii list class",G__setup_memvarGLister,G__setup_memfuncGLister);
}
extern "C" void G__cpp_setupGListerDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGListerDict()");
  G__set_cpp_environmentGListerDict();
  G__cpp_setup_tagtableGListerDict();

  G__cpp_setup_inheritanceGListerDict();

  G__cpp_setup_typetableGListerDict();

  G__cpp_setup_memvarGListerDict();

  G__cpp_setup_memfuncGListerDict();
  G__cpp_setup_globalGListerDict();
  G__cpp_setup_funcGListerDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGListerDict();
  return;
}
class G__cpp_setup_initGListerDict {
  public:
    G__cpp_setup_initGListerDict() { G__add_setup_func("GListerDict",(G__incsetup)(&G__cpp_setupGListerDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGListerDict() { G__remove_setup_func("GListerDict"); }
};
G__cpp_setup_initGListerDict G__cpp_setup_initializerGListerDict;

