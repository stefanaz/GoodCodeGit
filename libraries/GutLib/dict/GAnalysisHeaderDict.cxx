//
// File generated by rootcint at Thu Oct 23 10:41:31 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GAnalysisHeaderDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GAnalysisHeader_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_GAnalysisHeader(void *p = 0);
   static void *newArray_GAnalysisHeader(Long_t size, void *p);
   static void delete_GAnalysisHeader(void *p);
   static void deleteArray_GAnalysisHeader(void *p);
   static void destruct_GAnalysisHeader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GAnalysisHeader*)
   {
      ::GAnalysisHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GAnalysisHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GAnalysisHeader", ::GAnalysisHeader::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GAnalysisHeader.h", 23,
                  typeid(::GAnalysisHeader), DefineBehavior(ptr, ptr),
                  &::GAnalysisHeader::Dictionary, isa_proxy, 0,
                  sizeof(::GAnalysisHeader) );
      instance.SetNew(&new_GAnalysisHeader);
      instance.SetNewArray(&newArray_GAnalysisHeader);
      instance.SetDelete(&delete_GAnalysisHeader);
      instance.SetDeleteArray(&deleteArray_GAnalysisHeader);
      instance.SetDestructor(&destruct_GAnalysisHeader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GAnalysisHeader*)
   {
      return GenerateInitInstanceLocal((::GAnalysisHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GAnalysisHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GAnalysisHeader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GAnalysisHeader::Class_Name()
{
   return "GAnalysisHeader";
}

//______________________________________________________________________________
const char *GAnalysisHeader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GAnalysisHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GAnalysisHeader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GAnalysisHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GAnalysisHeader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GAnalysisHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GAnalysisHeader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GAnalysisHeader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GAnalysisHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class GAnalysisHeader.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fEventWeight;
      R__b >> fSecondStart;
      R__b >> fMinuteStart;
      R__b >> fHourStart;
      R__b >> fDayStart;
      R__b >> fMonthStart;
      R__b >> fYearStart;
      R__b >> fSecondEnd;
      R__b >> fMinuteEnd;
      R__b >> fHourEnd;
      R__b >> fDayEnd;
      R__b >> fMonthEnd;
      R__b >> fYearEnd;
      R__b >> fSecondDiff;
      R__b >> fMinuteDiff;
      R__b >> fHourDiff;
      R__b >> fDayDiff;
      R__b >> fProcessedEvents;
      R__b >> fPassedEvtakeCutsOnly;
      R__b >> fPassedTriggerCutsOnly;
      R__b >> fPassedVertexCutsOnly;
      R__b >> fPassedSinistraCutsOnly;
      R__b >> fPassedCalCutsOnly;
      R__b >> fPassedBacCutsOnly;
      R__b >> fPassedZufoCutsOnly;
      R__b >> fPassedJetCutsOnly;
      R__b >> fPassedTrackCutsOnly;
      R__b >> fPassedMuonCutsOnly;
      R__b >> fPassedMJMatchCutsOnly;
      R__b >> fPassedTJMatchCutsOnly;
      R__b >> fPassedMVDCutsOnly;
      R__b >> fPassedDIMuonCutsOnly;
      R__b >> fPassedMCCutsOnly;
      R__b >> fPassedMCSelectionCutsOnly;
      R__b >> fPassedAllCutsOnly;
      R__b >> fForwardMuonsOnly;
      R__b >> fBarrelMuonsOnly;
      R__b >> fRearMuonsOnly;
      R__b >> fPassedEvtakeCutsCons;
      R__b >> fPassedMCSelectionCutsCons;
      R__b >> fPassedTriggerCutsCons;
      R__b >> fPassedVertexCutsCons;
      R__b >> fPassedSinistraCutsCons;
      R__b >> fPassedCalCutsCons;
      R__b >> fPassedBacCutsCons;
      R__b >> fPassedZufoCutsCons;
      R__b >> fPassedJetCutsCons;
      R__b >> fPassedTrackCutsCons;
      R__b >> fPassedMuonCutsCons;
      R__b >> fPassedMJMatchCutsCons;
      R__b >> fPassedTJMatchCutsCons;
      R__b >> fPassedMVDCutsCons;
      R__b >> fPassedDIMuonCutsCons;
      R__b >> fPassedMCCutsCons;
      R__b >> fPassedAllCutsCons;
      R__b >> fForwardMuonsCons;
      R__b >> fBarrelMuonsCons;
      R__b >> fRearMuonsCons;
      R__b >> fPassedTriggerCutsExcl;
      R__b >> fPassedMCSelectionCutsExcl;
      R__b >> fPassedEvtakeCutsExcl;
      R__b >> fPassedVertexCutsExcl;
      R__b >> fPassedSinistraCutsExcl;
      R__b >> fPassedCalCutsExcl;
      R__b >> fPassedBacCutsExcl;
      R__b >> fPassedZufoCutsExcl;
      R__b >> fPassedJetCutsExcl;
      R__b >> fPassedTrackCutsExcl;
      R__b >> fPassedMuonCutsExcl;
      R__b >> fPassedMJMatchCutsExcl;
      R__b >> fPassedTJMatchCutsExcl;
      R__b >> fPassedMVDCutsExcl;
      R__b >> fPassedDIMuonCutsExcl;
      R__b >> fPassedMCCutsExcl;
      R__b >> fPassedAllCutsExcl;
      R__b >> fForwardMuonsExcl;
      R__b >> fBarrelMuonsExcl;
      R__b >> fRearMuonsExcl;
      fDirectory.Streamer(R__b);
      R__b >> fLuminosity;
      R__b >> fLumiWeight;
      R__b >> fChosenMuons;
      R__b >> fEfficiencyResetMuons;
      R__b.CheckByteCount(R__s, R__c, GAnalysisHeader::IsA());
   } else {
      R__c = R__b.WriteVersion(GAnalysisHeader::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fEventWeight;
      R__b << fSecondStart;
      R__b << fMinuteStart;
      R__b << fHourStart;
      R__b << fDayStart;
      R__b << fMonthStart;
      R__b << fYearStart;
      R__b << fSecondEnd;
      R__b << fMinuteEnd;
      R__b << fHourEnd;
      R__b << fDayEnd;
      R__b << fMonthEnd;
      R__b << fYearEnd;
      R__b << fSecondDiff;
      R__b << fMinuteDiff;
      R__b << fHourDiff;
      R__b << fDayDiff;
      R__b << fProcessedEvents;
      R__b << fPassedEvtakeCutsOnly;
      R__b << fPassedTriggerCutsOnly;
      R__b << fPassedVertexCutsOnly;
      R__b << fPassedSinistraCutsOnly;
      R__b << fPassedCalCutsOnly;
      R__b << fPassedBacCutsOnly;
      R__b << fPassedZufoCutsOnly;
      R__b << fPassedJetCutsOnly;
      R__b << fPassedTrackCutsOnly;
      R__b << fPassedMuonCutsOnly;
      R__b << fPassedMJMatchCutsOnly;
      R__b << fPassedTJMatchCutsOnly;
      R__b << fPassedMVDCutsOnly;
      R__b << fPassedDIMuonCutsOnly;
      R__b << fPassedMCCutsOnly;
      R__b << fPassedMCSelectionCutsOnly;
      R__b << fPassedAllCutsOnly;
      R__b << fForwardMuonsOnly;
      R__b << fBarrelMuonsOnly;
      R__b << fRearMuonsOnly;
      R__b << fPassedEvtakeCutsCons;
      R__b << fPassedMCSelectionCutsCons;
      R__b << fPassedTriggerCutsCons;
      R__b << fPassedVertexCutsCons;
      R__b << fPassedSinistraCutsCons;
      R__b << fPassedCalCutsCons;
      R__b << fPassedBacCutsCons;
      R__b << fPassedZufoCutsCons;
      R__b << fPassedJetCutsCons;
      R__b << fPassedTrackCutsCons;
      R__b << fPassedMuonCutsCons;
      R__b << fPassedMJMatchCutsCons;
      R__b << fPassedTJMatchCutsCons;
      R__b << fPassedMVDCutsCons;
      R__b << fPassedDIMuonCutsCons;
      R__b << fPassedMCCutsCons;
      R__b << fPassedAllCutsCons;
      R__b << fForwardMuonsCons;
      R__b << fBarrelMuonsCons;
      R__b << fRearMuonsCons;
      R__b << fPassedTriggerCutsExcl;
      R__b << fPassedMCSelectionCutsExcl;
      R__b << fPassedEvtakeCutsExcl;
      R__b << fPassedVertexCutsExcl;
      R__b << fPassedSinistraCutsExcl;
      R__b << fPassedCalCutsExcl;
      R__b << fPassedBacCutsExcl;
      R__b << fPassedZufoCutsExcl;
      R__b << fPassedJetCutsExcl;
      R__b << fPassedTrackCutsExcl;
      R__b << fPassedMuonCutsExcl;
      R__b << fPassedMJMatchCutsExcl;
      R__b << fPassedTJMatchCutsExcl;
      R__b << fPassedMVDCutsExcl;
      R__b << fPassedDIMuonCutsExcl;
      R__b << fPassedMCCutsExcl;
      R__b << fPassedAllCutsExcl;
      R__b << fForwardMuonsExcl;
      R__b << fBarrelMuonsExcl;
      R__b << fRearMuonsExcl;
      fDirectory.Streamer(R__b);
      R__b << fLuminosity;
      R__b << fLumiWeight;
      R__b << fChosenMuons;
      R__b << fEfficiencyResetMuons;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void GAnalysisHeader::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GAnalysisHeader.
      TClass *R__cl = ::GAnalysisHeader::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fEventWeight", &fEventWeight);
      R__insp.Inspect(R__cl, R__parent, "fSecondStart", &fSecondStart);
      R__insp.Inspect(R__cl, R__parent, "fMinuteStart", &fMinuteStart);
      R__insp.Inspect(R__cl, R__parent, "fHourStart", &fHourStart);
      R__insp.Inspect(R__cl, R__parent, "fDayStart", &fDayStart);
      R__insp.Inspect(R__cl, R__parent, "fMonthStart", &fMonthStart);
      R__insp.Inspect(R__cl, R__parent, "fYearStart", &fYearStart);
      R__insp.Inspect(R__cl, R__parent, "fSecondEnd", &fSecondEnd);
      R__insp.Inspect(R__cl, R__parent, "fMinuteEnd", &fMinuteEnd);
      R__insp.Inspect(R__cl, R__parent, "fHourEnd", &fHourEnd);
      R__insp.Inspect(R__cl, R__parent, "fDayEnd", &fDayEnd);
      R__insp.Inspect(R__cl, R__parent, "fMonthEnd", &fMonthEnd);
      R__insp.Inspect(R__cl, R__parent, "fYearEnd", &fYearEnd);
      R__insp.Inspect(R__cl, R__parent, "fSecondDiff", &fSecondDiff);
      R__insp.Inspect(R__cl, R__parent, "fMinuteDiff", &fMinuteDiff);
      R__insp.Inspect(R__cl, R__parent, "fHourDiff", &fHourDiff);
      R__insp.Inspect(R__cl, R__parent, "fDayDiff", &fDayDiff);
      R__insp.Inspect(R__cl, R__parent, "fProcessedEvents", &fProcessedEvents);
      R__insp.Inspect(R__cl, R__parent, "fPassedEvtakeCutsOnly", &fPassedEvtakeCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedTriggerCutsOnly", &fPassedTriggerCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedVertexCutsOnly", &fPassedVertexCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedSinistraCutsOnly", &fPassedSinistraCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedCalCutsOnly", &fPassedCalCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedBacCutsOnly", &fPassedBacCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedZufoCutsOnly", &fPassedZufoCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedJetCutsOnly", &fPassedJetCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedTrackCutsOnly", &fPassedTrackCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedMuonCutsOnly", &fPassedMuonCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedMJMatchCutsOnly", &fPassedMJMatchCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedTJMatchCutsOnly", &fPassedTJMatchCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedMVDCutsOnly", &fPassedMVDCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedDIMuonCutsOnly", &fPassedDIMuonCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedMCCutsOnly", &fPassedMCCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedMCSelectionCutsOnly", &fPassedMCSelectionCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedAllCutsOnly", &fPassedAllCutsOnly);
      R__insp.Inspect(R__cl, R__parent, "fForwardMuonsOnly", &fForwardMuonsOnly);
      R__insp.Inspect(R__cl, R__parent, "fBarrelMuonsOnly", &fBarrelMuonsOnly);
      R__insp.Inspect(R__cl, R__parent, "fRearMuonsOnly", &fRearMuonsOnly);
      R__insp.Inspect(R__cl, R__parent, "fPassedEvtakeCutsCons", &fPassedEvtakeCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedMCSelectionCutsCons", &fPassedMCSelectionCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedTriggerCutsCons", &fPassedTriggerCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedVertexCutsCons", &fPassedVertexCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedSinistraCutsCons", &fPassedSinistraCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedCalCutsCons", &fPassedCalCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedBacCutsCons", &fPassedBacCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedZufoCutsCons", &fPassedZufoCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedJetCutsCons", &fPassedJetCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedTrackCutsCons", &fPassedTrackCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedMuonCutsCons", &fPassedMuonCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedMJMatchCutsCons", &fPassedMJMatchCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedTJMatchCutsCons", &fPassedTJMatchCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedMVDCutsCons", &fPassedMVDCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedDIMuonCutsCons", &fPassedDIMuonCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedMCCutsCons", &fPassedMCCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedAllCutsCons", &fPassedAllCutsCons);
      R__insp.Inspect(R__cl, R__parent, "fForwardMuonsCons", &fForwardMuonsCons);
      R__insp.Inspect(R__cl, R__parent, "fBarrelMuonsCons", &fBarrelMuonsCons);
      R__insp.Inspect(R__cl, R__parent, "fRearMuonsCons", &fRearMuonsCons);
      R__insp.Inspect(R__cl, R__parent, "fPassedTriggerCutsExcl", &fPassedTriggerCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedMCSelectionCutsExcl", &fPassedMCSelectionCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedEvtakeCutsExcl", &fPassedEvtakeCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedVertexCutsExcl", &fPassedVertexCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedSinistraCutsExcl", &fPassedSinistraCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedCalCutsExcl", &fPassedCalCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedBacCutsExcl", &fPassedBacCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedZufoCutsExcl", &fPassedZufoCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedJetCutsExcl", &fPassedJetCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedTrackCutsExcl", &fPassedTrackCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedMuonCutsExcl", &fPassedMuonCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedMJMatchCutsExcl", &fPassedMJMatchCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedTJMatchCutsExcl", &fPassedTJMatchCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedMVDCutsExcl", &fPassedMVDCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedDIMuonCutsExcl", &fPassedDIMuonCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedMCCutsExcl", &fPassedMCCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fPassedAllCutsExcl", &fPassedAllCutsExcl);
      R__insp.Inspect(R__cl, R__parent, "fForwardMuonsExcl", &fForwardMuonsExcl);
      R__insp.Inspect(R__cl, R__parent, "fBarrelMuonsExcl", &fBarrelMuonsExcl);
      R__insp.Inspect(R__cl, R__parent, "fRearMuonsExcl", &fRearMuonsExcl);
      R__insp.Inspect(R__cl, R__parent, "fDirectory", &fDirectory);
      fDirectory.ShowMembers(R__insp, strcat(R__parent,"fDirectory.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLuminosity", &fLuminosity);
      R__insp.Inspect(R__cl, R__parent, "fLumiWeight", &fLumiWeight);
      R__insp.Inspect(R__cl, R__parent, "fChosenMuons", &fChosenMuons);
      R__insp.Inspect(R__cl, R__parent, "fEfficiencyResetMuons", &fEfficiencyResetMuons);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GAnalysisHeader(void *p) {
      return  p ? new(p) ::GAnalysisHeader : new ::GAnalysisHeader;
   }
   static void *newArray_GAnalysisHeader(Long_t nElements, void *p) {
      return p ? new(p) ::GAnalysisHeader[nElements] : new ::GAnalysisHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_GAnalysisHeader(void *p) {
      delete ((::GAnalysisHeader*)p);
   }
   static void deleteArray_GAnalysisHeader(void *p) {
      delete [] ((::GAnalysisHeader*)p);
   }
   static void destruct_GAnalysisHeader(void *p) {
      typedef ::GAnalysisHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GAnalysisHeader

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GAnalysisHeaderDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGAnalysisHeaderDict();

extern "C" void G__set_cpp_environmentGAnalysisHeaderDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GAnalysisHeader.h");
  G__cpp_reset_tagtableGAnalysisHeaderDict();
}
#include <new>
extern "C" int G__cpp_dllrevGAnalysisHeaderDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GAnalysisHeader */
static int G__GAnalysisHeaderDict_167_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GAnalysisHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GAnalysisHeader[n];
     } else {
       p = new((void*) gvp) GAnalysisHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GAnalysisHeader;
     } else {
       p = new((void*) gvp) GAnalysisHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_GAnalysisHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetStartDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetStartTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetStartYear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetStartMonth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetStartDay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetStartHour());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetStartMinute());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetStartSecond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetEndDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetEndTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetEndYear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetEndMonth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetEndDay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetEndHour());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetEndMinute());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetEndSecond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetDiffDay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetDiffHour());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetDiffMinute());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetDiffSecond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetProcessedEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedEvtakeCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMCSelectionCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedTriggerCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedVertexCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedSinistraCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedCalCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedBacCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedZufoCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedJetCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedTrackCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMuonCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMJMatchCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedTJMatchCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMVDCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedDIMuonCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMCCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedAllCutsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetForwardMuonsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetBarrelMuonsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetRearMuonsOnly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedEvtakeCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMCSelectionCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedTriggerCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedVertexCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedSinistraCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedCalCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedBacCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedZufoCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedJetCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedTrackCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMuonCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMJMatchCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedTJMatchCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMVDCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedDIMuonCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMCCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedAllCutsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetForwardMuonsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetBarrelMuonsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetRearMuonsCons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedEvtakeCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMCSelectionCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedTriggerCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedVertexCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedSinistraCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedCalCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedBacCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedZufoCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedJetCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedTrackCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMuonCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMJMatchCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedTJMatchCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMVDCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedDIMuonCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedMCCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetPassedAllCutsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetForwardMuonsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetBarrelMuonsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GAnalysisHeader*) G__getstructoffset())->GetRearMuonsExcl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GAnalysisHeader*) G__getstructoffset())->GetAllCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         TString* pobj;
         TString xobj = ((GAnalysisHeader*) G__getstructoffset())->PrintAllCuts((Bool_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         TString* pobj;
         TString xobj = ((GAnalysisHeader*) G__getstructoffset())->PrintAllCuts();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->Increase();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->SetStart();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->SetEnd();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GAnalysisHeader*) G__getstructoffset())->ReturnHeader(*((TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GAnalysisHeader*) G__getstructoffset())->ReturnFooter(*((TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GAnalysisHeader*) G__getstructoffset())->ReturnSevenDigits((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GAnalysisHeader*) G__getstructoffset())->ReturnTitle(*((TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GAnalysisHeader*) G__getstructoffset())->ReturnLine(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->Header(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->Header((ofstream*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->Footer(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->Footer((ofstream*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GAnalysisHeader*) G__getstructoffset())->CheckWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GAnalysisHeader*) G__getstructoffset())->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GAnalysisHeader*) G__getstructoffset())->GetWeight((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->SetDirectory(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GAnalysisHeader*) G__getstructoffset())->GetDirectory();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->SetLuminosity((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->SetLumiWeight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->IncreaseLuminosity((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->DecreaseLuminosity((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GAnalysisHeader*) G__getstructoffset())->GetLuminosity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GAnalysisHeader*) G__getstructoffset())->GetLumiWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->IncreaseChosenMuons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->IncreaseEfficiencyResetMuons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GAnalysisHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GAnalysisHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GAnalysisHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GAnalysisHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GAnalysisHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GAnalysisHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GAnalysisHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GAnalysisHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GAnalysisHeaderDict_167_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GAnalysisHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GAnalysisHeaderDict_167_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GAnalysisHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GAnalysisHeader(*(GAnalysisHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_GAnalysisHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GAnalysisHeader G__TGAnalysisHeader;
static int G__GAnalysisHeaderDict_167_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GAnalysisHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GAnalysisHeader*) (soff+(sizeof(GAnalysisHeader)*i)))->~G__TGAnalysisHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GAnalysisHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GAnalysisHeader*) (soff))->~G__TGAnalysisHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GAnalysisHeaderDict_167_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GAnalysisHeader* dest = (GAnalysisHeader*) G__getstructoffset();
   *dest = *(GAnalysisHeader*) libp->para[0].ref;
   const GAnalysisHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GAnalysisHeader */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGAnalysisHeaderDict {
 public:
  G__Sizep2memfuncGAnalysisHeaderDict(): p(&G__Sizep2memfuncGAnalysisHeaderDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGAnalysisHeaderDict::*p)();
};

size_t G__get_sizep2memfuncGAnalysisHeaderDict()
{
  G__Sizep2memfuncGAnalysisHeaderDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGAnalysisHeaderDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_GAnalysisHeader))) {
     GAnalysisHeader *G__Lderived;
     G__Lderived=(GAnalysisHeader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_GAnalysisHeader),G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGAnalysisHeaderDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GAnalysisHeader */
static void G__setup_memvarGAnalysisHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_GAnalysisHeader));
   { GAnalysisHeader *p; p=(GAnalysisHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEventWeight=",0,"event weight         ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSecondStart=",0,"start second");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinuteStart=",0,"start minute");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHourStart=",0,"start hour");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDayStart=",0,"start day");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMonthStart=",0,"start month");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fYearStart=",0,"start year");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSecondEnd=",0,"end second");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinuteEnd=",0,"end minute");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHourEnd=",0,"end hour");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDayEnd=",0,"end day");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMonthEnd=",0,"end month");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fYearEnd=",0,"end year");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSecondDiff=",0,"diff second");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinuteDiff=",0,"diff minute");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHourDiff=",0,"diff hour");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDayDiff=",0,"diff day");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fProcessedEvents=",0,"number of processed events");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedEvtakeCutsOnly=",0,"Only number of events passed evtake cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedTriggerCutsOnly=",0,"Only number of events passed trigger cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedVertexCutsOnly=",0,"Only number of events passed vertex cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedSinistraCutsOnly=",0,"Only number of events passed sinistra cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedCalCutsOnly=",0,"Only number of events passed cal cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedBacCutsOnly=",0,"Only number of events passed bac cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedZufoCutsOnly=",0,"Only number of events passed zufo cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedJetCutsOnly=",0,"Only number of events passed jet cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedTrackCutsOnly=",0,"Only number of events passed track cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMuonCutsOnly=",0,"Only number of events passed muon cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMJMatchCutsOnly=",0,"Only number of events passed muon-jet match");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedTJMatchCutsOnly=",0,"Only number of events passed track-jet match");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMVDCutsOnly=",0,"Only number of events passed mvd vertexing");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedDIMuonCutsOnly=",0,"Only number of events passed dimuon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMCCutsOnly=",0,"Only number of events passed MC");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMCSelectionCutsOnly=",0,"Only number of events passed MC selection");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedAllCutsOnly=",0,"Only number of events passed all cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fForwardMuonsOnly=",0,"Only number of forward muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBarrelMuonsOnly=",0,"Only number of barrel muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRearMuonsOnly=",0,"Only number of rear muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedEvtakeCutsCons=",0,"consecutive number of events passed evtake cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMCSelectionCutsCons=",0,"consecutive number of events passed MC selection cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedTriggerCutsCons=",0,"consecutive number of events passed trigger cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedVertexCutsCons=",0,"consecutive number of events passed vertex cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedSinistraCutsCons=",0,"consecutive number of events passed sinistra cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedCalCutsCons=",0,"consecutive number of events passed cal cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedBacCutsCons=",0,"consecutive number of events passed bac cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedZufoCutsCons=",0,"consecutive number of events passed zufo cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedJetCutsCons=",0,"consecutive number of events passed jet cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedTrackCutsCons=",0,"consecutive number of events passed track cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMuonCutsCons=",0,"consecutive number of events passed muon cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMJMatchCutsCons=",0,"consecutive number of events passed muon-jet match");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedTJMatchCutsCons=",0,"consecutive number of events passed track-jet match");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMVDCutsCons=",0,"consecutive number of events passed mvd vertexing");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedDIMuonCutsCons=",0,"consecutive number of events passed dimuon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMCCutsCons=",0,"consecutive number of events passed mc");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedAllCutsCons=",0,"consecutive number of events passed all cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fForwardMuonsCons=",0,"consecutive number of forward muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBarrelMuonsCons=",0,"consecutive number of barrel muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRearMuonsCons=",0,"consecutive number of rear muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedTriggerCutsExcl=",0,"exclusive number of events passed trigger cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMCSelectionCutsExcl=",0,"exclusive number of events passed selection cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedEvtakeCutsExcl=",0,"exclusive number of events passed evtake cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedVertexCutsExcl=",0,"exclusive number of events passed vertex cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedSinistraCutsExcl=",0,"exclusive number of events passed sinistra cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedCalCutsExcl=",0,"exclusive number of events passed cal cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedBacCutsExcl=",0,"exclusive number of events passed bac cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedZufoCutsExcl=",0,"exclusive number of events passed zufo cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedJetCutsExcl=",0,"exclusive number of events passed jet cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedTrackCutsExcl=",0,"exclusive number of events passed track cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMuonCutsExcl=",0,"exclusive number of events passed muon cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMJMatchCutsExcl=",0,"exclusive number of events passed muon-jet match");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedTJMatchCutsExcl=",0,"exclusive number of events passed track-jet match");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMVDCutsExcl=",0,"exclusive number of events passed mvd vertexing");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedDIMuonCutsExcl=",0,"exclusive number of events passed dimuon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedMCCutsExcl=",0,"exclusive number of events passed MC");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPassedAllCutsExcl=",0,"exclusive number of events passed all cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fForwardMuonsExcl=",0,"exclusive number of forward muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBarrelMuonsExcl=",0,"exclusive number of barrel muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRearMuonsExcl=",0,"exclusive number of rear muons");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TString),-1,-1,4,"fDirectory=",0,"define subdirectory of data sample header is belonging to");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLuminosity=",0,"luminosity corresponding to data sample");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLumiWeight=",0,"Lumi reweighting factor for MC");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fChosenMuons=",0,"number of chosen muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEfficiencyResetMuons=",0,"chosen muons where efficiency had to be set to 1 because MC efficiencies for that type of event have been zero");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGAnalysisHeaderDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGAnalysisHeader(void) {
   /* GAnalysisHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_GAnalysisHeader));
   G__memfunc_setup("GAnalysisHeader",1492,G__GAnalysisHeaderDict_167_0_1, 105, G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_GAnalysisHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartDate",1196,G__GAnalysisHeaderDict_167_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStartTime",1213,G__GAnalysisHeaderDict_167_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStartYear",1215,G__GAnalysisHeaderDict_167_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStartMonth",1332,G__GAnalysisHeaderDict_167_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStartDay",1100,G__GAnalysisHeaderDict_167_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStartHour",1228,G__GAnalysisHeaderDict_167_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStartMinute",1440,G__GAnalysisHeaderDict_167_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStartSecond",1418,G__GAnalysisHeaderDict_167_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndDate",949,G__GAnalysisHeaderDict_167_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndTime",966,G__GAnalysisHeaderDict_167_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndYear",968,G__GAnalysisHeaderDict_167_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndMonth",1085,G__GAnalysisHeaderDict_167_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndDay",853,G__GAnalysisHeaderDict_167_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndHour",981,G__GAnalysisHeaderDict_167_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndMinute",1193,G__GAnalysisHeaderDict_167_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndSecond",1171,G__GAnalysisHeaderDict_167_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDiffDay",951,G__GAnalysisHeaderDict_167_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDiffHour",1079,G__GAnalysisHeaderDict_167_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDiffMinute",1291,G__GAnalysisHeaderDict_167_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDiffSecond",1269,G__GAnalysisHeaderDict_167_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProcessedEvents",1853,G__GAnalysisHeaderDict_167_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedEvtakeCutsOnly",2337,G__GAnalysisHeaderDict_167_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMCSelectionCutsOnly",2807,G__GAnalysisHeaderDict_167_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedTriggerCutsOnly",2453,G__GAnalysisHeaderDict_167_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedVertexCutsOnly",2367,G__GAnalysisHeaderDict_167_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedSinistraCutsOnly",2574,G__GAnalysisHeaderDict_167_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedCalCutsOnly",2001,G__GAnalysisHeaderDict_167_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedBacCutsOnly",1991,G__GAnalysisHeaderDict_167_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedZufoCutsOnly",2149,G__GAnalysisHeaderDict_167_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedJetCutsOnly",2020,G__GAnalysisHeaderDict_167_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedTrackCutsOnly",2230,G__GAnalysisHeaderDict_167_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMuonCutsOnly",2144,G__GAnalysisHeaderDict_167_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMJMatchCutsOnly",2373,G__GAnalysisHeaderDict_167_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedTJMatchCutsOnly",2380,G__GAnalysisHeaderDict_167_0_35, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMVDCutsOnly",1960,G__GAnalysisHeaderDict_167_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedDIMuonCutsOnly",2285,G__GAnalysisHeaderDict_167_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMCCutsOnly",1873,G__GAnalysisHeaderDict_167_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedAllCutsOnly",2010,G__GAnalysisHeaderDict_167_0_39, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetForwardMuonsOnly",1961,G__GAnalysisHeaderDict_167_0_40, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBarrelMuonsOnly",1836,G__GAnalysisHeaderDict_167_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRearMuonsOnly",1630,G__GAnalysisHeaderDict_167_0_42, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedEvtakeCutsCons",2322,G__GAnalysisHeaderDict_167_0_43, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMCSelectionCutsCons",2792,G__GAnalysisHeaderDict_167_0_44, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedTriggerCutsCons",2438,G__GAnalysisHeaderDict_167_0_45, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedVertexCutsCons",2352,G__GAnalysisHeaderDict_167_0_46, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedSinistraCutsCons",2559,G__GAnalysisHeaderDict_167_0_47, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedCalCutsCons",1986,G__GAnalysisHeaderDict_167_0_48, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedBacCutsCons",1976,G__GAnalysisHeaderDict_167_0_49, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedZufoCutsCons",2134,G__GAnalysisHeaderDict_167_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedJetCutsCons",2005,G__GAnalysisHeaderDict_167_0_51, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedTrackCutsCons",2215,G__GAnalysisHeaderDict_167_0_52, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMuonCutsCons",2129,G__GAnalysisHeaderDict_167_0_53, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMJMatchCutsCons",2358,G__GAnalysisHeaderDict_167_0_54, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedTJMatchCutsCons",2365,G__GAnalysisHeaderDict_167_0_55, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMVDCutsCons",1945,G__GAnalysisHeaderDict_167_0_56, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedDIMuonCutsCons",2270,G__GAnalysisHeaderDict_167_0_57, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMCCutsCons",1858,G__GAnalysisHeaderDict_167_0_58, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedAllCutsCons",1995,G__GAnalysisHeaderDict_167_0_59, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetForwardMuonsCons",1946,G__GAnalysisHeaderDict_167_0_60, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBarrelMuonsCons",1821,G__GAnalysisHeaderDict_167_0_61, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRearMuonsCons",1615,G__GAnalysisHeaderDict_167_0_62, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedEvtakeCutsExcl",2315,G__GAnalysisHeaderDict_167_0_63, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMCSelectionCutsExcl",2785,G__GAnalysisHeaderDict_167_0_64, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedTriggerCutsExcl",2431,G__GAnalysisHeaderDict_167_0_65, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedVertexCutsExcl",2345,G__GAnalysisHeaderDict_167_0_66, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedSinistraCutsExcl",2552,G__GAnalysisHeaderDict_167_0_67, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedCalCutsExcl",1979,G__GAnalysisHeaderDict_167_0_68, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedBacCutsExcl",1969,G__GAnalysisHeaderDict_167_0_69, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedZufoCutsExcl",2127,G__GAnalysisHeaderDict_167_0_70, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedJetCutsExcl",1998,G__GAnalysisHeaderDict_167_0_71, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedTrackCutsExcl",2208,G__GAnalysisHeaderDict_167_0_72, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMuonCutsExcl",2122,G__GAnalysisHeaderDict_167_0_73, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMJMatchCutsExcl",2351,G__GAnalysisHeaderDict_167_0_74, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedTJMatchCutsExcl",2358,G__GAnalysisHeaderDict_167_0_75, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMVDCutsExcl",1938,G__GAnalysisHeaderDict_167_0_76, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedDIMuonCutsExcl",2263,G__GAnalysisHeaderDict_167_0_77, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedMCCutsExcl",1851,G__GAnalysisHeaderDict_167_0_78, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedAllCutsExcl",1988,G__GAnalysisHeaderDict_167_0_79, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetForwardMuonsExcl",1939,G__GAnalysisHeaderDict_167_0_80, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBarrelMuonsExcl",1814,G__GAnalysisHeaderDict_167_0_81, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRearMuonsExcl",1608,G__GAnalysisHeaderDict_167_0_82, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAllCuts",984,G__GAnalysisHeaderDict_167_0_83, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintAllCuts",1221,G__GAnalysisHeaderDict_167_0_84, 117, G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TString), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' formated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Increase",810,G__GAnalysisHeaderDict_167_0_85, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStart",826,G__GAnalysisHeaderDict_167_0_86, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnd",579,G__GAnalysisHeaderDict_167_0_87, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReturnHeader",1225,G__GAnalysisHeaderDict_167_0_88, 117, G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReturnFooter",1263,G__GAnalysisHeaderDict_167_0_89, 117, G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReturnSevenDigits",1765,G__GAnalysisHeaderDict_167_0_90, 117, G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - counter", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReturnTitle",1154,G__GAnalysisHeaderDict_167_0_91, 117, G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReturnLine",1032,G__GAnalysisHeaderDict_167_0_92, 117, G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TString), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - category i - 'Int_t' 0 - only "
"i - 'Int_t' 0 - consecutive i - 'Int_t' 0 - exclusive", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Header",585,G__GAnalysisHeaderDict_167_0_93, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Header",585,G__GAnalysisHeaderDict_167_0_94, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'basic_ofstream<char,char_traits<char> >' 'ofstream' 0 - stream u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Footer",623,G__GAnalysisHeaderDict_167_0_95, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Footer",623,G__GAnalysisHeaderDict_167_0_96, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'basic_ofstream<char,char_traits<char> >' 'ofstream' 0 - stream u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckWeight",1094,G__GAnalysisHeaderDict_167_0_97, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWeight",904,G__GAnalysisHeaderDict_167_0_98, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWeight",904,G__GAnalysisHeaderDict_167_0_99, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDirectory",1249,G__GAnalysisHeaderDict_167_0_100, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDirectory",1237,G__GAnalysisHeaderDict_167_0_101, 117, G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLuminosity",1385,G__GAnalysisHeaderDict_167_0_102, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLumiWeight",1323,G__GAnalysisHeaderDict_167_0_103, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IncreaseLuminosity",1895,G__GAnalysisHeaderDict_167_0_104, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DecreaseLuminosity",1881,G__GAnalysisHeaderDict_167_0_105, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLuminosity",1373,G__GAnalysisHeaderDict_167_0_106, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLumiWeight",1311,G__GAnalysisHeaderDict_167_0_107, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IncreaseChosenMuons",1948,G__GAnalysisHeaderDict_167_0_108, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IncreaseEfficiencyResetMuons",2868,G__GAnalysisHeaderDict_167_0_109, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GAnalysisHeaderDict_167_0_110, 85, G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GAnalysisHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GAnalysisHeaderDict_167_0_111, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GAnalysisHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GAnalysisHeaderDict_167_0_112, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GAnalysisHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GAnalysisHeaderDict_167_0_113, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GAnalysisHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GAnalysisHeaderDict_167_0_117, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GAnalysisHeaderDict_167_0_118, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GAnalysisHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GAnalysisHeaderDict_167_0_119, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GAnalysisHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GAnalysisHeaderDict_167_0_120, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GAnalysisHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GAnalysisHeaderDict_167_0_121, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GAnalysisHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GAnalysisHeader", 1492, G__GAnalysisHeaderDict_167_0_122, (int) ('i'), G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_GAnalysisHeader), -1, 0, 1, 1, 1, 0, "u 'GAnalysisHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GAnalysisHeader", 1618, G__GAnalysisHeaderDict_167_0_123, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GAnalysisHeaderDict_167_0_124, (int) ('u'), G__get_linked_tagnum(&G__GAnalysisHeaderDictLN_GAnalysisHeader), -1, 1, 1, 1, 1, 0, "u 'GAnalysisHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGAnalysisHeaderDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGAnalysisHeaderDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGAnalysisHeaderDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GAnalysisHeaderDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GAnalysisHeaderDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GAnalysisHeaderDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GAnalysisHeaderDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GAnalysisHeaderDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__GAnalysisHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GAnalysisHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GAnalysisHeaderDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GAnalysisHeaderDictLN_GMuon = { "GMuon" , 99 , -1 };
G__linked_taginfo G__GAnalysisHeaderDictLN_GAnalysisHeader = { "GAnalysisHeader" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGAnalysisHeaderDict() {
  G__GAnalysisHeaderDictLN_TClass.tagnum = -1 ;
  G__GAnalysisHeaderDictLN_TBuffer.tagnum = -1 ;
  G__GAnalysisHeaderDictLN_TMemberInspector.tagnum = -1 ;
  G__GAnalysisHeaderDictLN_TObject.tagnum = -1 ;
  G__GAnalysisHeaderDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__GAnalysisHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GAnalysisHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GAnalysisHeaderDictLN_TString.tagnum = -1 ;
  G__GAnalysisHeaderDictLN_GMuon.tagnum = -1 ;
  G__GAnalysisHeaderDictLN_GAnalysisHeader.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGAnalysisHeaderDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GAnalysisHeaderDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GAnalysisHeaderDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GAnalysisHeaderDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GAnalysisHeaderDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GAnalysisHeaderDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__GAnalysisHeaderDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GAnalysisHeaderDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GAnalysisHeaderDictLN_TString);
   G__get_linked_tagnum_fwd(&G__GAnalysisHeaderDictLN_GMuon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GAnalysisHeaderDictLN_GAnalysisHeader),sizeof(GAnalysisHeader),-1,29952,"Analysis Header",G__setup_memvarGAnalysisHeader,G__setup_memfuncGAnalysisHeader);
}
extern "C" void G__cpp_setupGAnalysisHeaderDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGAnalysisHeaderDict()");
  G__set_cpp_environmentGAnalysisHeaderDict();
  G__cpp_setup_tagtableGAnalysisHeaderDict();

  G__cpp_setup_inheritanceGAnalysisHeaderDict();

  G__cpp_setup_typetableGAnalysisHeaderDict();

  G__cpp_setup_memvarGAnalysisHeaderDict();

  G__cpp_setup_memfuncGAnalysisHeaderDict();
  G__cpp_setup_globalGAnalysisHeaderDict();
  G__cpp_setup_funcGAnalysisHeaderDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGAnalysisHeaderDict();
  return;
}
class G__cpp_setup_initGAnalysisHeaderDict {
  public:
    G__cpp_setup_initGAnalysisHeaderDict() { G__add_setup_func("GAnalysisHeaderDict",(G__incsetup)(&G__cpp_setupGAnalysisHeaderDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGAnalysisHeaderDict() { G__remove_setup_func("GAnalysisHeaderDict"); }
};
G__cpp_setup_initGAnalysisHeaderDict G__cpp_setup_initializerGAnalysisHeaderDict;

