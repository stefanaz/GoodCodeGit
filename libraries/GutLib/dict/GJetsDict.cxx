//
// File generated by rootcint at Fri Oct 24 10:57:59 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GJetsDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GJets_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_GJets(void *p = 0);
   static void *newArray_GJets(Long_t size, void *p);
   static void delete_GJets(void *p);
   static void deleteArray_GJets(void *p);
   static void destruct_GJets(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GJets*)
   {
      ::GJets *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GJets >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GJets", ::GJets::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GJets.h", 16,
                  typeid(::GJets), DefineBehavior(ptr, ptr),
                  &::GJets::Dictionary, isa_proxy, 0,
                  sizeof(::GJets) );
      instance.SetNew(&new_GJets);
      instance.SetNewArray(&newArray_GJets);
      instance.SetDelete(&delete_GJets);
      instance.SetDeleteArray(&deleteArray_GJets);
      instance.SetDestructor(&destruct_GJets);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GJets*)
   {
      return GenerateInitInstanceLocal((::GJets*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GJets*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GJets::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GJets::Class_Name()
{
   return "GJets";
}

//______________________________________________________________________________
const char *GJets::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GJets*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GJets::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GJets*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GJets::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GJets*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GJets::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GJets*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GJets::Streamer(TBuffer &R__b)
{
   // Stream an object of class GJets.

   GPhysObj::Streamer(R__b);
}

//______________________________________________________________________________
void GJets::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GJets.
      TClass *R__cl = ::GJets::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fJets", &fJets);
      R__insp.Inspect(R__cl, R__parent, "fNJets", &fNJets);
      R__insp.Inspect(R__cl, R__parent, "fPtACut", &fPtACut);
      R__insp.Inspect(R__cl, R__parent, "fPtBCut", &fPtBCut);
      R__insp.Inspect(R__cl, R__parent, "fIndex1", &fIndex1);
      R__insp.Inspect(R__cl, R__parent, "fIndex2", &fIndex2);
      R__insp.Inspect(R__cl, R__parent, "fXGammaJets", &fXGammaJets);
      R__insp.Inspect(R__cl, R__parent, "fXGamma", &fXGamma);
      R__insp.Inspect(R__cl, R__parent, "fXGammaJets_zufo", &fXGammaJets_zufo);
      R__insp.Inspect(R__cl, R__parent, "fMJets", &fMJets);
      R__insp.Inspect(R__cl, R__parent, "fDPhiJets", &fDPhiJets);
      R__insp.Inspect(R__cl, R__parent, "fDRJets", &fDRJets);
      R__insp.Inspect(R__cl, R__parent, "fPtJets", &fPtJets);
      R__insp.Inspect(R__cl, R__parent, "fCosThetaStarJets", &fCosThetaStarJets);
      R__insp.Inspect(R__cl, R__parent, "fEtaJets", &fEtaJets);
      R__insp.Inspect(R__cl, R__parent, "*fGeneraln", &fGeneraln);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralE_A", &fGeneralE_A);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralE_B", &fGeneralE_B);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPt_A", &fGeneralPt_A);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPt_B", &fGeneralPt_B);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_A", &fGeneralEt_A);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_B", &fGeneralEt_B);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_A_breit", &fGeneralEt_A_breit);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_B_breit", &fGeneralEt_B_breit);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEta_A", &fGeneralEta_A);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEta_B", &fGeneralEta_B);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEta_A_Large", &fGeneralEta_A_Large);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEta_B_Large", &fGeneralEta_B_Large);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhi_A", &fGeneralPhi_A);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhi_B", &fGeneralPhi_B);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralXGamma", &fGeneralXGamma);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralXGamma2", &fGeneralXGamma2);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralXGamma_zufo", &fGeneralXGamma_zufo);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMJets", &fGeneralMJets);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralDPhiJets", &fGeneralDPhiJets);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtJets", &fGeneralPtJets);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMass_A", &fGeneralMass_A);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMass_B", &fGeneralMass_B);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMass_Matched", &fGeneralMass_Matched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMass_Unmatched", &fGeneralMass_Unmatched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPt_Matched", &fGeneralPt_Matched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPt_Unmatched", &fGeneralPt_Unmatched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_Matched", &fGeneralEt_Matched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_Unmatched", &fGeneralEt_Unmatched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_Matched_breit", &fGeneralEt_Matched_breit);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_Unmatched_breit", &fGeneralEt_Unmatched_breit);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCostherastarXgamma", &fGeneralCostherastarXgamma);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_0_10_Matched", &fGeneralEt_0_10_Matched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_0_10_Unmatched", &fGeneralEt_0_10_Unmatched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_10_200_Matched", &fGeneralEt_10_200_Matched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_10_200_Unmatched", &fGeneralEt_10_200_Unmatched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_200_Matched", &fGeneralEt_200_Matched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_200_Unmatched", &fGeneralEt_200_Unmatched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_0_10_Matched_breit", &fGeneralEt_0_10_Matched_breit);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_0_10_Unmatched_breit", &fGeneralEt_0_10_Unmatched_breit);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_10_200_Matched_breit", &fGeneralEt_10_200_Matched_breit);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_10_200_Unmatched_breit", &fGeneralEt_10_200_Unmatched_breit);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_200_Matched_breit", &fGeneralEt_200_Matched_breit);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_200_Unmatched_breit", &fGeneralEt_200_Unmatched_breit);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEta_Matched", &fGeneralEta_Matched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEta_Unmatched", &fGeneralEta_Unmatched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEta_Matched_Large", &fGeneralEta_Matched_Large);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEta_Unmatched_Large", &fGeneralEta_Unmatched_Large);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhi_Matched", &fGeneralPhi_Matched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhi_Unmatched", &fGeneralPhi_Unmatched);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtMinPtTrue", &fGeneralPtMinPtTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtVsPtTrue", &fGeneralPtVsPtTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaMinEtaTrue", &fGeneralEtaMinEtaTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaVsEtaTrue", &fGeneralEtaVsEtaTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneraln_uncut", &fGeneraln_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralE_uncut", &fGeneralE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPt_uncut", &fGeneralPt_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEt_uncut", &fGeneralEt_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEta_uncut", &fGeneralEta_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhi_uncut", &fGeneralPhi_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMass_uncut", &fGeneralMass_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralXGamma_uncut", &fGeneralXGamma_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralXGamma_zufo_uncut", &fGeneralXGamma_zufo_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetPt", &fGeneralCrossMuonJetPt);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetPtRecNTrue", &fGeneralCrossMuonJetPtRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetEta", &fGeneralCrossMuonJetEta);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetEtaRecNTrue", &fGeneralCrossMuonJetEtaRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetPtFine", &fGeneralCrossMuonJetPtFine);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetPtFineRecNTrue", &fGeneralCrossMuonJetPtFineRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetEtaFine", &fGeneralCrossMuonJetEtaFine);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossMuonJetEtaFineRecNTrue", &fGeneralCrossMuonJetEtaFineRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetXGamma", &fGeneralCrossJetXGamma);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetXGammaRecNTrue", &fGeneralCrossJetXGammaRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetXGammaFine", &fGeneralCrossJetXGammaFine);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetXGammaFineRecNTrue", &fGeneralCrossJetXGammaFineRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJets", &fGeneralCrossJetMJets);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsRecNTrue", &fGeneralCrossJetMJetsRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsLow", &fGeneralCrossJetMJetsLow);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsLowRecNTrue", &fGeneralCrossJetMJetsLowRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsHigh", &fGeneralCrossJetMJetsHigh);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetMJetsHighRecNTrue", &fGeneralCrossJetMJetsHighRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJets", &fGeneralCrossJetDPhiJets);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsRecNTrue", &fGeneralCrossJetDPhiJetsRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsLow", &fGeneralCrossJetDPhiJetsLow);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsLowRecNTrue", &fGeneralCrossJetDPhiJetsLowRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsHigh", &fGeneralCrossJetDPhiJetsHigh);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDPhiJetsHighRecNTrue", &fGeneralCrossJetDPhiJetsHighRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJets", &fGeneralCrossJetDRJets);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsRecNTrue", &fGeneralCrossJetDRJetsRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsLow", &fGeneralCrossJetDRJetsLow);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsLowRecNTrue", &fGeneralCrossJetDRJetsLowRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsHigh", &fGeneralCrossJetDRJetsHigh);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetDRJetsHighRecNTrue", &fGeneralCrossJetDRJetsHighRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJets", &fGeneralCrossJetPtJets);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsRecNTrue", &fGeneralCrossJetPtJetsRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsLow", &fGeneralCrossJetPtJetsLow);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsLowRecNTrue", &fGeneralCrossJetPtJetsLowRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsHigh", &fGeneralCrossJetPtJetsHigh);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetPtJetsHighRecNTrue", &fGeneralCrossJetPtJetsHighRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJets", &fGeneralCrossJetCosThetaStarJets);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsRecNTrue", &fGeneralCrossJetCosThetaStarJetsRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsLow", &fGeneralCrossJetCosThetaStarJetsLow);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsLowRecNTrue", &fGeneralCrossJetCosThetaStarJetsLowRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsHigh", &fGeneralCrossJetCosThetaStarJetsHigh);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossJetCosThetaStarJetsHighRecNTrue", &fGeneralCrossJetCosThetaStarJetsHighRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fControlPt_uncut", &fControlPt_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlEta_uncut", &fControlEta_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtA", &fControlPtA);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtB", &fControlPtB);
      R__insp.Inspect(R__cl, R__parent, "*fControlEtaA", &fControlEtaA);
      R__insp.Inspect(R__cl, R__parent, "*fControlEtaB", &fControlEtaB);
      GPhysObj::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GJets(void *p) {
      return  p ? new(p) ::GJets : new ::GJets;
   }
   static void *newArray_GJets(Long_t nElements, void *p) {
      return p ? new(p) ::GJets[nElements] : new ::GJets[nElements];
   }
   // Wrapper around operator delete
   static void delete_GJets(void *p) {
      delete ((::GJets*)p);
   }
   static void deleteArray_GJets(void *p) {
      delete [] ((::GJets*)p);
   }
   static void destruct_GJets(void *p) {
      typedef ::GJets current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GJets

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GJetsDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGJetsDict();

extern "C" void G__set_cpp_environmentGJetsDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GJets.h");
  G__cpp_reset_tagtableGJetsDict();
}
#include <new>
extern "C" int G__cpp_dllrevGJetsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GJets */
static int G__GJetsDict_164_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GJets* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GJets[n];
     } else {
       p = new((void*) gvp) GJets[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GJets;
     } else {
       p = new((void*) gvp) GJets;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GJetsDictLN_GJets));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GJets*) G__getstructoffset())->ObjectsFillHistos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GJets*) G__getstructoffset())->ObjectsFillGeneral((GJet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GJets*) G__getstructoffset())->ObjectsFillControl((GJet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GJets*) G__getstructoffset())->Fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GJets*) G__getstructoffset())->Calc((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetEtbreit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetPt((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GJets*) G__getstructoffset())->GetJet((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GJets*) G__getstructoffset())->GetJetWithID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GJets*) G__getstructoffset())->GetNJets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GJets*) G__getstructoffset())->GetPtACut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GJets*) G__getstructoffset())->GetPtBCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetXGamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetXGamma_zufo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetXGamma2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetMJets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetDPhiJets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetDRJets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetPtJets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetCosThetaStarJets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GJets*) G__getstructoffset())->GetEtaJets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GJets*) G__getstructoffset())->GetHighestJetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GJets*) G__getstructoffset())->GetSecondHighestJetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GJets*) G__getstructoffset())->SetCosThetaStarJets((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GJets::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GJets::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GJets::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GJets::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GJets*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GJets::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GJets::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GJets::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GJetsDict_164_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GJets::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GJetsDict_164_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GJets* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GJets(*(GJets*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GJetsDictLN_GJets));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GJets G__TGJets;
static int G__GJetsDict_164_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GJets*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GJets*) (soff+(sizeof(GJets)*i)))->~G__TGJets();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GJets*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GJets*) (soff))->~G__TGJets();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GJetsDict_164_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GJets* dest = (GJets*) G__getstructoffset();
   *dest = *(GJets*) libp->para[0].ref;
   const GJets& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GJets */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGJetsDict {
 public:
  G__Sizep2memfuncGJetsDict(): p(&G__Sizep2memfuncGJetsDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGJetsDict::*p)();
};

size_t G__get_sizep2memfuncGJetsDict()
{
  G__Sizep2memfuncGJetsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGJetsDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GJetsDictLN_GJets))) {
     GJets *G__Lderived;
     G__Lderived=(GJets*)0x1000;
     {
       GPhysObj *G__Lpbase=(GPhysObj*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GJetsDictLN_GJets),G__get_linked_tagnum(&G__GJetsDictLN_GPhysObj),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GJetsDictLN_GJets),G__get_linked_tagnum(&G__GJetsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGJetsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GJetsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GJetsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GJetsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GJetsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GJetsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GJetsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GJets */
static void G__setup_memvarGJets(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GJetsDictLN_GJets));
   { GJets *p; p=(GJets*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TClonesArray),-1,-1,4,"fJets=",0,"array of jets");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNJets=",0,"jet counter  ");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPtACut=",0,"event with one jet fulfilling cuts on p_t for highest p_t jet and eta");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPtBCut=",0,"event with one jet fulfilling cuts on p_t for second highest p_t jet and eta");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIndex1=",0,"index of highest jet");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIndex2=",0,"index of second highest jet");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXGammaJets=",0,"x_gamma^jets");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXGamma=",0,"x_gamma^jets in second definition");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXGammaJets_zufo=",0,"x_gamma^jets with zufo properties");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMJets=",0,"dijet invariant mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDPhiJets=",0,"dphi from jets");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDRJets=",0,"dr from jets");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPtJets=",0,"p_T of dijet system");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCosThetaStarJets=",0,"cos ( theta* )");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEtaJets=",0,"average eta of jets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneraln=",0,"number of jets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralE_A=",0,"energy for highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralE_B=",0,"energy for second highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPt_A=",0,"transverse momentum for highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPt_B=",0,"transverse momentum for second highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_A=",0,"transverse energy for highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_B=",0,"transverse energy for second highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_A_breit=",0,"transverse energy for highest transverse momentum jet in breitframe variables");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_B_breit=",0,"transverse energy for second highest transverse momentum jet in breitframe variables");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEta_A=",0,"pseudorapidity for highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEta_B=",0,"pseudorapidity for second highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEta_A_Large=",0,"pseudorapidity for highest transverse momentum jet in large eta range");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEta_B_Large=",0,"pseudorapidity for second highest transverse momentum jet in large eta range");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPhi_A=",0,"phi for highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPhi_B=",0,"phi for second highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralXGamma=",0,"x_gamma^jet plot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralXGamma2=",0,"x_gamma^jet plot 2nd definition");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralXGamma_zufo=",0,"x_gamma^jet plot with zufo properties");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralMJets=",0,"jet dijet invariant mass");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralDPhiJets=",0,"jet dijet dphi");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPtJets=",0,"jet dijet p_T");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralMass_A=",0,"jet mass for highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralMass_B=",0,"jet mass for second highest transverse momentum jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralMass_Matched=",0,"jet mass for highest or second highest transverse momentum jet which is matched to an muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralMass_Unmatched=",0,"jet mass for highest or second highest transverse momentum jet which is not matched to an muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPt_Matched=",0,"transverse momentum for highest or second highest transverse momentum jet which is matched to an muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPt_Unmatched=",0,"transverse momentum for highest or second highest transverse momentum jet which is not matched to an muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_Matched=",0,"transverse energy for highest or second highest transverse momentum jet which is matched to an muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_Unmatched=",0,"transverse energy for highest or second highest transverse momentum jet which is not matched to an muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_Matched_breit=",0,"transverse energy for highest or second highest transverse momentum jet which is matched to an muon in breitframe variables");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_Unmatched_breit=",0,"transverse energy for highest or second highest transverse momentum jet which is not matched to an muon in breitframe variables");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCostherastarXgamma=",0,"xgamma used for mjmatchcosthetastar plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_0_10_Matched=",0,"transverse energy for highest or second highest transverse momentum jet which is matched to an muon for 0 < Q2 < 10 ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_0_10_Unmatched=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_10_200_Matched=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_10_200_Unmatched=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_200_Matched=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_200_Unmatched=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_0_10_Matched_breit=",0,"transverse energy for highest or second highest transverse momentum jet which is matched to an muon for 0 < Q2 < 10 in breitframe vars.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_0_10_Unmatched_breit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_10_200_Matched_breit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_10_200_Unmatched_breit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_200_Matched_breit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_200_Unmatched_breit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEta_Matched=",0,"pseudorapidity for highest or second highest transverse momentum jet which is matched to an muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEta_Unmatched=",0,"pseudorapidity for highest or second highest transverse momentum jet which is not matched to an muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEta_Matched_Large=",0,"pseudorapidity for highest or second highest transverse momentum jet which is matched to an muon in large eta range");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEta_Unmatched_Large=",0,"pseudorapidity for highest or second highest transverse momentum jet which is not matched to an muon in large eta range");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPhi_Matched=",0,"phi for highest or second highest transverse momentum jet which is matched to an muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPhi_Unmatched=",0,"phi for highest or second highest transverse momentum jet which is not matched to an muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPtMinPtTrue=",0,"for all good jets: (p_T - p_T^TRUE)/p_T^TRUE");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH2D),-1,-1,4,"fGeneralPtVsPtTrue=",0,"for all good jets: p_T vs. p_T^TRUE");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEtaMinEtaTrue=",0,"for all good jets: (eta - eta^TRUE)/eta^TRUE");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH2D),-1,-1,4,"fGeneralEtaVsEtaTrue=",0,"for all good jets: eta vs. eta^TRUE");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneraln_uncut=",0,"uncut number of jets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralE_uncut=",0,"uncut energy");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPt_uncut=",0,"uncut transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEt_uncut=",0,"uncut transverse energy");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralEta_uncut=",0,"uncut pseudorapidity in large eta range");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralPhi_uncut=",0,"uncut phi");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralMass_uncut=",0,"jet mass");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralXGamma_uncut=",0,"x_gamma^jet plot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralXGamma_zufo_uncut=",0,"x_gamma^jet plot with zufo properties");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetPt=",0,"muon jet pt for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetPtRecNTrue=",0,"muon jet pt  rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetEta=",0,"muon jet eta for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetEtaRecNTrue=",0,"muon jet eta  rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetPtFine=",0,"fine muon jet pt for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetPtFineRecNTrue=",0,"fine muon jet pt  rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetEtaFine=",0,"fine muon jet eta for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossMuonJetEtaFineRecNTrue=",0,"fine muon jet eta  rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetXGamma=",0,"x_gamma_zufo for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetXGammaRecNTrue=",0,"x_gamma_zufo rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetXGammaFine=",0,"fine x_gamma_zufo for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetXGammaFineRecNTrue=",0,"fine x_gamma_zufo rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJets=",0,"jet dijet invariant mass for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsRecNTrue=",0,"jet dijet invariant mass rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsLow=",0,"jet dijet invariant mass for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsLowRecNTrue=",0,"jet dijet invariant mass rec and true for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsHigh=",0,"jet dijet invariant mass for cross section for x_gamma > 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetMJetsHighRecNTrue=",0,"jet dijet invariant mass rec and true for cross section for x_gamma > 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJets=",0,"jet dijet dphi for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsRecNTrue=",0,"jet dijet dphi rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsLow=",0,"jet dijet dphi for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsLowRecNTrue=",0,"jet dijet dphi rec and true for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsHigh=",0,"jet dijet dphi for cross section for x_gamma > 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDPhiJetsHighRecNTrue=",0,"jet dijet dphi rec and true for cross section for x_gamma > 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJets=",0,"jet dijet dr for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsRecNTrue=",0,"jet dijet dr rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsLow=",0,"jet dijet dr for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsLowRecNTrue=",0,"jet dijet dr rec and true for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsHigh=",0,"jet dijet dr for cross section for x_gamma > 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetDRJetsHighRecNTrue=",0,"jet dijet dr rec and true for cross section for x_gamma > 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJets=",0,"jet dijet p_T for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsRecNTrue=",0,"jet dijet p_T rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsLow=",0,"jet dijet p_T for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsLowRecNTrue=",0,"jet dijet p_T rec and true for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsHigh=",0,"jet dijet p_T for cross section for x_gamma > 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetPtJetsHighRecNTrue=",0,"jet dijet p_T rec and true for cross section for x_gamma > 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJets=",0,"jet cos(theta*) for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsRecNTrue=",0,"jet cos(theta*) rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsLow=",0,"jet cos(theta*) for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsLowRecNTrue=",0,"jet cos(theta*) rec and true for cross section for x_gamma < 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsHigh=",0,"jet cos(theta*) for cross section for x_gamma > 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fGeneralCrossJetCosThetaStarJetsHighRecNTrue=",0,"jet cos(theta*) rec and true for cross section for x_gamma > 0.75");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fControlPt_uncut=",0,"uncut control plot for p_t");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fControlEta_uncut=",0,"uncut control plot for eta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fControlPtA=",0,"control plot for p_t of highest jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fControlPtB=",0,"control plot for p_t of second highest jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fControlEtaA=",0,"control plot for eta of highest jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TH1D),-1,-1,4,"fControlEtaB=",0,"control plot for eta of second highest jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GJetsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGJetsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGJets(void) {
   /* GJets */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GJetsDictLN_GJets));
   G__memfunc_setup("GJets",477,G__GJetsDict_164_0_1, 105, G__get_linked_tagnum(&G__GJetsDictLN_GJets), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHistos",1025,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateGeneral",1298,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillGeneral",1093,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateControl",1333,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillControl",1128,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillHistos",1739,G__GJetsDict_164_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillGeneral",1807,G__GJetsDict_164_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GJet' - 0 - jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillControl",1842,G__GJetsDict_164_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GJet' - 0 - jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Do",179,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,G__GJetsDict_164_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calc",371,G__GJetsDict_164_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index1 i - 'Int_t' 0 - index2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetE",357,G__GJetsDict_164_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEtbreit",1007,G__GJetsDict_164_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPt",484,G__GJetsDict_164_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJet",579,G__GJetsDict_164_0_17, 85, G__get_linked_tagnum(&G__GJetsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetWithID",1132,G__GJetsDict_164_0_18, 85, G__get_linked_tagnum(&G__GJetsDictLN_GJet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintMessage",1234,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__GJetsDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNJets",772,G__GJetsDict_164_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPtACut",849,G__GJetsDict_164_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPtBCut",850,G__GJetsDict_164_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAllCuts",984,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXGamma",859,G__GJetsDict_164_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXGamma_zufo",1406,G__GJetsDict_164_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXGamma2",909,G__GJetsDict_164_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMJets",771,G__GJetsDict_164_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDPhiJets",1051,G__GJetsDict_164_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDRJets",844,G__GJetsDict_164_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPtJets",890,G__GJetsDict_164_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCosThetaStarJets",1899,G__GJetsDict_164_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEtaJets",976,G__GJetsDict_164_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHighestJetID",1436,G__GJetsDict_164_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSecondHighestJetID",2040,G__GJetsDict_164_0_35, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCosThetaStarJets",1911,G__GJetsDict_164_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GJetsDict_164_0_37, 85, G__get_linked_tagnum(&G__GJetsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GJets::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GJetsDict_164_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GJets::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GJetsDict_164_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GJets::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GJetsDict_164_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GJets::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GJetsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GJetsDict_164_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GJetsDict_164_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GJets::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GJetsDict_164_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GJets::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GJetsDict_164_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GJets::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GJetsDict_164_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GJets::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GJets", 477, G__GJetsDict_164_0_49, (int) ('i'), G__get_linked_tagnum(&G__GJetsDictLN_GJets), -1, 0, 1, 1, 1, 0, "u 'GJets' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GJets", 603, G__GJetsDict_164_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GJetsDict_164_0_51, (int) ('u'), G__get_linked_tagnum(&G__GJetsDictLN_GJets), -1, 1, 1, 1, 1, 0, "u 'GJets' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGJetsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGJetsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGJetsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GJetsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_GJet = { "GJet" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_GPhysObj = { "GPhysObj" , 99 , -1 };
G__linked_taginfo G__GJetsDictLN_GJets = { "GJets" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGJetsDict() {
  G__GJetsDictLN_TClass.tagnum = -1 ;
  G__GJetsDictLN_TBuffer.tagnum = -1 ;
  G__GJetsDictLN_TMemberInspector.tagnum = -1 ;
  G__GJetsDictLN_TObject.tagnum = -1 ;
  G__GJetsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GJetsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GJetsDictLN_TString.tagnum = -1 ;
  G__GJetsDictLN_TClonesArray.tagnum = -1 ;
  G__GJetsDictLN_TH1D.tagnum = -1 ;
  G__GJetsDictLN_TH2D.tagnum = -1 ;
  G__GJetsDictLN_GJet.tagnum = -1 ;
  G__GJetsDictLN_GPhysObj.tagnum = -1 ;
  G__GJetsDictLN_GJets.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGJetsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_TString);
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_GJet);
   G__get_linked_tagnum_fwd(&G__GJetsDictLN_GPhysObj);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GJetsDictLN_GJets),sizeof(GJets),-1,29952,"Jets Class for everything which is related only to JETs",G__setup_memvarGJets,G__setup_memfuncGJets);
}
extern "C" void G__cpp_setupGJetsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGJetsDict()");
  G__set_cpp_environmentGJetsDict();
  G__cpp_setup_tagtableGJetsDict();

  G__cpp_setup_inheritanceGJetsDict();

  G__cpp_setup_typetableGJetsDict();

  G__cpp_setup_memvarGJetsDict();

  G__cpp_setup_memfuncGJetsDict();
  G__cpp_setup_globalGJetsDict();
  G__cpp_setup_funcGJetsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGJetsDict();
  return;
}
class G__cpp_setup_initGJetsDict {
  public:
    G__cpp_setup_initGJetsDict() { G__add_setup_func("GJetsDict",(G__incsetup)(&G__cpp_setupGJetsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGJetsDict() { G__remove_setup_func("GJetsDict"); }
};
G__cpp_setup_initGJetsDict G__cpp_setup_initializerGJetsDict;

