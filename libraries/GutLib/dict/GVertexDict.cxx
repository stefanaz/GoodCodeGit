//
// File generated by rootcint at Thu Oct 23 10:41:40 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GVertexDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GVertex_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_GVertex(void *p = 0);
   static void *newArray_GVertex(Long_t size, void *p);
   static void delete_GVertex(void *p);
   static void deleteArray_GVertex(void *p);
   static void destruct_GVertex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GVertex*)
   {
      ::GVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GVertex", ::GVertex::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GVertex.h", 18,
                  typeid(::GVertex), DefineBehavior(ptr, ptr),
                  &::GVertex::Dictionary, isa_proxy, 0,
                  sizeof(::GVertex) );
      instance.SetNew(&new_GVertex);
      instance.SetNewArray(&newArray_GVertex);
      instance.SetDelete(&delete_GVertex);
      instance.SetDeleteArray(&deleteArray_GVertex);
      instance.SetDestructor(&destruct_GVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GVertex*)
   {
      return GenerateInitInstanceLocal((::GVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GVertex::Class_Name()
{
   return "GVertex";
}

//______________________________________________________________________________
const char *GVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GVertex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class GVertex.

   GPhysObj::Streamer(R__b);
}

//______________________________________________________________________________
void GVertex::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GVertex.
      TClass *R__cl = ::GVertex::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fZCut", &fZCut);
      R__insp.Inspect(R__cl, R__parent, "fXCut", &fXCut);
      R__insp.Inspect(R__cl, R__parent, "fYCut", &fYCut);
      R__insp.Inspect(R__cl, R__parent, "fXYCut", &fXYCut);
      R__insp.Inspect(R__cl, R__parent, "fBeamSpotCut", &fBeamSpotCut);
      R__insp.Inspect(R__cl, R__parent, "fRedprm_X", &fRedprm_X);
      R__insp.Inspect(R__cl, R__parent, "fRedprm_Y", &fRedprm_Y);
      R__insp.Inspect(R__cl, R__parent, "fRedprm_Z", &fRedprm_Z);
      R__insp.Inspect(R__cl, R__parent, "fRedprm_Chi2", &fRedprm_Chi2);
      R__insp.Inspect(R__cl, R__parent, "fRedprm_Cov1", &fRedprm_Cov1);
      R__insp.Inspect(R__cl, R__parent, "fRedprm_Cov2", &fRedprm_Cov2);
      R__insp.Inspect(R__cl, R__parent, "fRedprm_Cov3", &fRedprm_Cov3);
      R__insp.Inspect(R__cl, R__parent, "fRedprm_Cov4", &fRedprm_Cov4);
      R__insp.Inspect(R__cl, R__parent, "fRedprm_Cov5", &fRedprm_Cov5);
      R__insp.Inspect(R__cl, R__parent, "fRedprm_Cov6", &fRedprm_Cov6);
      R__insp.Inspect(R__cl, R__parent, "fRedprm_Ndof", &fRedprm_Ndof);
      R__insp.Inspect(R__cl, R__parent, "fNr_secvtx", &fNr_secvtx);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_X", &fSecvtx_X);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Y", &fSecvtx_Y);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Z", &fSecvtx_Z);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Mass", &fSecvtx_Mass);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Chi2", &fSecvtx_Chi2);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Ndof", &fSecvtx_Ndof);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Multi", &fSecvtx_Multi);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Cov1", &fSecvtx_Cov1);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Cov2", &fSecvtx_Cov2);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Cov3", &fSecvtx_Cov3);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Cov4", &fSecvtx_Cov4);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Cov5", &fSecvtx_Cov5);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_Cov6", &fSecvtx_Cov6);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_DL2", &fSecvtx_DL2);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_DL2_err", &fSecvtx_DL2_err);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx_DL2_sign", &fSecvtx_DL2_sign);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_X", &fSecvtx2D_X);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_Y", &fSecvtx2D_Y);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_Z", &fSecvtx2D_Z);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_Mass", &fSecvtx2D_Mass);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_Chi2", &fSecvtx2D_Chi2);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_Ndof", &fSecvtx2D_Ndof);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_Cov1", &fSecvtx2D_Cov1);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_Cov2", &fSecvtx2D_Cov2);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_Cov3", &fSecvtx2D_Cov3);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_Cov4", &fSecvtx2D_Cov4);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_Cov5", &fSecvtx2D_Cov5);
      R__insp.Inspect(R__cl, R__parent, "fSecvtx2D_Cov6", &fSecvtx2D_Cov6);
      R__insp.Inspect(R__cl, R__parent, "*fControlX_uncut", &fControlX_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlY_uncut", &fControlY_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlZ_uncut", &fControlZ_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlXY_uncut", &fControlXY_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlRedprm_X_uncut", &fControlRedprm_X_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlRedprm_Y_uncut", &fControlRedprm_Y_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlRedprm_Z_uncut", &fControlRedprm_Z_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlRedprm_Chi2_uncut", &fControlRedprm_Chi2_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlRedprm_Ndof_uncut", &fControlRedprm_Ndof_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlNr_secvtx_uncut", &fControlNr_secvtx_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_X_uncut", &fControlSecvtx_X_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Y_uncut", &fControlSecvtx_Y_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Z_uncut", &fControlSecvtx_Z_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Mass_uncut", &fControlSecvtx_Mass_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Chi2_uncut", &fControlSecvtx_Chi2_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Ndof_uncut", &fControlSecvtx_Ndof_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Multi_uncut", &fControlSecvtx_Multi_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov1_uncut", &fControlSecvtx_Cov1_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov2_uncut", &fControlSecvtx_Cov2_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov3_uncut", &fControlSecvtx_Cov3_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov4_uncut", &fControlSecvtx_Cov4_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov5_uncut", &fControlSecvtx_Cov5_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov6_uncut", &fControlSecvtx_Cov6_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_X_uncut", &fControlSecvtx2D_X_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_Y_uncut", &fControlSecvtx2D_Y_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_Z_uncut", &fControlSecvtx2D_Z_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_Mass_uncut", &fControlSecvtx2D_Mass_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_Chi2_uncut", &fControlSecvtx2D_Chi2_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_Ndof_uncut", &fControlSecvtx2D_Ndof_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlXMCTRUE_uncut", &fControlXMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlYMCTRUE_uncut", &fControlYMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlZMCTRUE_uncut", &fControlZMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlX", &fControlX);
      R__insp.Inspect(R__cl, R__parent, "*fControlY", &fControlY);
      R__insp.Inspect(R__cl, R__parent, "*fControlZ", &fControlZ);
      R__insp.Inspect(R__cl, R__parent, "*fControlXY", &fControlXY);
      R__insp.Inspect(R__cl, R__parent, "*fControlRedprm_X", &fControlRedprm_X);
      R__insp.Inspect(R__cl, R__parent, "*fControlRedprm_Y", &fControlRedprm_Y);
      R__insp.Inspect(R__cl, R__parent, "*fControlRedprm_Z", &fControlRedprm_Z);
      R__insp.Inspect(R__cl, R__parent, "*fControlRedprm_Chi2", &fControlRedprm_Chi2);
      R__insp.Inspect(R__cl, R__parent, "*fControlRedprm_Ndof", &fControlRedprm_Ndof);
      R__insp.Inspect(R__cl, R__parent, "*fControlNr_secvtx", &fControlNr_secvtx);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_X", &fControlSecvtx_X);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Y", &fControlSecvtx_Y);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Z", &fControlSecvtx_Z);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Mass", &fControlSecvtx_Mass);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Chi2", &fControlSecvtx_Chi2);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Ndof", &fControlSecvtx_Ndof);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Multi", &fControlSecvtx_Multi);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov1", &fControlSecvtx_Cov1);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov2", &fControlSecvtx_Cov2);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov3", &fControlSecvtx_Cov3);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov4", &fControlSecvtx_Cov4);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov5", &fControlSecvtx_Cov5);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx_Cov6", &fControlSecvtx_Cov6);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_X", &fControlSecvtx2D_X);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_Y", &fControlSecvtx2D_Y);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_Z", &fControlSecvtx2D_Z);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_Mass", &fControlSecvtx2D_Mass);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_Chi2", &fControlSecvtx2D_Chi2);
      R__insp.Inspect(R__cl, R__parent, "*fControlSecvtx2D_Ndof", &fControlSecvtx2D_Ndof);
      R__insp.Inspect(R__cl, R__parent, "*fControlXMCTRUE", &fControlXMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fControlYMCTRUE", &fControlYMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fControlZMCTRUE", &fControlZMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralX_uncut", &fGeneralX_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralY_uncut", &fGeneralY_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralZ_uncut", &fGeneralZ_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRedprm_X_uncut", &fGeneralRedprm_X_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRedprm_Y_uncut", &fGeneralRedprm_Y_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRedprm_Z_uncut", &fGeneralRedprm_Z_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRedprm_Chi2_uncut", &fGeneralRedprm_Chi2_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRedprm_Ndof_uncut", &fGeneralRedprm_Ndof_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralNr_secvtx_uncut", &fGeneralNr_secvtx_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_X_uncut", &fGeneralSecvtx_X_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Y_uncut", &fGeneralSecvtx_Y_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Z_uncut", &fGeneralSecvtx_Z_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Mass_uncut", &fGeneralSecvtx_Mass_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Chi2_uncut", &fGeneralSecvtx_Chi2_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Ndof_uncut", &fGeneralSecvtx_Ndof_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Multi_uncut", &fGeneralSecvtx_Multi_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov1_uncut", &fGeneralSecvtx_Cov1_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov2_uncut", &fGeneralSecvtx_Cov2_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov3_uncut", &fGeneralSecvtx_Cov3_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov4_uncut", &fGeneralSecvtx_Cov4_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov5_uncut", &fGeneralSecvtx_Cov5_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov6_uncut", &fGeneralSecvtx_Cov6_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_X_uncut", &fGeneralSecvtx2D_X_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_Y_uncut", &fGeneralSecvtx2D_Y_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_Z_uncut", &fGeneralSecvtx2D_Z_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_Mass_uncut", &fGeneralSecvtx2D_Mass_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_Chi2_uncut", &fGeneralSecvtx2D_Chi2_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_Ndof_uncut", &fGeneralSecvtx2D_Ndof_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralXMCTRUE_uncut", &fGeneralXMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralYMCTRUE_uncut", &fGeneralYMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralZMCTRUE_uncut", &fGeneralZMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralX", &fGeneralX);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralY", &fGeneralY);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralZ", &fGeneralZ);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRedprm_X", &fGeneralRedprm_X);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRedprm_Y", &fGeneralRedprm_Y);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRedprm_Z", &fGeneralRedprm_Z);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRedprm_Chi2", &fGeneralRedprm_Chi2);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRedprm_Ndof", &fGeneralRedprm_Ndof);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralNr_secvtx", &fGeneralNr_secvtx);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_X", &fGeneralSecvtx_X);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Y", &fGeneralSecvtx_Y);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Z", &fGeneralSecvtx_Z);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Mass", &fGeneralSecvtx_Mass);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Chi2", &fGeneralSecvtx_Chi2);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Ndof", &fGeneralSecvtx_Ndof);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Multi", &fGeneralSecvtx_Multi);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov1", &fGeneralSecvtx_Cov1);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov2", &fGeneralSecvtx_Cov2);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov3", &fGeneralSecvtx_Cov3);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov4", &fGeneralSecvtx_Cov4);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov5", &fGeneralSecvtx_Cov5);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx_Cov6", &fGeneralSecvtx_Cov6);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_X", &fGeneralSecvtx2D_X);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_Y", &fGeneralSecvtx2D_Y);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_Z", &fGeneralSecvtx2D_Z);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_Mass", &fGeneralSecvtx2D_Mass);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_Chi2", &fGeneralSecvtx2D_Chi2);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSecvtx2D_Ndof", &fGeneralSecvtx2D_Ndof);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralXMCTRUE", &fGeneralXMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralYMCTRUE", &fGeneralYMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralZMCTRUE", &fGeneralZMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fBeamSpots", &fBeamSpots);
      R__insp.Inspect(R__cl, R__parent, "fNBeamSpots", &fNBeamSpots);
      R__insp.Inspect(R__cl, R__parent, "*fCurrentBeamSpot", &fCurrentBeamSpot);
      R__insp.Inspect(R__cl, R__parent, "*fEventBeamSpot", &fEventBeamSpot);
      R__insp.Inspect(R__cl, R__parent, "*fMCBeamSpot", &fMCBeamSpot);
      R__insp.Inspect(R__cl, R__parent, "*fLastValidBeamSpot", &fLastValidBeamSpot);
      R__insp.Inspect(R__cl, R__parent, "fNoBeamSpotRunnr", &fNoBeamSpotRunnr);
      GPhysObj::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GVertex(void *p) {
      return  p ? new(p) ::GVertex : new ::GVertex;
   }
   static void *newArray_GVertex(Long_t nElements, void *p) {
      return p ? new(p) ::GVertex[nElements] : new ::GVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_GVertex(void *p) {
      delete ((::GVertex*)p);
   }
   static void deleteArray_GVertex(void *p) {
      delete [] ((::GVertex*)p);
   }
   static void destruct_GVertex(void *p) {
      typedef ::GVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GVertex

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GVertexDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGVertexDict();

extern "C" void G__set_cpp_environmentGVertexDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GVertex.h");
  G__cpp_reset_tagtableGVertexDict();
}
#include <new>
extern "C" int G__cpp_dllrevGVertexDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GVertex */
static int G__GVertexDict_165_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GVertex[n];
     } else {
       p = new((void*) gvp) GVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GVertex;
     } else {
       p = new((void*) gvp) GVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GVertexDictLN_GVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->CheckZCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->CheckXCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->CheckYCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->CheckXYCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->CalcSecVTX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->CheckBeamSpotCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetZCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetXCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetYCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetXYCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetBeamSpotCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetVtxMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetNdof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetMulti());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetNrsecVtx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetCov1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetCov2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetCov3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetCov4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetCov5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetCov6());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetDL2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetDL2err());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->GetDL2sign());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GVertex*) G__getstructoffset())->GetCurrentBeamSpot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GVertex*) G__getstructoffset())->CheckCurrentBeamSpot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GVertex*) G__getstructoffset())->CheckEventBeamSpot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GVertex*) G__getstructoffset())->GetEventBeamSpot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GVertex*) G__getstructoffset())->InitBeamSpotList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GVertexDict_165_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GVertexDict_165_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GVertex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GVertex(*(GVertex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GVertexDictLN_GVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GVertex G__TGVertex;
static int G__GVertexDict_165_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GVertex*) (soff+(sizeof(GVertex)*i)))->~G__TGVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GVertex*) (soff))->~G__TGVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GVertexDict_165_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GVertex* dest = (GVertex*) G__getstructoffset();
   *dest = *(GVertex*) libp->para[0].ref;
   const GVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GVertex */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGVertexDict {
 public:
  G__Sizep2memfuncGVertexDict(): p(&G__Sizep2memfuncGVertexDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGVertexDict::*p)();
};

size_t G__get_sizep2memfuncGVertexDict()
{
  G__Sizep2memfuncGVertexDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGVertexDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GVertexDictLN_GVertex))) {
     GVertex *G__Lderived;
     G__Lderived=(GVertex*)0x1000;
     {
       GPhysObj *G__Lpbase=(GPhysObj*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GVertexDictLN_GVertex),G__get_linked_tagnum(&G__GVertexDictLN_GPhysObj),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GVertexDictLN_GVertex),G__get_linked_tagnum(&G__GVertexDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGVertexDict() {

   /* Setting up typedef entry */
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GVertexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GVertexDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GVertexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GVertexDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GVertexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GVertexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GVertex */
static void G__setup_memvarGVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GVertexDictLN_GVertex));
   { GVertex *p; p=(GVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fZCut=",0,"vertex passes z cut");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fXCut=",0,"x vertex passes cut to be different than the nominal vertex");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fYCut=",0,"y vertex passes cut to be different than the nominal vertex");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fXYCut=",0,"vertex passes cut to have a maximal distance from the nominal vertex in the xy plane");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fBeamSpotCut=",0,"event has beam spot");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRedprm_X=",0,"x-coordinate of reduced prim. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRedprm_Y=",0,"y-coordinate of reduced prim. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRedprm_Z=",0,"z-coordinate of reduced prim. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRedprm_Chi2=",0,"chi2 of reduced prim. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRedprm_Cov1=",0,"1st element of covariant matrix of reduced prim. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRedprm_Cov2=",0,"2nd element of covariant matrix of reduced prim. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRedprm_Cov3=",0,"3rd element of covariant matrix of reduced prim. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRedprm_Cov4=",0,"4th element of covariant matrix of reduced prim. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRedprm_Cov5=",0,"5th element of covariant matrix of reduced prim. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRedprm_Cov6=",0,"6th element of covariant matrix of reduced prim. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRedprm_Ndof=",0,"ndof of reduced prim. vtx");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNr_secvtx=",0,"number of sec. vtx (for each jet/axis --> 1 sec. vtx)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_X=",0,"x-coordinate of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_Y=",0,"y-coordinate of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_Z=",0,"z-coordinate of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_Mass=",0,"inv mass of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_Chi2=",0,"chi2 of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_Ndof=",0,"ndof of sec. vtx");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSecvtx_Multi=",0,"multiplicity in sec. vtx (nr. of fitted trks)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_Cov1=",0,"1st element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_Cov2=",0,"2nd element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_Cov3=",0,"3rd element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_Cov4=",0,"4th element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_Cov5=",0,"5th element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_Cov6=",0,"6th element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_DL2=",0,"Decay length");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_DL2_err=",0,"Decay length error");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx_DL2_sign=",0,"Decay length significance");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_X=",0,"x-coordinate of sec. vtx ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_Y=",0,"y-coordinate of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_Z=",0,"z-coordinate of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_Mass=",0,"inv mass of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_Chi2=",0,"chi2 of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_Ndof=",0,"ndof of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_Cov1=",0,"1st element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_Cov2=",0,"2nd element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_Cov3=",0,"3rd element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_Cov4=",0,"4th element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_Cov5=",0,"5th element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSecvtx2D_Cov6=",0,"6th element of covariant matrix of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlX_uncut=",0,"uncut vertex x position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlY_uncut=",0,"uncut vertex y position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlZ_uncut=",0,"uncut vertex z position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlXY_uncut=",0,"uncut vertex xy position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlRedprm_X_uncut=",0,"uncut x-coordinate of reduced prim. vtx     ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlRedprm_Y_uncut=",0,"uncut y-coordinate of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlRedprm_Z_uncut=",0,"uncut z-coordinate of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlRedprm_Chi2_uncut=",0,"uncut chi2 of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlRedprm_Ndof_uncut=",0,"uncut ndof of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlNr_secvtx_uncut=",0,"uncut number of sec. vtx (for each jet/axis --> 1 sec. vtx)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_X_uncut=",0,"uncut x-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Y_uncut=",0,"uncut y-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Z_uncut=",0,"uncut z-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Mass_uncut=",0,"uncut inv mass of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Chi2_uncut=",0,"uncut chi2 of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Ndof_uncut=",0,"uncut ndof of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Multi_uncut=",0,"uncut multiplicity in sec. vtx (nr. of fitted trks)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov1_uncut=",0,"uncut Cov1 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov2_uncut=",0,"uncut Cov2 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov3_uncut=",0,"uncut Cov3 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov4_uncut=",0,"uncut Cov4 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov5_uncut=",0,"uncut Cov5 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov6_uncut=",0,"uncut Cov6 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_X_uncut=",0,"uncut x-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_Y_uncut=",0,"uncut y-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_Z_uncut=",0,"uncut z-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_Mass_uncut=",0,"uncut inv mass of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_Chi2_uncut=",0,"uncut chi2 of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_Ndof_uncut=",0,"uncut ndof of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlXMCTRUE_uncut=",0,"uncut vertex x position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlYMCTRUE_uncut=",0,"uncut vertex y position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlZMCTRUE_uncut=",0,"uncut vertex z position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlX=",0,"vertex x position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlY=",0,"vertex y position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlZ=",0,"vertex z position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlXY=",0,"vertex xy position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlRedprm_X=",0,"x-coordinate of reduced prim. vtx     ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlRedprm_Y=",0,"y-coordinate of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlRedprm_Z=",0,"z-coordinate of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlRedprm_Chi2=",0,"chi2 of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlRedprm_Ndof=",0,"ndof of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlNr_secvtx=",0,"number of sec. vtx (for each jet/axis --> 1 sec. vtx)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_X=",0,"x-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Y=",0,"y-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Z=",0,"z-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Mass=",0,"inv mass of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Chi2=",0,"chi2 of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Ndof=",0,"ndof of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Multi=",0,"multiplicity in sec. vtx (nr. of fitted trks)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov1=",0,"uncut Cov1 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov2=",0,"uncut Cov2 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov3=",0,"uncut Cov3 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov4=",0,"uncut Cov4 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov5=",0,"uncut Cov5 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx_Cov6=",0,"uncut Cov6 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_X=",0,"x-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_Y=",0,"y-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_Z=",0,"z-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_Mass=",0,"inv mass of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_Chi2=",0,"chi2 of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlSecvtx2D_Ndof=",0,"ndof of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlXMCTRUE=",0,"vertex x position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlYMCTRUE=",0,"vertex y position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fControlZMCTRUE=",0,"vertex z position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralX_uncut=",0,"uncut vertex x position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralY_uncut=",0,"uncut vertex y position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralZ_uncut=",0,"uncut vertex z position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralRedprm_X_uncut=",0,"uncut x-coordinate of reduced prim. vtx     ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralRedprm_Y_uncut=",0,"uncut y-coordinate of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralRedprm_Z_uncut=",0,"uncut z-coordinate of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralRedprm_Chi2_uncut=",0,"uncut chi2 of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralRedprm_Ndof_uncut=",0,"uncut ndof of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralNr_secvtx_uncut=",0,"uncut number of sec. vtx (for each jet/axis --> 1 sec. vtx)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_X_uncut=",0,"uncut x-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Y_uncut=",0,"uncut y-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Z_uncut=",0,"uncut z-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Mass_uncut=",0,"uncut inv mass of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Chi2_uncut=",0,"uncut chi2 of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Ndof_uncut=",0,"uncut ndof of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Multi_uncut=",0,"uncut multiplicity in sec. vtx (nr. of fitted trks)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov1_uncut=",0,"uncut Cov1 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov2_uncut=",0,"uncut Cov2 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov3_uncut=",0,"uncut Cov3 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov4_uncut=",0,"uncut Cov4 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov5_uncut=",0,"uncut Cov5 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov6_uncut=",0,"uncut Cov6 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_X_uncut=",0,"uncut x-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_Y_uncut=",0,"uncut y-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_Z_uncut=",0,"uncut z-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_Mass_uncut=",0,"uncut inv mass of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_Chi2_uncut=",0,"uncut chi2 of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_Ndof_uncut=",0,"uncut ndof of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralXMCTRUE_uncut=",0,"uncut vertex x position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralYMCTRUE_uncut=",0,"uncut vertex y position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralZMCTRUE_uncut=",0,"uncut vertex z position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralX=",0,"vertex x position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralY=",0,"vertex y position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralZ=",0,"vertex z position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralRedprm_X=",0,"x-coordinate of reduced prim. vtx     ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralRedprm_Y=",0,"y-coordinate of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralRedprm_Z=",0,"z-coordinate of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralRedprm_Chi2=",0,"chi2 of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralRedprm_Ndof=",0,"ndof of reduced prim. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralNr_secvtx=",0,"number of sec. vtx (for each jet/axis --> 1 sec. vtx)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_X=",0,"x-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Y=",0,"y-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Z=",0,"z-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Mass=",0,"inv mass of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Chi2=",0,"chi2 of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Ndof=",0,"ndof of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Multi=",0,"multiplicity in sec. vtx (nr. of fitted trks)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov1=",0,"uncut Cov1 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov2=",0,"uncut Cov2 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov3=",0,"uncut Cov3 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov4=",0,"uncut Cov4 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov5=",0,"uncut Cov5 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx_Cov6=",0,"uncut Cov6 matrix element in sec.vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_X=",0,"x-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_Y=",0,"y-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_Z=",0,"z-coordinate of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_Mass=",0,"inv mass of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_Chi2=",0,"chi2 of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralSecvtx2D_Ndof=",0,"ndof of sec. vtx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralXMCTRUE=",0,"vertex x position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralYMCTRUE=",0,"vertex y position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TH1D),-1,-1,4,"fGeneralZMCTRUE=",0,"vertex z position MC true info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TClonesArray),-1,-1,4,"fBeamSpots=",0,"array of beamspots");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNBeamSpots=",0,"number of beam spots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_GBeamSpot),-1,-1,4,"fCurrentBeamSpot=",0,"current data beamspot object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_GBeamSpot),-1,-1,4,"fEventBeamSpot=",0,"current event beamspot object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_GBeamSpot),-1,-1,4,"fMCBeamSpot=",0,"MC beamspot object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_GBeamSpot),-1,-1,4,"fLastValidBeamSpot=",0,"last valid beamspot, to use all mvd take runs");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNoBeamSpotRunnr=",0,"runnr in case that no beamspot for this run was found");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GVertexDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGVertexDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGVertex(void) {
   /* GVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GVertexDictLN_GVertex));
   G__memfunc_setup("GVertex",709,G__GVertexDict_165_0_1, 105, G__get_linked_tagnum(&G__GVertexDictLN_GVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateControl",1333,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillControl",1128,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateGeneral",1298,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillGeneral",1093,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Do",179,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAllCuts",984,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckZCut",868,G__GVertexDict_165_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckXCut",866,G__GVertexDict_165_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckYCut",867,G__GVertexDict_165_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckXYCut",955,G__GVertexDict_165_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcSecVTX",912,G__GVertexDict_165_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckBeamSpotCut",1573,G__GVertexDict_165_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintMessage",1234,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__GVertexDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZCut",678,G__GVertexDict_165_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXCut",676,G__GVertexDict_165_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetYCut",677,G__GVertexDict_165_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXYCut",765,G__GVertexDict_165_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBeamSpotCut",1383,G__GVertexDict_165_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVtxMass",1014,G__GVertexDict_165_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChi2",614,G__GVertexDict_165_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNdof",679,G__GVertexDict_165_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMulti",811,G__GVertexDict_165_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNrsecVtx",1117,G__GVertexDict_165_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCov1",633,G__GVertexDict_165_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCov2",634,G__GVertexDict_165_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCov3",635,G__GVertexDict_165_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCov4",636,G__GVertexDict_165_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCov5",637,G__GVertexDict_165_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCov6",638,G__GVertexDict_165_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDL2",482,G__GVertexDict_165_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDL2err",811,G__GVertexDict_165_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDL2sign",915,G__GVertexDict_165_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentBeamSpot",1822,G__GVertexDict_165_0_36, 85, G__get_linked_tagnum(&G__GVertexDictLN_GBeamSpot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckCurrentBeamSpot",2012,G__GVertexDict_165_0_37, 85, G__get_linked_tagnum(&G__GVertexDictLN_GBeamSpot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckEventBeamSpot",1787,G__GVertexDict_165_0_38, 85, G__get_linked_tagnum(&G__GVertexDictLN_GBeamSpot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventBeamSpot",1597,G__GVertexDict_165_0_39, 85, G__get_linked_tagnum(&G__GVertexDictLN_GBeamSpot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitBeamSpotList",1611,G__GVertexDict_165_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GVertexDict_165_0_41, 85, G__get_linked_tagnum(&G__GVertexDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GVertexDict_165_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GVertexDict_165_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GVertexDict_165_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GVertexDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GVertexDict_165_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GVertexDict_165_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GVertexDict_165_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GVertexDict_165_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GVertexDict_165_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GVertex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GVertex", 709, G__GVertexDict_165_0_53, (int) ('i'), G__get_linked_tagnum(&G__GVertexDictLN_GVertex), -1, 0, 1, 1, 1, 0, "u 'GVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GVertex", 835, G__GVertexDict_165_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GVertexDict_165_0_55, (int) ('u'), G__get_linked_tagnum(&G__GVertexDictLN_GVertex), -1, 1, 1, 1, 1, 0, "u 'GVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGVertexDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGVertexDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGVertexDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GVertexDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GVertexDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GVertexDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GVertexDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GVertexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GVertexDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GVertexDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GVertexDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__GVertexDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__GVertexDictLN_GPhysObj = { "GPhysObj" , 99 , -1 };
G__linked_taginfo G__GVertexDictLN_GBeamSpot = { "GBeamSpot" , 99 , -1 };
G__linked_taginfo G__GVertexDictLN_GVertex = { "GVertex" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGVertexDict() {
  G__GVertexDictLN_TClass.tagnum = -1 ;
  G__GVertexDictLN_TBuffer.tagnum = -1 ;
  G__GVertexDictLN_TMemberInspector.tagnum = -1 ;
  G__GVertexDictLN_TObject.tagnum = -1 ;
  G__GVertexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GVertexDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GVertexDictLN_TString.tagnum = -1 ;
  G__GVertexDictLN_TClonesArray.tagnum = -1 ;
  G__GVertexDictLN_TH1D.tagnum = -1 ;
  G__GVertexDictLN_GPhysObj.tagnum = -1 ;
  G__GVertexDictLN_GBeamSpot.tagnum = -1 ;
  G__GVertexDictLN_GVertex.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGVertexDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GVertexDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GVertexDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GVertexDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GVertexDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GVertexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GVertexDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GVertexDictLN_TString);
   G__get_linked_tagnum_fwd(&G__GVertexDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__GVertexDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__GVertexDictLN_GPhysObj);
   G__get_linked_tagnum_fwd(&G__GVertexDictLN_GBeamSpot);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GVertexDictLN_GVertex),sizeof(GVertex),-1,29952,"Vertex Class for everything which is related only to Vertices",G__setup_memvarGVertex,G__setup_memfuncGVertex);
}
extern "C" void G__cpp_setupGVertexDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGVertexDict()");
  G__set_cpp_environmentGVertexDict();
  G__cpp_setup_tagtableGVertexDict();

  G__cpp_setup_inheritanceGVertexDict();

  G__cpp_setup_typetableGVertexDict();

  G__cpp_setup_memvarGVertexDict();

  G__cpp_setup_memfuncGVertexDict();
  G__cpp_setup_globalGVertexDict();
  G__cpp_setup_funcGVertexDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGVertexDict();
  return;
}
class G__cpp_setup_initGVertexDict {
  public:
    G__cpp_setup_initGVertexDict() { G__add_setup_func("GVertexDict",(G__incsetup)(&G__cpp_setupGVertexDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGVertexDict() { G__remove_setup_func("GVertexDict"); }
};
G__cpp_setup_initGVertexDict G__cpp_setup_initializerGVertexDict;

