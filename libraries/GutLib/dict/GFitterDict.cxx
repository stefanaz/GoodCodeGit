//
// File generated by rootcint at Fri Oct 24 10:57:58 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GFitterDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GFitter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_GFitter(void *p = 0);
   static void *newArray_GFitter(Long_t size, void *p);
   static void delete_GFitter(void *p);
   static void deleteArray_GFitter(void *p);
   static void destruct_GFitter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GFitter*)
   {
      ::GFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GFitter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GFitter", ::GFitter::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GFitter.h", 20,
                  typeid(::GFitter), DefineBehavior(ptr, ptr),
                  &::GFitter::Dictionary, isa_proxy, 0,
                  sizeof(::GFitter) );
      instance.SetNew(&new_GFitter);
      instance.SetNewArray(&newArray_GFitter);
      instance.SetDelete(&delete_GFitter);
      instance.SetDeleteArray(&deleteArray_GFitter);
      instance.SetDestructor(&destruct_GFitter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GFitter*)
   {
      return GenerateInitInstanceLocal((::GFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GFitter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GFitter::Class_Name()
{
   return "GFitter";
}

//______________________________________________________________________________
const char *GFitter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GFitter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GFitter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GFitter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GFitter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GFitter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GFitter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GFitter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GFitter::Streamer(TBuffer &R__b)
{
   // Stream an object of class GFitter.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void GFitter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GFitter.
      TClass *R__cl = ::GFitter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*gMinuit", &gMinuit);
      R__insp.Inspect(R__cl, R__parent, "fBins", &fBins);
      R__insp.Inspect(R__cl, R__parent, "fHistos", &fHistos);
      R__insp.Inspect(R__cl, R__parent, "*fData", &fData);
      R__insp.Inspect(R__cl, R__parent, "*fDataErr", &fDataErr);
      R__insp.Inspect(R__cl, R__parent, "*fMC", &fMC);
      R__insp.Inspect(R__cl, R__parent, "*fMCErr", &fMCErr);
      R__insp.Inspect(R__cl, R__parent, "*fStartArray", &fStartArray);
      R__insp.Inspect(R__cl, R__parent, "*fStepArray", &fStepArray);
      R__insp.Inspect(R__cl, R__parent, "fParameter", &fParameter);
      R__insp.Inspect(R__cl, R__parent, "*fParameterArray", &fParameterArray);
      R__insp.Inspect(R__cl, R__parent, "*fParaErrArray", &fParaErrArray);
      R__insp.Inspect(R__cl, R__parent, "fChi2", &fChi2);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GFitter(void *p) {
      return  p ? new(p) ::GFitter : new ::GFitter;
   }
   static void *newArray_GFitter(Long_t nElements, void *p) {
      return p ? new(p) ::GFitter[nElements] : new ::GFitter[nElements];
   }
   // Wrapper around operator delete
   static void delete_GFitter(void *p) {
      delete ((::GFitter*)p);
   }
   static void deleteArray_GFitter(void *p) {
      delete [] ((::GFitter*)p);
   }
   static void destruct_GFitter(void *p) {
      typedef ::GFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GFitter

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GFitterDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGFitterDict();

extern "C" void G__set_cpp_environmentGFitterDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GFitter.h");
  G__cpp_reset_tagtableGFitterDict();
}
#include <new>
extern "C" int G__cpp_dllrevGFitterDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GFitter */
static int G__GFitterDict_157_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GFitter[n];
     } else {
       p = new((void*) gvp) GFitter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GFitter;
     } else {
       p = new((void*) gvp) GFitter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GFitterDictLN_GFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GFitter(
(TFile*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) GFitter(
(TFile*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GFitterDictLN_GFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GFitter((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) GFitter((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GFitterDictLN_GFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GFitter*) G__getstructoffset())->ReadInContents((TH1D**) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GFitter*) G__getstructoffset())->ReadInContentsImpact((TH1D**) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GFitter*) G__getstructoffset())->DoFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GFitter*) G__getstructoffset())->FitFunction((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GFitter::Chi2Function(*(Int_t*) G__Intref(&libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GFitter*) G__getstructoffset())->GetMinuit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GFitter*) G__getstructoffset())->GetBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GFitter*) G__getstructoffset())->GetHistos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GFitter*) G__getstructoffset())->GetParameter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((GFitter*) G__getstructoffset())->GetData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((GFitter*) G__getstructoffset())->GetDataErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((GFitter*) G__getstructoffset())->GetMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((GFitter*) G__getstructoffset())->GetMCErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((GFitter*) G__getstructoffset())->GetParameterArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((GFitter*) G__getstructoffset())->GetParaErrArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GFitter*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GFitter*) G__getstructoffset())->SetParameter((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GFitter*) G__getstructoffset())->SetStartArray((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GFitter*) G__getstructoffset())->SetStepArray((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GFitter*) G__getstructoffset())->SetHistos((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GFitter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GFitter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GFitter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GFitter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GFitter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GFitter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GFitter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GFitter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GFitterDict_157_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GFitter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GFitterDict_157_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GFitter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GFitter(*(GFitter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GFitterDictLN_GFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GFitter G__TGFitter;
static int G__GFitterDict_157_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GFitter*) (soff+(sizeof(GFitter)*i)))->~G__TGFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GFitter*) (soff))->~G__TGFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GFitterDict_157_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GFitter* dest = (GFitter*) G__getstructoffset();
   *dest = *(GFitter*) libp->para[0].ref;
   const GFitter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GFitter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGFitterDict {
 public:
  G__Sizep2memfuncGFitterDict(): p(&G__Sizep2memfuncGFitterDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGFitterDict::*p)();
};

size_t G__get_sizep2memfuncGFitterDict()
{
  G__Sizep2memfuncGFitterDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGFitterDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GFitterDictLN_GFitter))) {
     GFitter *G__Lderived;
     G__Lderived=(GFitter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GFitterDictLN_GFitter),G__get_linked_tagnum(&G__GFitterDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGFitterDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GFitterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GFitterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GFitter */
static void G__setup_memvarGFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GFitterDictLN_GFitter));
   { GFitter *p; p=(GFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GFitterDictLN_TMinuit),-1,-1,4,"gMinuit=",0,"TMinuit instance");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBins=",0,"number of bins for fit");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHistos=",0,"number of histograms to fit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fData=",0,"data array from Histograms");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDataErr=",0,"data error array from Histograms");
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,4,"fMC=",0,"mc array from Histograms");
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,4,"fMCErr=",0,"mc error array from Histograms");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fStartArray=",0,"array with variable starts");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fStepArray=",0,"array with variable steps");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fParameter=",0,"number of parameters to fit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fParameterArray=",0,"array of resulting parameters");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fParaErrArray=",0,"array of resulting parameters");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChi2=",0,"chi2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GFitterDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGFitterDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGFitter(void) {
   /* GFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GFitterDictLN_GFitter));
   G__memfunc_setup("GFitter",693,G__GFitterDict_157_0_1, 105, G__get_linked_tagnum(&G__GFitterDictLN_GFitter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GFitter",693,G__GFitterDict_157_0_2, 105, G__get_linked_tagnum(&G__GFitterDictLN_GFitter), -1, 0, 4, 1, 1, 0, 
"U 'TFile' - 0 - file i - 'Int_t' 0 - parameter "
"D - 'Double_t' 0 - startArray D - 'Double_t' 0 - stepArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GFitter",693,G__GFitterDict_157_0_3, 105, G__get_linked_tagnum(&G__GFitterDictLN_GFitter), -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadInContents",1409,G__GFitterDict_157_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TH1D' - 2 - histos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadInContentsImpact",2015,G__GFitterDict_157_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TH1D' - 2 - histos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoFit",470,G__GFitterDict_157_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitFunction",1129,G__GFitterDict_157_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - input D - 'Double_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Chi2Function",1164,G__GFitterDict_157_0_8, 121, -1, -1, 0, 5, 3, 1, 0, 
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - gin "
"d - 'Double_t' 1 - f D - 'Double_t' 0 - par "
"i - 'Int_t' 0 - iflag", (char*)NULL, (void*) G__func2void( (void (*)(Int_t&, Double_t*, Double_t&, Double_t*, Int_t))(&GFitter::Chi2Function) ), 0);
   G__memfunc_setup("GetMinuit",918,G__GFitterDict_157_0_9, 85, G__get_linked_tagnum(&G__GFitterDictLN_TMinuit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBins",684,G__GFitterDict_157_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistos",922,G__GFitterDict_157_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameter",1217,G__GFitterDict_157_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__GFitterDict_157_0_13, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataErr",963,G__GFitterDict_157_0_14, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMC",432,G__GFitterDict_157_0_15, 68, -1, G__defined_typename("Double_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCErr",729,G__GFitterDict_157_0_16, 68, -1, G__defined_typename("Double_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameterArray",1728,G__GFitterDict_157_0_17, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParaErrArray",1484,G__GFitterDict_157_0_18, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2",614,G__GFitterDict_157_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameter",1229,G__GFitterDict_157_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartArray",1337,G__GFitterDict_157_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStepArray",1223,G__GFitterDict_157_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistos",934,G__GFitterDict_157_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GFitterDict_157_0_24, 85, G__get_linked_tagnum(&G__GFitterDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GFitter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GFitterDict_157_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GFitter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GFitterDict_157_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GFitter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GFitterDict_157_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GFitter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GFitterDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GFitterDict_157_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GFitterDict_157_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GFitter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GFitterDict_157_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GFitter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GFitterDict_157_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GFitter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GFitterDict_157_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GFitter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GFitter", 693, G__GFitterDict_157_0_36, (int) ('i'), G__get_linked_tagnum(&G__GFitterDictLN_GFitter), -1, 0, 1, 1, 1, 0, "u 'GFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GFitter", 819, G__GFitterDict_157_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GFitterDict_157_0_38, (int) ('u'), G__get_linked_tagnum(&G__GFitterDictLN_GFitter), -1, 1, 1, 1, 1, 0, "u 'GFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGFitterDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGFitterDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGFitterDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GFitterDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GFitterDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GFitterDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GFitterDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GFitterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GFitterDictLN_TMinuit = { "TMinuit" , 99 , -1 };
G__linked_taginfo G__GFitterDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__GFitterDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__GFitterDictLN_GFitter = { "GFitter" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGFitterDict() {
  G__GFitterDictLN_TClass.tagnum = -1 ;
  G__GFitterDictLN_TBuffer.tagnum = -1 ;
  G__GFitterDictLN_TMemberInspector.tagnum = -1 ;
  G__GFitterDictLN_TObject.tagnum = -1 ;
  G__GFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GFitterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GFitterDictLN_TMinuit.tagnum = -1 ;
  G__GFitterDictLN_TFile.tagnum = -1 ;
  G__GFitterDictLN_TH1D.tagnum = -1 ;
  G__GFitterDictLN_GFitter.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGFitterDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GFitterDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GFitterDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GFitterDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GFitterDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GFitterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GFitterDictLN_TMinuit);
   G__get_linked_tagnum_fwd(&G__GFitterDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__GFitterDictLN_TH1D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GFitterDictLN_GFitter),sizeof(GFitter),-1,62720,"fits ptrel distributions with TMinuit",G__setup_memvarGFitter,G__setup_memfuncGFitter);
}
extern "C" void G__cpp_setupGFitterDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGFitterDict()");
  G__set_cpp_environmentGFitterDict();
  G__cpp_setup_tagtableGFitterDict();

  G__cpp_setup_inheritanceGFitterDict();

  G__cpp_setup_typetableGFitterDict();

  G__cpp_setup_memvarGFitterDict();

  G__cpp_setup_memfuncGFitterDict();
  G__cpp_setup_globalGFitterDict();
  G__cpp_setup_funcGFitterDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGFitterDict();
  return;
}
class G__cpp_setup_initGFitterDict {
  public:
    G__cpp_setup_initGFitterDict() { G__add_setup_func("GFitterDict",(G__incsetup)(&G__cpp_setupGFitterDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGFitterDict() { G__remove_setup_func("GFitterDict"); }
};
G__cpp_setup_initGFitterDict G__cpp_setup_initializerGFitterDict;

