//
// File generated by rootcint at Fri Oct 24 10:58:04 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GTrackDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GTrack_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_GTrack(void *p = 0);
   static void *newArray_GTrack(Long_t size, void *p);
   static void delete_GTrack(void *p);
   static void deleteArray_GTrack(void *p);
   static void destruct_GTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GTrack*)
   {
      ::GTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GTrack", ::GTrack::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GTrack.h", 38,
                  typeid(::GTrack), DefineBehavior(ptr, ptr),
                  &::GTrack::Dictionary, isa_proxy, 0,
                  sizeof(::GTrack) );
      instance.SetNew(&new_GTrack);
      instance.SetNewArray(&newArray_GTrack);
      instance.SetDelete(&delete_GTrack);
      instance.SetDeleteArray(&deleteArray_GTrack);
      instance.SetDestructor(&destruct_GTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GTrack*)
   {
      return GenerateInitInstanceLocal((::GTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GTrack::Class_Name()
{
   return "GTrack";
}

//______________________________________________________________________________
const char *GTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class GTrack.

   TVector3::Streamer(R__b);
}

//______________________________________________________________________________
void GTrack::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GTrack.
      TClass *R__cl = ::GTrack::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fID", &fID);
      R__insp.Inspect(R__cl, R__parent, "fID2", &fID2);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "fMuonKinType", &fMuonKinType);
      R__insp.Inspect(R__cl, R__parent, "fCharge", &fCharge);
      R__insp.Inspect(R__cl, R__parent, "fVertexID", &fVertexID);
      R__insp.Inspect(R__cl, R__parent, "fPrimaryVertex", &fPrimaryVertex);
      R__insp.Inspect(R__cl, R__parent, "fSecondaryVertex", &fSecondaryVertex);
      R__insp.Inspect(R__cl, R__parent, "fVertexFittedTrackID", &fVertexFittedTrackID);
      R__insp.Inspect(R__cl, R__parent, "fEndPosX", &fEndPosX);
      R__insp.Inspect(R__cl, R__parent, "fEndPosY", &fEndPosY);
      R__insp.Inspect(R__cl, R__parent, "fEndPosZ", &fEndPosZ);
      R__insp.Inspect(R__cl, R__parent, "fZbzyTimingHits", &fZbzyTimingHits);
      R__insp.Inspect(R__cl, R__parent, "fAxialHits", &fAxialHits);
      R__insp.Inspect(R__cl, R__parent, "fStereoHits", &fStereoHits);
      R__insp.Inspect(R__cl, R__parent, "fInnerLayer", &fInnerLayer);
      R__insp.Inspect(R__cl, R__parent, "fOuterLayer", &fOuterLayer);
      R__insp.Inspect(R__cl, R__parent, "fDedx", &fDedx);
      R__insp.Inspect(R__cl, R__parent, "fDedxCorr", &fDedxCorr);
      R__insp.Inspect(R__cl, R__parent, "fNDoF", &fNDoF);
      R__insp.Inspect(R__cl, R__parent, "fChi2", &fChi2);
      R__insp.Inspect(R__cl, R__parent, "fVChi2", &fVChi2);
      R__insp.Inspect(R__cl, R__parent, "fNMVDRBarrelHits", &fNMVDRBarrelHits);
      R__insp.Inspect(R__cl, R__parent, "fNMVDZBarrelHits", &fNMVDZBarrelHits);
      R__insp.Inspect(R__cl, R__parent, "fNMVDUWheelHits", &fNMVDUWheelHits);
      R__insp.Inspect(R__cl, R__parent, "fNMVDVWheelHits", &fNMVDVWheelHits);
      R__insp.Inspect(R__cl, R__parent, "fDedxMVD", &fDedxMVD);
      R__insp.Inspect(R__cl, R__parent, "fW", &fW);
      R__insp.Inspect(R__cl, R__parent, "fPhiZero", &fPhiZero);
      R__insp.Inspect(R__cl, R__parent, "fT", &fT);
      R__insp.Inspect(R__cl, R__parent, "fDZero", &fDZero);
      R__insp.Inspect(R__cl, R__parent, "fZZero", &fZZero);
      R__insp.Inspect(R__cl, R__parent, "fCov_0", &fCov_0);
      R__insp.Inspect(R__cl, R__parent, "fCov_1", &fCov_1);
      R__insp.Inspect(R__cl, R__parent, "fCov_2", &fCov_2);
      R__insp.Inspect(R__cl, R__parent, "fCov_3", &fCov_3);
      R__insp.Inspect(R__cl, R__parent, "fCov_4", &fCov_4);
      R__insp.Inspect(R__cl, R__parent, "fCov_5", &fCov_5);
      R__insp.Inspect(R__cl, R__parent, "fCov_6", &fCov_6);
      R__insp.Inspect(R__cl, R__parent, "fCov_7", &fCov_7);
      R__insp.Inspect(R__cl, R__parent, "fCov_8", &fCov_8);
      R__insp.Inspect(R__cl, R__parent, "fCov_9", &fCov_9);
      R__insp.Inspect(R__cl, R__parent, "fCov_10", &fCov_10);
      R__insp.Inspect(R__cl, R__parent, "fCov_11", &fCov_11);
      R__insp.Inspect(R__cl, R__parent, "fCov_12", &fCov_12);
      R__insp.Inspect(R__cl, R__parent, "fCov_13", &fCov_13);
      R__insp.Inspect(R__cl, R__parent, "fCov_14", &fCov_14);
      R__insp.Inspect(R__cl, R__parent, "fUsedSuperLayersCut", &fUsedSuperLayersCut);
      R__insp.Inspect(R__cl, R__parent, "fUsedHitsCut", &fUsedHitsCut);
      R__insp.Inspect(R__cl, R__parent, "fUsedStereoHitsCut", &fUsedStereoHitsCut);
      R__insp.Inspect(R__cl, R__parent, "fZHCut", &fZHCut);
      R__insp.Inspect(R__cl, R__parent, "fMVDHitsCut", &fMVDHitsCut);
      R__insp.Inspect(R__cl, R__parent, "fAllCuts", &fAllCuts);
      R__insp.Inspect(R__cl, R__parent, "fImpactParameter", &fImpactParameter);
      R__insp.Inspect(R__cl, R__parent, "f2DImpactParameter", &f2DImpactParameter);
      R__insp.Inspect(R__cl, R__parent, "fImpactParameterSignificance", &fImpactParameterSignificance);
      R__insp.Inspect(R__cl, R__parent, "f2DImpactParameterSignificance", &f2DImpactParameterSignificance);
      R__insp.Inspect(R__cl, R__parent, "fFakeWeight", &fFakeWeight);
      R__insp.Inspect(R__cl, R__parent, "fFakeWeight_etalowpt", &fFakeWeight_etalowpt);
      R__insp.Inspect(R__cl, R__parent, "fFakeWeight_etahighpt", &fFakeWeight_etahighpt);
      R__insp.Inspect(R__cl, R__parent, "fFakeWeight_cum", &fFakeWeight_cum);
      TVector3::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GTrack(void *p) {
      return  p ? new(p) ::GTrack : new ::GTrack;
   }
   static void *newArray_GTrack(Long_t nElements, void *p) {
      return p ? new(p) ::GTrack[nElements] : new ::GTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_GTrack(void *p) {
      delete ((::GTrack*)p);
   }
   static void deleteArray_GTrack(void *p) {
      delete [] ((::GTrack*)p);
   }
   static void destruct_GTrack(void *p) {
      typedef ::GTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GTrack

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GTrackDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGTrackDict();

extern "C" void G__set_cpp_environmentGTrackDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GTrack.h");
  G__cpp_reset_tagtableGTrackDict();
}
#include <new>
extern "C" int G__cpp_dllrevGTrackDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GTrack */
static int G__GTrackDict_205_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GTrack[n];
     } else {
       p = new((void*) gvp) GTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GTrack;
     } else {
       p = new((void*) gvp) GTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GTrackDictLN_GTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 34
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GTrack(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Bool_t) G__int(libp->para[8]), (Bool_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Int_t) G__int(libp->para[15])
, (Int_t) G__int(libp->para[16]), (Int_t) G__int(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Int_t) G__int(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Int_t) G__int(libp->para[24]), (Int_t) G__int(libp->para[25])
, (Int_t) G__int(libp->para[26]), (Int_t) G__int(libp->para[27])
, (Double_t) G__double(libp->para[28]), (Double_t) G__double(libp->para[29])
, (Double_t) G__double(libp->para[30]), (Double_t) G__double(libp->para[31])
, (Double_t) G__double(libp->para[32]), (Double_t) G__double(libp->para[33]));
   } else {
     p = new((void*) gvp) GTrack(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Bool_t) G__int(libp->para[8]), (Bool_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Int_t) G__int(libp->para[15])
, (Int_t) G__int(libp->para[16]), (Int_t) G__int(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Int_t) G__int(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Int_t) G__int(libp->para[24]), (Int_t) G__int(libp->para[25])
, (Int_t) G__int(libp->para[26]), (Int_t) G__int(libp->para[27])
, (Double_t) G__double(libp->para[28]), (Double_t) G__double(libp->para[29])
, (Double_t) G__double(libp->para[30]), (Double_t) G__double(libp->para[31])
, (Double_t) G__double(libp->para[32]), (Double_t) G__double(libp->para[33]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GTrackDictLN_GTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetID2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetMuonKinType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->Charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetVertexID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GTrack*) G__getstructoffset())->GetPrimaryVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GTrack*) G__getstructoffset())->GetSecondaryVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetVertexFittedTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetEndPosX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetEndPosY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetEndPosZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetZbzyTimingHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetAxialHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetStereoHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetNDoF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetInnerLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetOuterLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetDedx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetDedxCorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetVChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetMVDRBarrelHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetMVDZBarrelHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetMVDUWheelHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetMVDVWheelHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GTrack*) G__getstructoffset())->GetMVDHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetDedxMVD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetPhiZero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetDZero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetZZero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetCov((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->SetCov((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->SetUsedSuperLayersCut((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->SetUsedHitsCut((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->SetUsedStereoHitsCut((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->SetZHCut((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->SetMVDHitsCut((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->SetAllCuts((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->SetFakeWeight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->SetFakeWeight_cum((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->SetFakeWeight_lowpt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->SetFakeWeight_highpt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GTrack*) G__getstructoffset())->GetUsedSuperLayersCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GTrack*) G__getstructoffset())->GetUsedHitsCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GTrack*) G__getstructoffset())->GetUsedStereoHitsCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GTrack*) G__getstructoffset())->GetZHCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GTrack*) G__getstructoffset())->GetMVDHitsCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GTrack*) G__getstructoffset())->GetAllCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetFakeWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetFakeWeight_cum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetFakeWeight_lowpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetFakeWeight_highpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GTrack*) G__getstructoffset())->PrintMessage(*((TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GTrack*) G__getstructoffset())->Print(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GTrack*) G__getstructoffset())->CalcImpactParameters(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (TLorentzVector*) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetImpactParameter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->Get2DImpactParameter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->GetImpactParameterSignificance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->Get2DImpactParameterSignificance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GTrack*) G__getstructoffset())->Ranbw((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GTrackDict_205_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GTrackDict_205_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GTrack(*(GTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GTrackDictLN_GTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GTrack G__TGTrack;
static int G__GTrackDict_205_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GTrack*) (soff+(sizeof(GTrack)*i)))->~G__TGTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GTrack*) (soff))->~G__TGTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GTrackDict_205_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GTrack* dest = (GTrack*) G__getstructoffset();
   *dest = *(GTrack*) libp->para[0].ref;
   const GTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GTrack */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGTrackDict {
 public:
  G__Sizep2memfuncGTrackDict(): p(&G__Sizep2memfuncGTrackDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGTrackDict::*p)();
};

size_t G__get_sizep2memfuncGTrackDict()
{
  G__Sizep2memfuncGTrackDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGTrackDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GTrackDictLN_GTrack))) {
     GTrack *G__Lderived;
     G__Lderived=(GTrack*)0x1000;
     {
       TVector3 *G__Lpbase=(TVector3*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GTrackDictLN_GTrack),G__get_linked_tagnum(&G__GTrackDictLN_TVector3),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GTrackDictLN_GTrack),G__get_linked_tagnum(&G__GTrackDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGTrackDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GTrackDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GTrackDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GTrackDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GTrackDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GTrackDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GTrackDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__GTrackDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GTrack */
static void G__setup_memvarGTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GTrackDictLN_GTrack));
   { GTrack *p; p=(GTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fID=",0,"track id: if track is ctd or reg, id gives vctrhl id, if track is ztt, id gives zttrhl id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fID2=",0,"track id 2: gives the respective id in other tracking block, 0 if no relation available");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__GTrackDictLN_EZTrackType),-1,-1,4,"fType=",0,"track type");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__GTrackDictLN_EZMuonKinTrackType),-1,-1,4,"fMuonKinType=",0,"track type");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCharge=",0,"charge of track");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVertexID=",0,"ID of primary or secondary vertex, else -1");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPrimaryVertex=",0,"flag for primary vertex track");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSecondaryVertex=",0,"flag for secondary vertex track");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVertexFittedTrackID=",0,"ID of vertex fitted track");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndPosX=",0,"end position of swim in X");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndPosY=",0,"end position of swim in Y");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndPosZ=",0,"end position of swim in Z");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fZbzyTimingHits=",0,"number of z-by-timing hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fAxialHits=",0,"number of axial hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStereoHits=",0,"number of stereo hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fInnerLayer=",0,"inner layer used by track");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOuterLayer=",0,"outer layer used by track");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDedx=",0,"dEdx from CTD");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDedxCorr=",0,"corrected dEdx from CTD");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNDoF=",0,"number of degree of freedom");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChi2=",0,"chi2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVChi2=",0,"chi2 of vertex associated vertex fitted track");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMVDRBarrelHits=",0,"number of barrel MVD R hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMVDZBarrelHits=",0,"number of barrel MVD Z hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMVDUWheelHits=",0,"number of wheel MVD U hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMVDVWheelHits=",0,"number of wheel MVD V hits");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDedxMVD=",0,"dEdx from MVD");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fW=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPhiZero=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fT=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDZero=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZZero=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_0=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_1=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_2=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_3=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_4=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_5=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_6=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_7=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_8=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_9=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_10=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_11=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_12=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_13=",0,"helix parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCov_14=",0,"helix parameter");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUsedSuperLayersCut=",0,"flag for cut on used superlayers");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUsedHitsCut=",0,"flag for cut on used stereo + axial hits");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUsedStereoHitsCut=",0,"flag for cut on used stereo hits");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fZHCut=",0,"flag for cut on z_h from helix parameters");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMVDHitsCut=",0,"flag for cut on number of mvdhits used");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAllCuts=",0,"flag for all cuts");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fImpactParameter=",0,"3D impact parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"f2DImpactParameter=",0,"2D impact parameter in XY");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fImpactParameterSignificance=",0,"significance of 3D impact parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"f2DImpactParameterSignificance=",0,"significance of 2D impact parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFakeWeight=",0,"track probability  of fake muon;");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFakeWeight_etalowpt=",0,"track probability  of fake muon; 0.75 < pt <1.5");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFakeWeight_etahighpt=",0,"track probability  of fake muon; pt > 1.5");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFakeWeight_cum=",0,"track probability  of fake muon cumulative ;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GTrackDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGTrackDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGTrack(void) {
   /* GTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GTrackDictLN_GTrack));
   G__memfunc_setup("GTrack",572,G__GTrackDict_205_0_1, 105, G__get_linked_tagnum(&G__GTrackDictLN_GTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GTrack",572,G__GTrackDict_205_0_2, 105, G__get_linked_tagnum(&G__GTrackDictLN_GTrack), -1, 0, 34, 1, 1, 0, 
"i - 'Int_t' 0 - id i - 'Int_t' 0 - id2 "
"i - 'Int_t' 0 - trktype d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z "
"d - 'Double_t' 0 - charge i - 'Int_t' 0 - vertexid "
"g - 'Bool_t' 0 - primary g - 'Bool_t' 0 - secondary "
"i - 'Int_t' 0 - vertexfittedtrackid d - 'Double_t' 0 - endposx "
"d - 'Double_t' 0 - endposy d - 'Double_t' 0 - endposz "
"i - 'Int_t' 0 - zbytiminghits i - 'Int_t' 0 - axialhits "
"i - 'Int_t' 0 - stereohits i - 'Int_t' 0 - innerlayer "
"i - 'Int_t' 0 - outerlayer d - 'Double_t' 0 - dedx "
"d - 'Double_t' 0 - dedxcorr i - 'Int_t' 0 - ndof "
"d - 'Double_t' 0 - chi2 d - 'Double_t' 0 - vchi2 "
"i - 'Int_t' 0 - nbr i - 'Int_t' 0 - nbz "
"i - 'Int_t' 0 - nwu i - 'Int_t' 0 - nwv "
"d - 'Double_t' 0 - dedxmvd d - 'Double_t' 0 - w "
"d - 'Double_t' 0 - phizero d - 'Double_t' 0 - t "
"d - 'Double_t' 0 - dzero d - 'Double_t' 0 - zzero", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__GTrackDict_205_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetID2",479,G__GTrackDict_205_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__GTrackDict_205_0_5, 105, G__get_linked_tagnum(&G__GTrackDictLN_EZTrackType), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonKinType",1411,G__GTrackDict_205_0_6, 105, G__get_linked_tagnum(&G__GTrackDictLN_EZMuonKinTrackType), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Charge",586,G__GTrackDict_205_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVertexID",1067,G__GTrackDict_205_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimaryVertex",1666,G__GTrackDict_205_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSecondaryVertex",1862,G__GTrackDict_205_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVertexFittedTrackID",2176,G__GTrackDict_205_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndPosX",961,G__GTrackDict_205_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndPosY",962,G__GTrackDict_205_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndPosZ",963,G__GTrackDict_205_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZbzyTimingHits",1743,G__GTrackDict_205_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAxialHits",1191,G__GTrackDict_205_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStereoHits",1322,G__GTrackDict_205_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNDoF",615,G__GTrackDict_205_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInnerLayer",1305,G__GTrackDict_205_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOuterLayer",1324,G__GTrackDict_205_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDedx",677,G__GTrackDict_205_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDedxCorr",1083,G__GTrackDict_205_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChi2",614,G__GTrackDict_205_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVChi2",700,G__GTrackDict_205_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMVDRBarrelHits",1609,G__GTrackDict_205_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMVDZBarrelHits",1617,G__GTrackDict_205_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMVDUWheelHits",1513,G__GTrackDict_205_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMVDVWheelHits",1514,G__GTrackDict_205_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMVDHits",927,G__GTrackDict_205_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDedxMVD",908,G__GTrackDict_205_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetW",375,G__GTrackDict_205_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhiZero",993,G__GTrackDict_205_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetT",372,G__GTrackDict_205_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDZero",772,G__GTrackDict_205_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZZero",794,G__GTrackDict_205_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCov",584,G__GTrackDict_205_0_36, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCov",596,G__GTrackDict_205_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsedSuperLayersCut",2152,G__GTrackDict_205_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsedHitsCut",1409,G__GTrackDict_205_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsedStereoHitsCut",2035,G__GTrackDict_205_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetZHCut",762,G__GTrackDict_205_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMVDHitsCut",1239,G__GTrackDict_205_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAllCuts",996,G__GTrackDict_205_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFakeWeight",1291,G__GTrackDict_205_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFakeWeight_cum",1711,G__GTrackDict_205_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFakeWeight_lowpt",1952,G__GTrackDict_205_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFakeWeight_highpt",2030,G__GTrackDict_205_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUsedSuperLayersCut",2140,G__GTrackDict_205_0_48, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUsedHitsCut",1397,G__GTrackDict_205_0_49, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUsedStereoHitsCut",2023,G__GTrackDict_205_0_50, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZHCut",750,G__GTrackDict_205_0_51, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMVDHitsCut",1227,G__GTrackDict_205_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAllCuts",984,G__GTrackDict_205_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeWeight",1279,G__GTrackDict_205_0_54, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeWeight_cum",1699,G__GTrackDict_205_0_55, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeWeight_lowpt",1940,G__GTrackDict_205_0_56, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeWeight_highpt",2018,G__GTrackDict_205_0_57, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintMessage",1234,G__GTrackDict_205_0_58, 117, G__get_linked_tagnum(&G__GTrackDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__GTrackDict_205_0_59, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcImpactParameters",2021,G__GTrackDict_205_0_60, 103, -1, G__defined_typename("Bool_t"), 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - new_x_ref d - 'Double_t' 0 - new_x_ref_sigma "
"d - 'Double_t' 0 - new_y_ref d - 'Double_t' 0 - new_y_ref_sigma "
"d - 'Double_t' 0 - new_z_ref d - 'Double_t' 0 - new_z_ref_sigma "
"U 'TLorentzVector' - 0 - reference", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetImpactParameter",1823,G__GTrackDict_205_0_61, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Get2DImpactParameter",1941,G__GTrackDict_205_0_62, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetImpactParameterSignificance",3042,G__GTrackDict_205_0_63, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Get2DImpactParameterSignificance",3160,G__GTrackDict_205_0_64, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Ranbw",506,G__GTrackDict_205_0_65, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GTrackDict_205_0_66, 85, G__get_linked_tagnum(&G__GTrackDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GTrackDict_205_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GTrackDict_205_0_68, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GTrackDict_205_0_69, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GTrackDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GTrackDict_205_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GTrackDict_205_0_74, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GTrackDict_205_0_75, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GTrackDict_205_0_76, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GTrackDict_205_0_77, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GTrack", 572, G__GTrackDict_205_0_78, (int) ('i'), G__get_linked_tagnum(&G__GTrackDictLN_GTrack), -1, 0, 1, 1, 1, 0, "u 'GTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GTrack", 698, G__GTrackDict_205_0_79, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GTrackDict_205_0_80, (int) ('u'), G__get_linked_tagnum(&G__GTrackDictLN_GTrack), -1, 1, 1, 1, 1, 0, "u 'GTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGTrackDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGTrackDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGTrackDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GTrackDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_EZTrackType = { "EZTrackType" , 101 , -1 };
G__linked_taginfo G__GTrackDictLN_EZMuonKinTrackType = { "EZMuonKinTrackType" , 101 , -1 };
G__linked_taginfo G__GTrackDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__GTrackDictLN_GTrack = { "GTrack" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGTrackDict() {
  G__GTrackDictLN_TClass.tagnum = -1 ;
  G__GTrackDictLN_TBuffer.tagnum = -1 ;
  G__GTrackDictLN_TMemberInspector.tagnum = -1 ;
  G__GTrackDictLN_TObject.tagnum = -1 ;
  G__GTrackDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GTrackDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GTrackDictLN_TString.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__GTrackDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__GTrackDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__GTrackDictLN_TVector3.tagnum = -1 ;
  G__GTrackDictLN_EZTrackType.tagnum = -1 ;
  G__GTrackDictLN_EZMuonKinTrackType.tagnum = -1 ;
  G__GTrackDictLN_TLorentzVector.tagnum = -1 ;
  G__GTrackDictLN_GTrack.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGTrackDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TString);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_EZTrackType);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_EZMuonKinTrackType);
   G__get_linked_tagnum_fwd(&G__GTrackDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GTrackDictLN_GTrack),sizeof(GTrack),-1,62720,"track class",G__setup_memvarGTrack,G__setup_memfuncGTrack);
}
extern "C" void G__cpp_setupGTrackDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGTrackDict()");
  G__set_cpp_environmentGTrackDict();
  G__cpp_setup_tagtableGTrackDict();

  G__cpp_setup_inheritanceGTrackDict();

  G__cpp_setup_typetableGTrackDict();

  G__cpp_setup_memvarGTrackDict();

  G__cpp_setup_memfuncGTrackDict();
  G__cpp_setup_globalGTrackDict();
  G__cpp_setup_funcGTrackDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGTrackDict();
  return;
}
class G__cpp_setup_initGTrackDict {
  public:
    G__cpp_setup_initGTrackDict() { G__add_setup_func("GTrackDict",(G__incsetup)(&G__cpp_setupGTrackDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGTrackDict() { G__remove_setup_func("GTrackDict"); }
};
G__cpp_setup_initGTrackDict G__cpp_setup_initializerGTrackDict;

