//
// File generated by rootcint at Fri Oct 24 10:58:00 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GMCDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GMC_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_GMC(void *p = 0);
   static void *newArray_GMC(Long_t size, void *p);
   static void delete_GMC(void *p);
   static void deleteArray_GMC(void *p);
   static void destruct_GMC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GMC*)
   {
      ::GMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GMC", ::GMC::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GMC.h", 97,
                  typeid(::GMC), DefineBehavior(ptr, ptr),
                  &::GMC::Dictionary, isa_proxy, 0,
                  sizeof(::GMC) );
      instance.SetNew(&new_GMC);
      instance.SetNewArray(&newArray_GMC);
      instance.SetDelete(&delete_GMC);
      instance.SetDeleteArray(&deleteArray_GMC);
      instance.SetDestructor(&destruct_GMC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GMC*)
   {
      return GenerateInitInstanceLocal((::GMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GMC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GMC::Class_Name()
{
   return "GMC";
}

//______________________________________________________________________________
const char *GMC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GMC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GMC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GMC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GMC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class GMC.

   TLorentzVector::Streamer(R__b);
}

//______________________________________________________________________________
void GMC::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GMC.
      TClass *R__cl = ::GMC::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMCKINID", &fMCKINID);
      R__insp.Inspect(R__cl, R__parent, "fPartID", &fPartID);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "fMCMuonType", &fMCMuonType);
      R__insp.Inspect(R__cl, R__parent, "fCharge", &fCharge);
      R__insp.Inspect(R__cl, R__parent, "fMotherID", &fMotherID);
      R__insp.Inspect(R__cl, R__parent, "fProducedAt", &fProducedAt);
      R__insp.Inspect(R__cl, R__parent, "fImpact", &fImpact);
      R__insp.Inspect(R__cl, R__parent, "fSignificance", &fSignificance);
      R__insp.Inspect(R__cl, R__parent, "fImpact2D", &fImpact2D);
      R__insp.Inspect(R__cl, R__parent, "fSignificance2D", &fSignificance2D);
      R__insp.Inspect(R__cl, R__parent, "fHeavyFlavourQuark", &fHeavyFlavourQuark);
      R__insp.Inspect(R__cl, R__parent, "*fMuon", &fMuon);
      R__insp.Inspect(R__cl, R__parent, "*fMCMuon", &fMCMuon);
      R__insp.Inspect(R__cl, R__parent, "*fMuonBQuark", &fMuonBQuark);
      R__insp.Inspect(R__cl, R__parent, "*fMuonBMeson", &fMuonBMeson);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDirectParent", &fMuonDirectParent);
      R__insp.Inspect(R__cl, R__parent, "*fMother", &fMother);
      R__insp.Inspect(R__cl, R__parent, "*fVertex", &fVertex);
      R__insp.Inspect(R__cl, R__parent, "fAssociatedWithNegativeFMCKINID", &fAssociatedWithNegativeFMCKINID);
      R__insp.Inspect(R__cl, R__parent, "*fMCJet", &fMCJet);
      R__insp.Inspect(R__cl, R__parent, "*fMCJet2", &fMCJet2);
      R__insp.Inspect(R__cl, R__parent, "*fMCPMJet", &fMCPMJet);
      R__insp.Inspect(R__cl, R__parent, "*fMCMuonJet", &fMCMuonJet);
      R__insp.Inspect(R__cl, R__parent, "*fMCPMMuonJet", &fMCPMMuonJet);
      TLorentzVector::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GMC(void *p) {
      return  p ? new(p) ::GMC : new ::GMC;
   }
   static void *newArray_GMC(Long_t nElements, void *p) {
      return p ? new(p) ::GMC[nElements] : new ::GMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_GMC(void *p) {
      delete ((::GMC*)p);
   }
   static void deleteArray_GMC(void *p) {
      delete [] ((::GMC*)p);
   }
   static void destruct_GMC(void *p) {
      typedef ::GMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GMC

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GMCDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGMCDict();

extern "C" void G__set_cpp_environmentGMCDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GMC.h");
  G__cpp_reset_tagtableGMCDict();
}
#include <new>
extern "C" int G__cpp_dllrevGMCDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GMC */
static int G__GMCDict_212_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GMC[n];
     } else {
       p = new((void*) gvp) GMC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GMC;
     } else {
       p = new((void*) gvp) GMC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GMCDictLN_GMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GMC(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) GMC(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GMCDictLN_GMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GMC(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (GMuon*) G__int(libp->para[6]), (GMC*) G__int(libp->para[7])
, (GMC*) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) GMC(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (GMuon*) G__int(libp->para[6]), (GMC*) G__int(libp->para[7])
, (GMC*) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GMCDictLN_GMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GMC(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
   } else {
     p = new((void*) gvp) GMC(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GMCDictLN_GMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMC*) G__getstructoffset())->GetFMCKINID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMC*) G__getstructoffset())->GetPartID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMC*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMC*) G__getstructoffset())->GetMCMuonType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMC*) G__getstructoffset())->GetChosenMCMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMC*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMC*) G__getstructoffset())->GetMotherID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMC*) G__getstructoffset())->GetProducedAt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMC*) G__getstructoffset())->GetImpact());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMC*) G__getstructoffset())->GetSignificance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMC*) G__getstructoffset())->GetImpact2D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMC*) G__getstructoffset())->GetSignificance2D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetMCMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetMuonBQuark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetMuonBMeson());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetMuonDirectParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetMother());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetFMCKINID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetMotherID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetProducedAt((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetImpact((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetSignificance((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetImpact2D((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetSignificance2D((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetMCMuonType((EZMCMuonType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetMuon((GMuon*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetMCMuon((GMC*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetMuonBQuark((GMC*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetMuonBMeson((GMC*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetMuonDirectParent((GMC*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetMother((GMC*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetVertex((GMCVertex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetAssociatedMCJetToMCMuon((GJet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetAssociatedMCJetToMCMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetAssociatedMCPMJetToMCMuon((GJet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetAssociatedMCPMJetToMCMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMC*) G__getstructoffset())->CheckParticleType((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GMC*) G__getstructoffset())->ReturnParticleType();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMC*) G__getstructoffset())->IsHeavyFlavourQuark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->AssociatedWithNegativeFMCKINID((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMC*) G__getstructoffset())->IsAssociatedWithNegativeFMCKINID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetAssociatedMCJet((GJet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetAssociatedMCJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetAssociatedMCPMJet((GJet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetAssociatedMCPMJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->SetSecondAssociatedMCJetToMCMuon((GJet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMC*) G__getstructoffset())->GetSecondAssociatedMCJetToMCMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMC*) G__getstructoffset())->SetChosenMCMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GMC*) G__getstructoffset())->PrintMessage(*((TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMC*) G__getstructoffset())->Print(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMCDict_212_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GMCDict_212_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GMC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GMC(*(GMC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GMCDictLN_GMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GMC G__TGMC;
static int G__GMCDict_212_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GMC*) (soff+(sizeof(GMC)*i)))->~G__TGMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GMC*) (soff))->~G__TGMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GMCDict_212_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GMC* dest = (GMC*) G__getstructoffset();
   *dest = *(GMC*) libp->para[0].ref;
   const GMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GMC */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGMCDict {
 public:
  G__Sizep2memfuncGMCDict(): p(&G__Sizep2memfuncGMCDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGMCDict::*p)();
};

size_t G__get_sizep2memfuncGMCDict()
{
  G__Sizep2memfuncGMCDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGMCDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GMCDictLN_GMC))) {
     GMC *G__Lderived;
     G__Lderived=(GMC*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GMCDictLN_GMC),G__get_linked_tagnum(&G__GMCDictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GMCDictLN_GMC),G__get_linked_tagnum(&G__GMCDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGMCDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GMCDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GMCDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GMCDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GMCDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GMCDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GMCDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__GMCDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GMC */
static void G__setup_memvarGMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GMCDictLN_GMC));
   { GMC *p; p=(GMC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMCKINID=",0,"fmckin id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPartID=",0,"particle type id");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__GMCDictLN_EZMCType),-1,-1,4,"fType=",0,"particle type");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__GMCDictLN_EZMCMuonType),-1,-1,4,"fMCMuonType=",0,"mc muon type");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCharge=",0,"charge");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMotherID=",0,"fmckin id of mother");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fProducedAt=",0,"id of mc vertex particle is produced at");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fImpact=",0,"impact parameter to primary mc vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSignificance=",0,"significance of impact parameter to primary mc vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fImpact2D=",0,"2D impact parameter to primary mc vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSignificance2D=",0,"significance of 2D impact parameter to primary mc vertex");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fHeavyFlavourQuark=",0,"flag if particle is a heavy flavour quark");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GMuon),-1,-1,4,"fMuon=",0,"associated muon from gmuon mc block");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GMC),-1,-1,4,"fMCMuon=",0,"associated mc muon from gmuon mc block in mc block");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GMC),-1,-1,4,"fMuonBQuark=",0,"associated b quark from gmuon mc block");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GMC),-1,-1,4,"fMuonBMeson=",0,"first b meson down the fmckin list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GMC),-1,-1,4,"fMuonDirectParent=",0,"associated direct parent from gmuon mc block");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GMC),-1,-1,4,"fMother=",0,"pointer to mother if mother is filled in array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GMCVertex),-1,-1,4,"fVertex=",0,"pointer to vertex");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAssociatedWithNegativeFMCKINID=",0,"flag if mc particle was associated to muon from gmuon with negative fmckin id");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GJet),-1,-1,4,"fMCJet=",0,"associated MC jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GJet),-1,-1,4,"fMCJet2=",0,"second associated MC jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GJet),-1,-1,4,"fMCPMJet=",0,"associated parton level MC jet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GJet),-1,-1,4,"fMCMuonJet=",0,"associated jet to muon (use bquark for evaluation)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_GJet),-1,-1,4,"fMCPMMuonJet=",0,"associated jet to muon (use bquark for evaluation)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMCDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGMCDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGMC(void) {
   /* GMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GMCDictLN_GMC));
   G__memfunc_setup("GMC",215,G__GMCDict_212_0_1, 105, G__get_linked_tagnum(&G__GMCDictLN_GMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GMC",215,G__GMCDict_212_0_2, 105, G__get_linked_tagnum(&G__GMCDictLN_GMC), -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - fmckinid i - 'Int_t' 0 - partid "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GMC",215,G__GMCDict_212_0_3, 105, G__get_linked_tagnum(&G__GMCDictLN_GMC), -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - fmckinid i - 'Int_t' 0 - partid "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - E "
"U 'GMuon' - 0 - muon U 'GMC' - 0 - bquark "
"U 'GMC' - 0 - directparent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GMC",215,G__GMCDict_212_0_4, 105, G__get_linked_tagnum(&G__GMCDictLN_GMC), -1, 0, 10, 1, 1, 0, 
"i - 'Int_t' 0 - fmckinid i - 'Int_t' 0 - partid "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - E "
"i - 'Int_t' 0 - motherid i - 'Int_t' 0 - producedat "
"d - 'Double_t' 0 - impact d - 'Double_t' 0 - impact2D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFMCKINID",869,G__GMCDict_212_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPartID",836,G__GMCDict_212_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__GMCDict_212_0_7, 105, G__get_linked_tagnum(&G__GMCDictLN_EZMCType), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCMuonType",1265,G__GMCDict_212_0_8, 105, G__get_linked_tagnum(&G__GMCDictLN_EZMCMuonType), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChosenMCMuon",1455,G__GMCDict_212_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__GMCDict_212_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMotherID",1052,G__GMCDict_212_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProducedAt",1291,G__GMCDict_212_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetImpact",894,G__GMCDict_212_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSignificance",1507,G__GMCDict_212_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetImpact2D",1012,G__GMCDict_212_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSignificance2D",1625,G__GMCDict_212_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuon",703,G__GMCDict_212_0_17, 85, G__get_linked_tagnum(&G__GMCDictLN_GMuon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCMuon",847,G__GMCDict_212_0_18, 85, G__get_linked_tagnum(&G__GMCDictLN_GMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonBQuark",1285,G__GMCDict_212_0_19, 85, G__get_linked_tagnum(&G__GMCDictLN_GMC), -1, 0, 0, 1, 1, 0, "", "WARNING! The name is misleading: this routine returns a b quark OR a lighter quark, if no b quark was found (in events where the wrong end of the fragmentation string (2092) was saved.)", (void*) NULL, 1);
   G__memfunc_setup("GetMuonBMeson",1283,G__GMCDict_212_0_20, 85, G__get_linked_tagnum(&G__GMCDictLN_GMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonDirectParent",1924,G__GMCDict_212_0_21, 85, G__get_linked_tagnum(&G__GMCDictLN_GMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMother",911,G__GMCDict_212_0_22, 85, G__get_linked_tagnum(&G__GMCDictLN_GMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVertex",926,G__GMCDict_212_0_23, 85, G__get_linked_tagnum(&G__GMCDictLN_GMCVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFMCKINID",881,G__GMCDict_212_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMotherID",1064,G__GMCDict_212_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetProducedAt",1303,G__GMCDict_212_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetImpact",906,G__GMCDict_212_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSignificance",1519,G__GMCDict_212_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetImpact2D",1024,G__GMCDict_212_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSignificance2D",1637,G__GMCDict_212_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMCMuonType",1277,G__GMCDict_212_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i 'EZMCMuonType' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMuon",715,G__GMCDict_212_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GMuon' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMCMuon",859,G__GMCDict_212_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GMC' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMuonBQuark",1297,G__GMCDict_212_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GMC' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMuonBMeson",1295,G__GMCDict_212_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GMC' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMuonDirectParent",1936,G__GMCDict_212_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GMC' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMother",923,G__GMCDict_212_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GMC' - 0 - mother", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVertex",938,G__GMCDict_212_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GMCVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAssociatedMCJetToMCMuon",2513,G__GMCDict_212_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GJet' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAssociatedMCJetToMCMuon",2501,G__GMCDict_212_0_40, 85, G__get_linked_tagnum(&G__GMCDictLN_GJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAssociatedMCPMJetToMCMuon",2670,G__GMCDict_212_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GJet' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAssociatedMCPMJetToMCMuon",2658,G__GMCDict_212_0_42, 85, G__get_linked_tagnum(&G__GMCDictLN_GJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckParticleType",1716,G__GMCDict_212_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - partid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReturnParticleType",1878,G__GMCDict_212_0_44, 117, G__get_linked_tagnum(&G__GMCDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsHeavyFlavourQuark",1948,G__GMCDict_212_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AssociatedWithNegativeFMCKINID",2836,G__GMCDict_212_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsAssociatedWithNegativeFMCKINID",3024,G__GMCDict_212_0_47, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAssociatedMCJet",1759,G__GMCDict_212_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GJet' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAssociatedMCJet",1747,G__GMCDict_212_0_49, 85, G__get_linked_tagnum(&G__GMCDictLN_GJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAssociatedMCPMJet",1916,G__GMCDict_212_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GJet' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAssociatedMCPMJet",1904,G__GMCDict_212_0_51, 85, G__get_linked_tagnum(&G__GMCDictLN_GJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSecondAssociatedMCJetToMCMuon",3117,G__GMCDict_212_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GJet' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSecondAssociatedMCJetToMCMuon",3105,G__GMCDict_212_0_53, 85, G__get_linked_tagnum(&G__GMCDictLN_GJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChosenMCMuon",1467,G__GMCDict_212_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintMessage",1234,G__GMCDict_212_0_55, 117, G__get_linked_tagnum(&G__GMCDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__GMCDict_212_0_56, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GMCDict_212_0_57, 85, G__get_linked_tagnum(&G__GMCDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GMCDict_212_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GMCDict_212_0_59, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GMCDict_212_0_60, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GMCDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GMCDict_212_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GMCDict_212_0_65, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GMCDict_212_0_66, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GMCDict_212_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GMCDict_212_0_68, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GMC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GMC", 215, G__GMCDict_212_0_69, (int) ('i'), G__get_linked_tagnum(&G__GMCDictLN_GMC), -1, 0, 1, 1, 1, 0, "u 'GMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GMC", 341, G__GMCDict_212_0_70, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GMCDict_212_0_71, (int) ('u'), G__get_linked_tagnum(&G__GMCDictLN_GMC), -1, 1, 1, 1, 1, 0, "u 'GMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGMCDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGMCDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGMCDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GMCDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_EZMCType = { "EZMCType" , 101 , -1 };
G__linked_taginfo G__GMCDictLN_EZMCMuonType = { "EZMCMuonType" , 101 , -1 };
G__linked_taginfo G__GMCDictLN_GMuon = { "GMuon" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_GMCVertex = { "GMCVertex" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_GJet = { "GJet" , 99 , -1 };
G__linked_taginfo G__GMCDictLN_GMC = { "GMC" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGMCDict() {
  G__GMCDictLN_TClass.tagnum = -1 ;
  G__GMCDictLN_TBuffer.tagnum = -1 ;
  G__GMCDictLN_TMemberInspector.tagnum = -1 ;
  G__GMCDictLN_TObject.tagnum = -1 ;
  G__GMCDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GMCDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GMCDictLN_TString.tagnum = -1 ;
  G__GMCDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__GMCDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__GMCDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__GMCDictLN_TLorentzVector.tagnum = -1 ;
  G__GMCDictLN_EZMCType.tagnum = -1 ;
  G__GMCDictLN_EZMCMuonType.tagnum = -1 ;
  G__GMCDictLN_GMuon.tagnum = -1 ;
  G__GMCDictLN_GMCVertex.tagnum = -1 ;
  G__GMCDictLN_GJet.tagnum = -1 ;
  G__GMCDictLN_GMC.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGMCDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TString);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_EZMCType);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_EZMCMuonType);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_GMuon);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_GMCVertex);
   G__get_linked_tagnum_fwd(&G__GMCDictLN_GJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GMCDictLN_GMC),sizeof(GMC),-1,62720,"mc particle class",G__setup_memvarGMC,G__setup_memfuncGMC);
}
extern "C" void G__cpp_setupGMCDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGMCDict()");
  G__set_cpp_environmentGMCDict();
  G__cpp_setup_tagtableGMCDict();

  G__cpp_setup_inheritanceGMCDict();

  G__cpp_setup_typetableGMCDict();

  G__cpp_setup_memvarGMCDict();

  G__cpp_setup_memfuncGMCDict();
  G__cpp_setup_globalGMCDict();
  G__cpp_setup_funcGMCDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGMCDict();
  return;
}
class G__cpp_setup_initGMCDict {
  public:
    G__cpp_setup_initGMCDict() { G__add_setup_func("GMCDict",(G__incsetup)(&G__cpp_setupGMCDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGMCDict() { G__remove_setup_func("GMCDict"); }
};
G__cpp_setup_initGMCDict G__cpp_setup_initializerGMCDict;

