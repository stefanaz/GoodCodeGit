//
// File generated by rootcint at Fri Oct 24 10:58:00 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GLogCheckerDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GLogChecker_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_GLogChecker(void *p);
   static void deleteArray_GLogChecker(void *p);
   static void destruct_GLogChecker(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GLogChecker*)
   {
      ::GLogChecker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GLogChecker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GLogChecker", ::GLogChecker::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GLogChecker.h", 18,
                  typeid(::GLogChecker), DefineBehavior(ptr, ptr),
                  &::GLogChecker::Dictionary, isa_proxy, 0,
                  sizeof(::GLogChecker) );
      instance.SetDelete(&delete_GLogChecker);
      instance.SetDeleteArray(&deleteArray_GLogChecker);
      instance.SetDestructor(&destruct_GLogChecker);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GLogChecker*)
   {
      return GenerateInitInstanceLocal((::GLogChecker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GLogChecker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GLogChecker::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GLogChecker::Class_Name()
{
   return "GLogChecker";
}

//______________________________________________________________________________
const char *GLogChecker::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GLogChecker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GLogChecker::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GLogChecker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GLogChecker::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GLogChecker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GLogChecker::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GLogChecker*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GLogChecker::Streamer(TBuffer &R__b)
{
   // Stream an object of class GLogChecker.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void GLogChecker::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GLogChecker.
      TClass *R__cl = ::GLogChecker::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_GLogChecker(void *p) {
      delete ((::GLogChecker*)p);
   }
   static void deleteArray_GLogChecker(void *p) {
      delete [] ((::GLogChecker*)p);
   }
   static void destruct_GLogChecker(void *p) {
      typedef ::GLogChecker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GLogChecker

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GLogCheckerDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGLogCheckerDict();

extern "C" void G__set_cpp_environmentGLogCheckerDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GLogChecker.h");
  G__cpp_reset_tagtableGLogCheckerDict();
}
#include <new>
extern "C" int G__cpp_dllrevGLogCheckerDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GLogChecker */
static int G__GLogCheckerDict_154_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GLogChecker* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GLogChecker((Int_t) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) GLogChecker((Int_t) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GLogCheckerDictLN_GLogChecker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GLogChecker*) G__getstructoffset())->ReturnHelpMessage();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLogChecker*) G__getstructoffset())->PrintHelpMessage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLogChecker*) G__getstructoffset())->Init((Int_t) G__int(libp->para[0]), (char**) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLogChecker*) G__getstructoffset())->CheckLogFiles((Int_t) G__int(libp->para[0]), (char**) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GLogChecker*) G__getstructoffset())->CheckLogFile(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GLogChecker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GLogChecker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GLogChecker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GLogChecker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GLogChecker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GLogChecker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GLogChecker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GLogChecker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GLogCheckerDict_154_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GLogChecker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GLogCheckerDict_154_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GLogChecker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GLogChecker(*(GLogChecker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GLogCheckerDictLN_GLogChecker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GLogChecker G__TGLogChecker;
static int G__GLogCheckerDict_154_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GLogChecker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GLogChecker*) (soff+(sizeof(GLogChecker)*i)))->~G__TGLogChecker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GLogChecker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GLogChecker*) (soff))->~G__TGLogChecker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GLogCheckerDict_154_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GLogChecker* dest = (GLogChecker*) G__getstructoffset();
   *dest = *(GLogChecker*) libp->para[0].ref;
   const GLogChecker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GLogChecker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGLogCheckerDict {
 public:
  G__Sizep2memfuncGLogCheckerDict(): p(&G__Sizep2memfuncGLogCheckerDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGLogCheckerDict::*p)();
};

size_t G__get_sizep2memfuncGLogCheckerDict()
{
  G__Sizep2memfuncGLogCheckerDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGLogCheckerDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GLogCheckerDictLN_GLogChecker))) {
     GLogChecker *G__Lderived;
     G__Lderived=(GLogChecker*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GLogCheckerDictLN_GLogChecker),G__get_linked_tagnum(&G__GLogCheckerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGLogCheckerDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GLogCheckerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GLogCheckerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GLogCheckerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GLogCheckerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GLogCheckerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GLogCheckerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GLogChecker */
static void G__setup_memvarGLogChecker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GLogCheckerDictLN_GLogChecker));
   { GLogChecker *p; p=(GLogChecker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GLogCheckerDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGLogCheckerDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGLogChecker(void) {
   /* GLogChecker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GLogCheckerDictLN_GLogChecker));
   G__memfunc_setup("GLogChecker",1054,G__GLogCheckerDict_154_0_1, 105, G__get_linked_tagnum(&G__GLogCheckerDictLN_GLogChecker), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReturnHelpMessage",1742,G__GLogCheckerDict_154_0_2, 117, G__get_linked_tagnum(&G__GLogCheckerDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintHelpMessage",1627,G__GLogCheckerDict_154_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__GLogCheckerDict_154_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckLogFiles",1267,G__GLogCheckerDict_154_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckLogFile",1152,G__GLogCheckerDict_154_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GLogCheckerDict_154_0_7, 85, G__get_linked_tagnum(&G__GLogCheckerDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GLogChecker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GLogCheckerDict_154_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GLogChecker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GLogCheckerDict_154_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GLogChecker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GLogCheckerDict_154_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GLogChecker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GLogCheckerDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GLogCheckerDict_154_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GLogCheckerDict_154_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GLogChecker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GLogCheckerDict_154_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GLogChecker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GLogCheckerDict_154_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GLogChecker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GLogCheckerDict_154_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GLogChecker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GLogChecker", 1054, G__GLogCheckerDict_154_0_19, (int) ('i'), G__get_linked_tagnum(&G__GLogCheckerDictLN_GLogChecker), -1, 0, 1, 1, 1, 0, "u 'GLogChecker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GLogChecker", 1180, G__GLogCheckerDict_154_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GLogCheckerDict_154_0_21, (int) ('u'), G__get_linked_tagnum(&G__GLogCheckerDictLN_GLogChecker), -1, 1, 1, 1, 1, 0, "u 'GLogChecker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGLogCheckerDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGLogCheckerDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGLogCheckerDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GLogCheckerDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GLogCheckerDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GLogCheckerDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GLogCheckerDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GLogCheckerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GLogCheckerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GLogCheckerDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GLogCheckerDictLN_GLogChecker = { "GLogChecker" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGLogCheckerDict() {
  G__GLogCheckerDictLN_TClass.tagnum = -1 ;
  G__GLogCheckerDictLN_TBuffer.tagnum = -1 ;
  G__GLogCheckerDictLN_TMemberInspector.tagnum = -1 ;
  G__GLogCheckerDictLN_TObject.tagnum = -1 ;
  G__GLogCheckerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GLogCheckerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GLogCheckerDictLN_TString.tagnum = -1 ;
  G__GLogCheckerDictLN_GLogChecker.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGLogCheckerDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GLogCheckerDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GLogCheckerDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GLogCheckerDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GLogCheckerDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GLogCheckerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GLogCheckerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GLogCheckerDictLN_TString);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GLogCheckerDictLN_GLogChecker),sizeof(GLogChecker),-1,62464,"Card file variable class",G__setup_memvarGLogChecker,G__setup_memfuncGLogChecker);
}
extern "C" void G__cpp_setupGLogCheckerDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGLogCheckerDict()");
  G__set_cpp_environmentGLogCheckerDict();
  G__cpp_setup_tagtableGLogCheckerDict();

  G__cpp_setup_inheritanceGLogCheckerDict();

  G__cpp_setup_typetableGLogCheckerDict();

  G__cpp_setup_memvarGLogCheckerDict();

  G__cpp_setup_memfuncGLogCheckerDict();
  G__cpp_setup_globalGLogCheckerDict();
  G__cpp_setup_funcGLogCheckerDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGLogCheckerDict();
  return;
}
class G__cpp_setup_initGLogCheckerDict {
  public:
    G__cpp_setup_initGLogCheckerDict() { G__add_setup_func("GLogCheckerDict",(G__incsetup)(&G__cpp_setupGLogCheckerDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGLogCheckerDict() { G__remove_setup_func("GLogCheckerDict"); }
};
G__cpp_setup_initGLogCheckerDict G__cpp_setup_initializerGLogCheckerDict;

