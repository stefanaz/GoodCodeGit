//
// File generated by rootcint at Fri Oct 24 10:58:01 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GMJMatchDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GMJMatch_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_GMJMatch(void *p);
   static void deleteArray_GMJMatch(void *p);
   static void destruct_GMJMatch(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GMJMatch*)
   {
      ::GMJMatch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GMJMatch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GMJMatch", ::GMJMatch::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GMJMatch.h", 29,
                  typeid(::GMJMatch), DefineBehavior(ptr, ptr),
                  &::GMJMatch::Dictionary, isa_proxy, 0,
                  sizeof(::GMJMatch) );
      instance.SetDelete(&delete_GMJMatch);
      instance.SetDeleteArray(&deleteArray_GMJMatch);
      instance.SetDestructor(&destruct_GMJMatch);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GMJMatch*)
   {
      return GenerateInitInstanceLocal((::GMJMatch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GMJMatch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GMJMatch::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GMJMatch::Class_Name()
{
   return "GMJMatch";
}

//______________________________________________________________________________
const char *GMJMatch::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GMJMatch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GMJMatch::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GMJMatch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GMJMatch::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GMJMatch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GMJMatch::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GMJMatch*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GMJMatch::Streamer(TBuffer &R__b)
{
   // Stream an object of class GMJMatch.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void GMJMatch::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GMJMatch.
      TClass *R__cl = ::GMJMatch::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "*fJet", &fJet);
      R__insp.Inspect(R__cl, R__parent, "*fMuon", &fMuon);
      R__insp.Inspect(R__cl, R__parent, "fDeltaR", &fDeltaR);
      R__insp.Inspect(R__cl, R__parent, "fDeltaPhi", &fDeltaPhi);
      R__insp.Inspect(R__cl, R__parent, "fDeltaEta", &fDeltaEta);
      R__insp.Inspect(R__cl, R__parent, "fDeltaTheta", &fDeltaTheta);
      R__insp.Inspect(R__cl, R__parent, "fPtRel", &fPtRel);
      R__insp.Inspect(R__cl, R__parent, "fEtJetMinusPtMu", &fEtJetMinusPtMu);
      R__insp.Inspect(R__cl, R__parent, "fPtRelJetMinMu", &fPtRelJetMinMu);
      R__insp.Inspect(R__cl, R__parent, "fDeltaRJetMinMu", &fDeltaRJetMinMu);
      R__insp.Inspect(R__cl, R__parent, "fMuMinusJetPt", &fMuMinusJetPt);
      R__insp.Inspect(R__cl, R__parent, "fMuonAllCuts", &fMuonAllCuts);
      R__insp.Inspect(R__cl, R__parent, "fJetCritCuts", &fJetCritCuts);
      R__insp.Inspect(R__cl, R__parent, "fJetPtCut", &fJetPtCut);
      R__insp.Inspect(R__cl, R__parent, "fMuMinusJetPtCut", &fMuMinusJetPtCut);
      R__insp.Inspect(R__cl, R__parent, "fPtRelCut", &fPtRelCut);
      R__insp.Inspect(R__cl, R__parent, "fAllCuts", &fAllCuts);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_GMJMatch(void *p) {
      delete ((::GMJMatch*)p);
   }
   static void deleteArray_GMJMatch(void *p) {
      delete [] ((::GMJMatch*)p);
   }
   static void destruct_GMJMatch(void *p) {
      typedef ::GMJMatch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GMJMatch

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GMJMatchDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGMJMatchDict();

extern "C" void G__set_cpp_environmentGMJMatchDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GMJMatch.h");
  G__cpp_reset_tagtableGMJMatchDict();
}
#include <new>
extern "C" int G__cpp_dllrevGMJMatchDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GMJMatch */
static int G__GMJMatchDict_157_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GMJMatch* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GMJMatch((GMuon*) G__int(libp->para[0]), (GJet*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) GMJMatch((GMuon*) G__int(libp->para[0]), (GJet*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GMJMatchDictLN_GMJMatch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMJMatch*) G__getstructoffset())->Calculate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMJMatch*) G__getstructoffset())->GetJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMJMatch*) G__getstructoffset())->GetMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMJMatch*) G__getstructoffset())->GetDeltaR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMJMatch*) G__getstructoffset())->GetDeltaPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMJMatch*) G__getstructoffset())->GetDeltaEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMJMatch*) G__getstructoffset())->GetDeltaTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMJMatch*) G__getstructoffset())->GetPtRel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMJMatch*) G__getstructoffset())->GetPtRelJetMinMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMJMatch*) G__getstructoffset())->GetDeltaRJetMinMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMJMatch*) G__getstructoffset())->GetMuMinusJetPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMJMatch*) G__getstructoffset())->SetMuonAllCuts((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMJMatch*) G__getstructoffset())->SetJetCritCuts((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMJMatch*) G__getstructoffset())->SetJetPtCut((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMJMatch*) G__getstructoffset())->SetMuMinusJetPtCut((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMJMatch*) G__getstructoffset())->SetPtRelCut((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMJMatch*) G__getstructoffset())->SetAllCuts((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMJMatch*) G__getstructoffset())->SetType((EZMJMatchType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMJMatch*) G__getstructoffset())->GetMuonAllCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMJMatch*) G__getstructoffset())->GetJetCritCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMJMatch*) G__getstructoffset())->GetJetPtCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMJMatch*) G__getstructoffset())->GetMuMinusJetPtCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMJMatch*) G__getstructoffset())->GetPtRelCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMJMatch*) G__getstructoffset())->GetAllCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMJMatch*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GMJMatch*) G__getstructoffset())->PrintMessage(*((TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMJMatch*) G__getstructoffset())->Print(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GMJMatch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMJMatch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GMJMatch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GMJMatch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMJMatch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMJMatch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GMJMatch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMJMatch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMJMatchDict_157_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GMJMatch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GMJMatchDict_157_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GMJMatch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GMJMatch(*(GMJMatch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GMJMatchDictLN_GMJMatch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GMJMatch G__TGMJMatch;
static int G__GMJMatchDict_157_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GMJMatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GMJMatch*) (soff+(sizeof(GMJMatch)*i)))->~G__TGMJMatch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GMJMatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GMJMatch*) (soff))->~G__TGMJMatch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GMJMatchDict_157_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GMJMatch* dest = (GMJMatch*) G__getstructoffset();
   *dest = *(GMJMatch*) libp->para[0].ref;
   const GMJMatch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GMJMatch */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGMJMatchDict {
 public:
  G__Sizep2memfuncGMJMatchDict(): p(&G__Sizep2memfuncGMJMatchDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGMJMatchDict::*p)();
};

size_t G__get_sizep2memfuncGMJMatchDict()
{
  G__Sizep2memfuncGMJMatchDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGMJMatchDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GMJMatchDictLN_GMJMatch))) {
     GMJMatch *G__Lderived;
     G__Lderived=(GMJMatch*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GMJMatchDictLN_GMJMatch),G__get_linked_tagnum(&G__GMJMatchDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGMJMatchDict() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GMJMatchDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GMJMatchDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GMJMatchDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GMJMatchDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GMJMatchDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GMJMatchDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GMJMatch */
static void G__setup_memvarGMJMatch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GMJMatchDictLN_GMJMatch));
   { GMJMatch *p; p=(GMJMatch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__GMJMatchDictLN_EZMJMatchType),-1,-1,4,"fType=",0,"type of jet-muon match");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMJMatchDictLN_GJet),-1,-1,4,"fJet=",0,"pointer to jet belonging to this match");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMJMatchDictLN_GMuon),-1,-1,4,"fMuon=",0,"pointer to muon belonging to this match");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaR=",0,"discriminant delta r = sqrt(delta-eta^2+delta-phi^2)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaPhi=",0,"difference in phi between jet and muon (always positive)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaEta=",0,"difference in eta between jet and muon (always positive)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaTheta=",0,"difference in theta between jet and muon (always positive)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPtRel=",0,"relative transverse momentum of muon to jet");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEtJetMinusPtMu=",0,"JetEt - MuonPt");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPtRelJetMinMu=",0,"relative transverse momentum of muon to (jet-muon)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaRJetMinMu=",0,"mu - jet delta r");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMuMinusJetPt=",0,"mu - jet p_t");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMuonAllCuts=",0,"muon of match fulfills all cuts");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fJetCritCuts=",0,"event fulfills jet criteria cuts");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fJetPtCut=",0,"jet of muon fulfills p_t cut");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMuMinusJetPtCut=",0,"match fulfills cut on p_t of mu-jet");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPtRelCut=",0,"match fulfills cut on PtRel (upper and lower bound)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAllCuts=",0,"match fulfills all cuts");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMJMatchDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGMJMatchDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGMJMatch(void) {
   /* GMJMatch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GMJMatchDictLN_GMJMatch));
   G__memfunc_setup("GMJMatch",715,G__GMJMatchDict_157_0_1, 105, G__get_linked_tagnum(&G__GMJMatchDictLN_GMJMatch), -1, 0, 2, 1, 1, 0, 
"U 'GMuon' - 0 - muon U 'GJet' - 0 - jet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__GMJMatchDict_157_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJet",579,G__GMJMatchDict_157_0_3, 85, G__get_linked_tagnum(&G__GMJMatchDictLN_GJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuon",703,G__GMJMatchDict_157_0_4, 85, G__get_linked_tagnum(&G__GMJMatchDictLN_GMuon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDeltaR",860,G__GMJMatchDict_157_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDeltaPhi",1067,G__GMJMatchDict_157_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDeltaEta",1060,G__GMJMatchDict_157_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDeltaTheta",1280,G__GMJMatchDict_157_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPtRel",775,G__GMJMatchDict_157_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPtRelJetMinMu",1552,G__GMJMatchDict_157_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDeltaRJetMinMu",1637,G__GMJMatchDict_157_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuMinusJetPt",1493,G__GMJMatchDict_157_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMuonAllCuts",1411,G__GMJMatchDict_157_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetJetCritCuts",1408,G__GMJMatchDict_157_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetJetPtCut",1087,G__GMJMatchDict_157_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMuMinusJetPtCut",1805,G__GMJMatchDict_157_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPtRelCut",1087,G__GMJMatchDict_157_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAllCuts",996,G__GMJMatchDict_157_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__GMJMatchDict_157_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i 'EZMJMatchType' - 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonAllCuts",1399,G__GMJMatchDict_157_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetCritCuts",1396,G__GMJMatchDict_157_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetPtCut",1075,G__GMJMatchDict_157_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuMinusJetPtCut",1793,G__GMJMatchDict_157_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPtRelCut",1075,G__GMJMatchDict_157_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAllCuts",984,G__GMJMatchDict_157_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__GMJMatchDict_157_0_26, 105, G__get_linked_tagnum(&G__GMJMatchDictLN_EZMJMatchType), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintMessage",1234,G__GMJMatchDict_157_0_27, 117, G__get_linked_tagnum(&G__GMJMatchDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__GMJMatchDict_157_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GMJMatchDict_157_0_29, 85, G__get_linked_tagnum(&G__GMJMatchDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GMJMatch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GMJMatchDict_157_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMJMatch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GMJMatchDict_157_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GMJMatch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GMJMatchDict_157_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GMJMatch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GMJMatchDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GMJMatchDict_157_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GMJMatchDict_157_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMJMatch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GMJMatchDict_157_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GMJMatch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GMJMatchDict_157_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMJMatch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GMJMatchDict_157_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GMJMatch::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GMJMatch", 715, G__GMJMatchDict_157_0_41, (int) ('i'), G__get_linked_tagnum(&G__GMJMatchDictLN_GMJMatch), -1, 0, 1, 1, 1, 0, "u 'GMJMatch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GMJMatch", 841, G__GMJMatchDict_157_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GMJMatchDict_157_0_43, (int) ('u'), G__get_linked_tagnum(&G__GMJMatchDictLN_GMJMatch), -1, 1, 1, 1, 1, 0, "u 'GMJMatch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGMJMatchDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGMJMatchDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGMJMatchDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GMJMatchDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GMJMatchDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GMJMatchDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GMJMatchDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GMJMatchDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GMJMatchDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GMJMatchDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GMJMatchDictLN_GJet = { "GJet" , 99 , -1 };
G__linked_taginfo G__GMJMatchDictLN_GMuon = { "GMuon" , 99 , -1 };
G__linked_taginfo G__GMJMatchDictLN_EZMJMatchType = { "EZMJMatchType" , 101 , -1 };
G__linked_taginfo G__GMJMatchDictLN_GMJMatch = { "GMJMatch" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGMJMatchDict() {
  G__GMJMatchDictLN_TClass.tagnum = -1 ;
  G__GMJMatchDictLN_TBuffer.tagnum = -1 ;
  G__GMJMatchDictLN_TMemberInspector.tagnum = -1 ;
  G__GMJMatchDictLN_TObject.tagnum = -1 ;
  G__GMJMatchDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GMJMatchDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GMJMatchDictLN_TString.tagnum = -1 ;
  G__GMJMatchDictLN_GJet.tagnum = -1 ;
  G__GMJMatchDictLN_GMuon.tagnum = -1 ;
  G__GMJMatchDictLN_EZMJMatchType.tagnum = -1 ;
  G__GMJMatchDictLN_GMJMatch.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGMJMatchDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GMJMatchDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GMJMatchDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GMJMatchDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GMJMatchDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GMJMatchDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GMJMatchDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GMJMatchDictLN_TString);
   G__get_linked_tagnum_fwd(&G__GMJMatchDictLN_GJet);
   G__get_linked_tagnum_fwd(&G__GMJMatchDictLN_GMuon);
   G__get_linked_tagnum_fwd(&G__GMJMatchDictLN_EZMJMatchType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GMJMatchDictLN_GMJMatch),sizeof(GMJMatch),-1,62464,"muon-jet match class",G__setup_memvarGMJMatch,G__setup_memfuncGMJMatch);
}
extern "C" void G__cpp_setupGMJMatchDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGMJMatchDict()");
  G__set_cpp_environmentGMJMatchDict();
  G__cpp_setup_tagtableGMJMatchDict();

  G__cpp_setup_inheritanceGMJMatchDict();

  G__cpp_setup_typetableGMJMatchDict();

  G__cpp_setup_memvarGMJMatchDict();

  G__cpp_setup_memfuncGMJMatchDict();
  G__cpp_setup_globalGMJMatchDict();
  G__cpp_setup_funcGMJMatchDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGMJMatchDict();
  return;
}
class G__cpp_setup_initGMJMatchDict {
  public:
    G__cpp_setup_initGMJMatchDict() { G__add_setup_func("GMJMatchDict",(G__incsetup)(&G__cpp_setupGMJMatchDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGMJMatchDict() { G__remove_setup_func("GMJMatchDict"); }
};
G__cpp_setup_initGMJMatchDict G__cpp_setup_initializerGMJMatchDict;

