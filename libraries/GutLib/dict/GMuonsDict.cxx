//
// File generated by rootcint at Fri Oct 24 10:58:02 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GMuonsDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GMuons_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_GMuons(void *p = 0);
   static void *newArray_GMuons(Long_t size, void *p);
   static void delete_GMuons(void *p);
   static void deleteArray_GMuons(void *p);
   static void destruct_GMuons(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GMuons*)
   {
      ::GMuons *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GMuons >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GMuons", ::GMuons::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GMuons.h", 22,
                  typeid(::GMuons), DefineBehavior(ptr, ptr),
                  &::GMuons::Dictionary, isa_proxy, 0,
                  sizeof(::GMuons) );
      instance.SetNew(&new_GMuons);
      instance.SetNewArray(&newArray_GMuons);
      instance.SetDelete(&delete_GMuons);
      instance.SetDeleteArray(&deleteArray_GMuons);
      instance.SetDestructor(&destruct_GMuons);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GMuons*)
   {
      return GenerateInitInstanceLocal((::GMuons*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GMuons*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GMuons::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GMuons::Class_Name()
{
   return "GMuons";
}

//______________________________________________________________________________
const char *GMuons::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GMuons*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GMuons::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GMuons*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GMuons::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GMuons*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GMuons::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GMuons*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GMuons::Streamer(TBuffer &R__b)
{
   // Stream an object of class GMuons.

   GPhysObj::Streamer(R__b);
}

//______________________________________________________________________________
void GMuons::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GMuons.
      TClass *R__cl = ::GMuons::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMuonEfficiency", &fMuonEfficiency);
      R__insp.Inspect(R__cl, R__parent, "*randgen", &randgen);
      R__insp.Inspect(R__cl, R__parent, "fBarrelMuons", &fBarrelMuons);
      R__insp.Inspect(R__cl, R__parent, "fRearMuons", &fRearMuons);
      R__insp.Inspect(R__cl, R__parent, "fForwardMuons", &fForwardMuons);
      R__insp.Inspect(R__cl, R__parent, "fNMuons", &fNMuons);
      R__insp.Inspect(R__cl, R__parent, "*fMuons", &fMuons);
      R__insp.Inspect(R__cl, R__parent, "fMuonsCut", &fMuonsCut);
      R__insp.Inspect(R__cl, R__parent, "fMuonsMinIsolation10Veto", &fMuonsMinIsolation10Veto);
      R__insp.Inspect(R__cl, R__parent, "fGlomus", &fGlomus);
      R__insp.Inspect(R__cl, R__parent, "fMuonImp", &fMuonImp);
      R__insp.Inspect(R__cl, R__parent, "fMuonImperr", &fMuonImperr);
      R__insp.Inspect(R__cl, R__parent, "fMuonDCA_x", &fMuonDCA_x);
      R__insp.Inspect(R__cl, R__parent, "fMuonDCA_y", &fMuonDCA_y);
      R__insp.Inspect(R__cl, R__parent, "fMuonDCA_z", &fMuonDCA_z);
      R__insp.Inspect(R__cl, R__parent, "fMuonImpSig", &fMuonImpSig);
      R__insp.Inspect(R__cl, R__parent, "fMuonJetMass", &fMuonJetMass);
      R__insp.Inspect(R__cl, R__parent, "fMuonJetEt", &fMuonJetEt);
      R__insp.Inspect(R__cl, R__parent, "fMuonMuz", &fMuonMuz);
      R__insp.Inspect(R__cl, R__parent, "fMuonMundof", &fMuonMundof);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralNMU_uncut", &fGeneralNMU_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralNMUForward_uncut", &fGeneralNMUForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralNMUBarrel_uncut", &fGeneralNMUBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralNMURear_uncut", &fGeneralNMURear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRegions_uncut", &fGeneralRegions_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeight_uncut", &fGeneralWeight_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightForward_uncut", &fGeneralWeightForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBarrel_uncut", &fGeneralWeightBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightRear_uncut", &fGeneralWeightRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMUBAC_uncut", &fGeneralWeightMUBAC_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMUBACForward_uncut", &fGeneralWeightMUBACForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMUBACBarrel_uncut", &fGeneralWeightMUBACBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMUBACRear_uncut", &fGeneralWeightMUBACRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMAT_uncut", &fGeneralWeightBREMAT_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATForward_uncut", &fGeneralWeightBREMATForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATBarrel_uncut", &fGeneralWeightBREMATBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATRear_uncut", &fGeneralWeightBREMATRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCH_uncut", &fGeneralWeightMPMATCH_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHForward_uncut", &fGeneralWeightMPMATCHForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHBarrel_uncut", &fGeneralWeightMPMATCHBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHRear_uncut", &fGeneralWeightMPMATCHRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATMUBAC_uncut", &fGeneralWeightBREMATMUBAC_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATMUBACForward_uncut", &fGeneralWeightBREMATMUBACForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATMUBACBarrel_uncut", &fGeneralWeightBREMATMUBACBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATMUBACRear_uncut", &fGeneralWeightBREMATMUBACRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHMUBAC_uncut", &fGeneralWeightMPMATCHMUBAC_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHMUBACForward_uncut", &fGeneralWeightMPMATCHMUBACForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHMUBACBarrel_uncut", &fGeneralWeightMPMATCHMUBACBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHMUBACRear_uncut", &fGeneralWeightMPMATCHMUBACRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralProb_uncut", &fGeneralProb_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralProbForward_uncut", &fGeneralProbForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralProbBarrel_uncut", &fGeneralProbBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralProbRear_uncut", &fGeneralProbRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralP_uncut", &fGeneralP_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPForward_uncut", &fGeneralPForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPBarrel_uncut", &fGeneralPBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPRear_uncut", &fGeneralPRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPt_uncut", &fGeneralPt_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtForward_uncut", &fGeneralPtForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtBarrel_uncut", &fGeneralPtBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtRear_uncut", &fGeneralPtRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtSpecial_uncut", &fGeneralPtSpecial_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtSpecialForward_uncut", &fGeneralPtSpecialForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtSpecialBarrel_uncut", &fGeneralPtSpecialBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtSpecialRear_uncut", &fGeneralPtSpecialRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPx_uncut", &fGeneralPx_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPxForward_uncut", &fGeneralPxForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPxBarrel_uncut", &fGeneralPxBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPxRear_uncut", &fGeneralPxRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPy_uncut", &fGeneralPy_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPyForward_uncut", &fGeneralPyForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPyBarrel_uncut", &fGeneralPyBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPyRear_uncut", &fGeneralPyRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPz_uncut", &fGeneralPz_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPzForward_uncut", &fGeneralPzForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPzBarrel_uncut", &fGeneralPzBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPzRear_uncut", &fGeneralPzRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhi_uncut", &fGeneralPhi_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiForward_uncut", &fGeneralPhiForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBarrel_uncut", &fGeneralPhiBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiRear_uncut", &fGeneralPhiRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMUBAC_uncut", &fGeneralPhiMUBAC_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMUBACForward_uncut", &fGeneralPhiMUBACForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMUBACBarrel_uncut", &fGeneralPhiMUBACBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMUBACRear_uncut", &fGeneralPhiMUBACRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMAT_uncut", &fGeneralPhiBREMAT_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATForward_uncut", &fGeneralPhiBREMATForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATBarrel_uncut", &fGeneralPhiBREMATBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATRear_uncut", &fGeneralPhiBREMATRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCH_uncut", &fGeneralPhiMPMATCH_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHForward_uncut", &fGeneralPhiMPMATCHForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHBarrel_uncut", &fGeneralPhiMPMATCHBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHRear_uncut", &fGeneralPhiMPMATCHRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATMUBAC_uncut", &fGeneralPhiBREMATMUBAC_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATMUBACForward_uncut", &fGeneralPhiBREMATMUBACForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATMUBACBarrel_uncut", &fGeneralPhiBREMATMUBACBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATMUBACRear_uncut", &fGeneralPhiBREMATMUBACRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHMUBAC_uncut", &fGeneralPhiMPMATCHMUBAC_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHMUBACForward_uncut", &fGeneralPhiMPMATCHMUBACForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHMUBACBarrel_uncut", &fGeneralPhiMPMATCHMUBACBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHMUBACRear_uncut", &fGeneralPhiMPMATCHMUBACRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralTheta_uncut", &fGeneralTheta_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralThetaForward_uncut", &fGeneralThetaForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralThetaBarrel_uncut", &fGeneralThetaBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralThetaRear_uncut", &fGeneralThetaRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEta_uncut", &fGeneralEta_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaForward_uncut", &fGeneralEtaForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaBarrel_uncut", &fGeneralEtaBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaRear_uncut", &fGeneralEtaRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCharge_uncut", &fGeneralCharge_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChargeForward_uncut", &fGeneralChargeForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChargeBarrel_uncut", &fGeneralChargeBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChargeRear_uncut", &fGeneralChargeRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuonFinder_uncut", &fGeneralMuonFinder_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuonFinder4_uncut", &fGeneralMuonFinder4_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuonFinder5_uncut", &fGeneralMuonFinder5_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuonFinder6_uncut", &fGeneralMuonFinder6_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder_uncut", &fGeneralSpecialFinder_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinderForward_uncut", &fGeneralSpecialFinderForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinderBarrel_uncut", &fGeneralSpecialFinderBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinderRear_uncut", &fGeneralSpecialFinderRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPMCTRUE_uncut", &fGeneralPMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXMCTRUE_uncut", &fGeneralPXMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYMCTRUE_uncut", &fGeneralPYMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZMCTRUE_uncut", &fGeneralPZMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQuality_uncut", &fGeneralQuality_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQualityAndTrue_uncut", &fGeneralQualityAndTrue_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQualityForward_uncut", &fGeneralQualityForward_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQualityBarrel_uncut", &fGeneralQualityBarrel_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQualityRear_uncut", &fGeneralQualityRear_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPvsPMCTRUE_uncut", &fGeneralPvsPMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXvsPXMCTRUE_uncut", &fGeneralPXvsPXMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYvsPYMCTRUE_uncut", &fGeneralPYvsPYMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZvsPZMCTRUE_uncut", &fGeneralPZvsPZMCTRUE_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPMCTRUEpos_uncut", &fGeneralPMCTRUEpos_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXMCTRUEpos_uncut", &fGeneralPXMCTRUEpos_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYMCTRUEpos_uncut", &fGeneralPYMCTRUEpos_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZMCTRUEpos_uncut", &fGeneralPZMCTRUEpos_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPvsPMCTRUEpos_uncut", &fGeneralPvsPMCTRUEpos_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXvsPXMCTRUEpos_uncut", &fGeneralPXvsPXMCTRUEpos_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYvsPYMCTRUEpos_uncut", &fGeneralPYvsPYMCTRUEpos_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZvsPZMCTRUEpos_uncut", &fGeneralPZvsPZMCTRUEpos_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPMCTRUEneg_uncut", &fGeneralPMCTRUEneg_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXMCTRUEneg_uncut", &fGeneralPXMCTRUEneg_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYMCTRUEneg_uncut", &fGeneralPYMCTRUEneg_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZMCTRUEneg_uncut", &fGeneralPZMCTRUEneg_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPvsPMCTRUEneg_uncut", &fGeneralPvsPMCTRUEneg_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXvsPXMCTRUEneg_uncut", &fGeneralPXvsPXMCTRUEneg_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYvsPYMCTRUEneg_uncut", &fGeneralPYvsPYMCTRUEneg_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZvsPZMCTRUEneg_uncut", &fGeneralPZvsPZMCTRUEneg_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DBeamSpotImpactParameter_uncut", &fGeneral2DBeamSpotImpactParameter_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DBeamSpotImpactSignificance_uncut", &fGeneral2DBeamSpotImpactSignificance_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DMCBeamSpotImpactParameter_uncut", &fGeneral2DMCBeamSpotImpactParameter_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DTrueImpactParameter_uncut", &fGeneral2DTrueImpactParameter_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DMCTrueImpactParameter_uncut", &fGeneral2DMCTrueImpactParameter_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DTrueImpactParamaterRecVsTrue_uncut", &fGeneral2DTrueImpactParamaterRecVsTrue_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DBeamSpotImpactParamaterRecVsTrue_uncut", &fGeneral2DBeamSpotImpactParamaterRecVsTrue_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralGMuonPVsZTTP_uncut", &fGeneralGMuonPVsZTTP_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralNMU", &fGeneralNMU);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralNMUForward", &fGeneralNMUForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralNMUBarrel", &fGeneralNMUBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralNMURear", &fGeneralNMURear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralRegions", &fGeneralRegions);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeight", &fGeneralWeight);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightForward", &fGeneralWeightForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBarrel", &fGeneralWeightBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightRear", &fGeneralWeightRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMUBAC", &fGeneralWeightMUBAC);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMUBACForward", &fGeneralWeightMUBACForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMUBACBarrel", &fGeneralWeightMUBACBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMUBACRear", &fGeneralWeightMUBACRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMAT", &fGeneralWeightBREMAT);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATForward", &fGeneralWeightBREMATForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATBarrel", &fGeneralWeightBREMATBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATRear", &fGeneralWeightBREMATRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCH", &fGeneralWeightMPMATCH);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHForward", &fGeneralWeightMPMATCHForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHBarrel", &fGeneralWeightMPMATCHBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHRear", &fGeneralWeightMPMATCHRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATMUBAC", &fGeneralWeightBREMATMUBAC);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATMUBACForward", &fGeneralWeightBREMATMUBACForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATMUBACBarrel", &fGeneralWeightBREMATMUBACBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightBREMATMUBACRear", &fGeneralWeightBREMATMUBACRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHMUBAC", &fGeneralWeightMPMATCHMUBAC);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHMUBACForward", &fGeneralWeightMPMATCHMUBACForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHMUBACBarrel", &fGeneralWeightMPMATCHMUBACBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralWeightMPMATCHMUBACRear", &fGeneralWeightMPMATCHMUBACRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralProb", &fGeneralProb);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralProbForward", &fGeneralProbForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralProbBarrel", &fGeneralProbBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralProbRear", &fGeneralProbRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralP", &fGeneralP);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPForward", &fGeneralPForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPBarrel", &fGeneralPBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPRear", &fGeneralPRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPt", &fGeneralPt);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtChosen", &fGeneralPtChosen);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtChosenFine2", &fGeneralPtChosenFine2);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtChosenFine4", &fGeneralPtChosenFine4);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtChosenFine8", &fGeneralPtChosenFine8);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtChosenFine16", &fGeneralPtChosenFine16);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtChosenMC", &fGeneralPtChosenMC);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtChosenFineMC", &fGeneralPtChosenFineMC);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtForward", &fGeneralPtForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtBarrel", &fGeneralPtBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtRear", &fGeneralPtRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtSpecial", &fGeneralPtSpecial);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtSpecialForward", &fGeneralPtSpecialForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtSpecialBarrel", &fGeneralPtSpecialBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPtSpecialRear", &fGeneralPtSpecialRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPx", &fGeneralPx);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPxForward", &fGeneralPxForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPxBarrel", &fGeneralPxBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPxRear", &fGeneralPxRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPy", &fGeneralPy);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPyForward", &fGeneralPyForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPyBarrel", &fGeneralPyBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPyRear", &fGeneralPyRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPz", &fGeneralPz);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPzForward", &fGeneralPzForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPzBarrel", &fGeneralPzBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPzRear", &fGeneralPzRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhi", &fGeneralPhi);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiForward", &fGeneralPhiForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBarrel", &fGeneralPhiBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiRear", &fGeneralPhiRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMUBAC", &fGeneralPhiMUBAC);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMUBACForward", &fGeneralPhiMUBACForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMUBACBarrel", &fGeneralPhiMUBACBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMUBACRear", &fGeneralPhiMUBACRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMAT", &fGeneralPhiBREMAT);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATForward", &fGeneralPhiBREMATForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATBarrel", &fGeneralPhiBREMATBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATRear", &fGeneralPhiBREMATRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCH", &fGeneralPhiMPMATCH);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHForward", &fGeneralPhiMPMATCHForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHBarrel", &fGeneralPhiMPMATCHBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHRear", &fGeneralPhiMPMATCHRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATMUBAC", &fGeneralPhiBREMATMUBAC);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATMUBACForward", &fGeneralPhiBREMATMUBACForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATMUBACBarrel", &fGeneralPhiBREMATMUBACBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiBREMATMUBACRear", &fGeneralPhiBREMATMUBACRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHMUBAC", &fGeneralPhiMPMATCHMUBAC);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHMUBACForward", &fGeneralPhiMPMATCHMUBACForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHMUBACBarrel", &fGeneralPhiMPMATCHMUBACBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPhiMPMATCHMUBACRear", &fGeneralPhiMPMATCHMUBACRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralTheta", &fGeneralTheta);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralThetaForward", &fGeneralThetaForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralThetaBarrel", &fGeneralThetaBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralThetaRear", &fGeneralThetaRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEta", &fGeneralEta);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaChosen", &fGeneralEtaChosen);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaChosenLarge", &fGeneralEtaChosenLarge);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaChosenMC", &fGeneralEtaChosenMC);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaChosenLargeMC", &fGeneralEtaChosenLargeMC);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaForward", &fGeneralEtaForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaBarrel", &fGeneralEtaBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralEtaRear", &fGeneralEtaRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCharge", &fGeneralCharge);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChargeForward", &fGeneralChargeForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChargeBarrel", &fGeneralChargeBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChargeRear", &fGeneralChargeRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuonFinder", &fGeneralMuonFinder);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuonFinder4", &fGeneralMuonFinder4);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuonFinder5", &fGeneralMuonFinder5);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralMuonFinder6", &fGeneralMuonFinder6);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder", &fGeneralSpecialFinder);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder4", &fGeneralSpecialFinder4);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder5", &fGeneralSpecialFinder5);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder6", &fGeneralSpecialFinder6);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder4Forward", &fGeneralSpecialFinder4Forward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder5Forward", &fGeneralSpecialFinder5Forward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder6Forward", &fGeneralSpecialFinder6Forward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder4Barrel", &fGeneralSpecialFinder4Barrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder5Barrel", &fGeneralSpecialFinder5Barrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder6Barrel", &fGeneralSpecialFinder6Barrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder4Rear", &fGeneralSpecialFinder4Rear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder5Rear", &fGeneralSpecialFinder5Rear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinder6Rear", &fGeneralSpecialFinder6Rear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinderForward", &fGeneralSpecialFinderForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinderBarrel", &fGeneralSpecialFinderBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralSpecialFinderRear", &fGeneralSpecialFinderRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPMCTRUE", &fGeneralPMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXMCTRUE", &fGeneralPXMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYMCTRUE", &fGeneralPYMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZMCTRUE", &fGeneralPZMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPvsPMCTRUE", &fGeneralPvsPMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXvsPXMCTRUE", &fGeneralPXvsPXMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYvsPYMCTRUE", &fGeneralPYvsPYMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZvsPZMCTRUE", &fGeneralPZvsPZMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPMCTRUEpos", &fGeneralPMCTRUEpos);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXMCTRUEpos", &fGeneralPXMCTRUEpos);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYMCTRUEpos", &fGeneralPYMCTRUEpos);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZMCTRUEpos", &fGeneralPZMCTRUEpos);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQuality", &fGeneralQuality);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQualityAndTrue", &fGeneralQualityAndTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQualityForward", &fGeneralQualityForward);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQualityBarrel", &fGeneralQualityBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralQualityRear", &fGeneralQualityRear);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPvsPMCTRUEpos", &fGeneralPvsPMCTRUEpos);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXvsPXMCTRUEpos", &fGeneralPXvsPXMCTRUEpos);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYvsPYMCTRUEpos", &fGeneralPYvsPYMCTRUEpos);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZvsPZMCTRUEpos", &fGeneralPZvsPZMCTRUEpos);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPMCTRUEneg", &fGeneralPMCTRUEneg);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXMCTRUEneg", &fGeneralPXMCTRUEneg);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYMCTRUEneg", &fGeneralPYMCTRUEneg);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZMCTRUEneg", &fGeneralPZMCTRUEneg);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChosenIso01", &fGeneralChosenIso01);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChosenIso02", &fGeneralChosenIso02);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChosenIso03", &fGeneralChosenIso03);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChosenIso04", &fGeneralChosenIso04);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChosenIso05", &fGeneralChosenIso05);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChosenIso06", &fGeneralChosenIso06);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChosenIso07", &fGeneralChosenIso07);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChosenIso08", &fGeneralChosenIso08);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChosenIso09", &fGeneralChosenIso09);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralChosenIso10", &fGeneralChosenIso10);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPvsPMCTRUEneg", &fGeneralPvsPMCTRUEneg);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPXvsPXMCTRUEneg", &fGeneralPXvsPXMCTRUEneg);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPYvsPYMCTRUEneg", &fGeneralPYvsPYMCTRUEneg);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralPZvsPZMCTRUEneg", &fGeneralPZvsPZMCTRUEneg);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotal", &fGeneralCrossTotal);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotalRecNTrue", &fGeneralCrossTotalRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotalMuChamber", &fGeneralCrossTotalMuChamber);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotalMuChamberRecNTrue", &fGeneralCrossTotalMuChamberRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotalBAC", &fGeneralCrossTotalBAC);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossTotalBACRecNTrue", &fGeneralCrossTotalBACRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossRegions", &fGeneralCrossRegions);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossRegionsRecNTrue", &fGeneralCrossRegionsRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossFinder", &fGeneralCrossFinder);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossFinderRecNTrue", &fGeneralCrossFinderRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossPt", &fGeneralCrossPt);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossPtRecNTrue", &fGeneralCrossPtRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossEta", &fGeneralCrossEta);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossEtaRecNTrue", &fGeneralCrossEtaRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossPtFine", &fGeneralCrossPtFine);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossPtFineRecNTrue", &fGeneralCrossPtFineRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossEtaFine", &fGeneralCrossEtaFine);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossEtaFineRecNTrue", &fGeneralCrossEtaFineRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossPtMassimo", &fGeneralCrossPtMassimo);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossPtMassimoRecNTrue", &fGeneralCrossPtMassimoRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossEtaMassimo", &fGeneralCrossEtaMassimo);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralCrossEtaMassimoRecNTrue", &fGeneralCrossEtaMassimoRecNTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DBeamSpotImpactParameter", &fGeneral2DBeamSpotImpactParameter);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DBeamSpotImpactParameter_Mirrored", &fGeneral2DBeamSpotImpactParameter_Mirrored);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DBeamSpotImpactSignificance", &fGeneral2DBeamSpotImpactSignificance);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DMCBeamSpotImpactParameter", &fGeneral2DMCBeamSpotImpactParameter);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DTrueImpactParameter", &fGeneral2DTrueImpactParameter);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DMCTrueImpactParameter", &fGeneral2DMCTrueImpactParameter);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DTrueImpactParamaterRecVsTrue", &fGeneral2DTrueImpactParamaterRecVsTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneral2DBeamSpotImpactParamaterRecVsTrue", &fGeneral2DBeamSpotImpactParamaterRecVsTrue);
      R__insp.Inspect(R__cl, R__parent, "*fGeneralGMuonPVsZTTP", &fGeneralGMuonPVsZTTP);
      R__insp.Inspect(R__cl, R__parent, "*fControlProb_uncut", &fControlProb_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlEta_uncut", &fControlEta_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlP_uncut", &fControlP_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlPt_uncut", &fControlPt_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlChFlg_uncut", &fControlChFlg_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonFinder_uncut", &fControlMuonFinder_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfpro_uncut", &fControlMuonMfpro_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfndf_uncut", &fControlMuonMfndf_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfz_uncut", &fControlMuonMfz_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlQuality_uncut", &fControlQuality_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlQualityForwardBAC_uncut", &fControlQualityForwardBAC_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlWeight_uncut", &fControlWeight_uncut);
      R__insp.Inspect(R__cl, R__parent, "*fControlProbForward", &fControlProbForward);
      R__insp.Inspect(R__cl, R__parent, "*fControlProbBarrel", &fControlProbBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fControlProbRear", &fControlProbRear);
      R__insp.Inspect(R__cl, R__parent, "*fControlEtaForward", &fControlEtaForward);
      R__insp.Inspect(R__cl, R__parent, "*fControlEtaBarrel", &fControlEtaBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fControlEtaRear", &fControlEtaRear);
      R__insp.Inspect(R__cl, R__parent, "*fControlPForward", &fControlPForward);
      R__insp.Inspect(R__cl, R__parent, "*fControlPBarrel", &fControlPBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fControlPRear", &fControlPRear);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtForward", &fControlPtForward);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtBarrel", &fControlPtBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fControlPtRear", &fControlPtRear);
      R__insp.Inspect(R__cl, R__parent, "*fControlChFlgForward", &fControlChFlgForward);
      R__insp.Inspect(R__cl, R__parent, "*fControlChFlgBarrel", &fControlChFlgBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fControlChFlgRear", &fControlChFlgRear);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonFinderForward", &fControlMuonFinderForward);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonFinderBarrel", &fControlMuonFinderBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonFinderRear", &fControlMuonFinderRear);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfproForward", &fControlMuonMfproForward);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfproBarrel", &fControlMuonMfproBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfproRear", &fControlMuonMfproRear);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfndfForward", &fControlMuonMfndfForward);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfndfBarrel", &fControlMuonMfndfBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfndfRear", &fControlMuonMfndfRear);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfzForward", &fControlMuonMfzForward);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfzBarrel", &fControlMuonMfzBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fControlMuonMfzRear", &fControlMuonMfzRear);
      R__insp.Inspect(R__cl, R__parent, "*fControlQualityForward", &fControlQualityForward);
      R__insp.Inspect(R__cl, R__parent, "*fControlQualityForwardBAC", &fControlQualityForwardBAC);
      R__insp.Inspect(R__cl, R__parent, "*fControlQualityBarrel", &fControlQualityBarrel);
      R__insp.Inspect(R__cl, R__parent, "*fControlQualityRear", &fControlQualityRear);
      R__insp.Inspect(R__cl, R__parent, "*fControlWeight", &fControlWeight);
      R__insp.Inspect(R__cl, R__parent, "*fControlChamberFlag", &fControlChamberFlag);
      R__insp.Inspect(R__cl, R__parent, "*fPt_fakebin", &fPt_fakebin);
      R__insp.Inspect(R__cl, R__parent, "*fEta_lowPt_fakebin", &fEta_lowPt_fakebin);
      R__insp.Inspect(R__cl, R__parent, "*fEta_highPt_fakebin", &fEta_highPt_fakebin);
      R__insp.Inspect(R__cl, R__parent, "*fPhi_lowPt_fakebin", &fPhi_lowPt_fakebin);
      R__insp.Inspect(R__cl, R__parent, "*fPhi_highPt_fakebin", &fPhi_highPt_fakebin);
      R__insp.Inspect(R__cl, R__parent, "*fFakePxvsPxMCTRUE", &fFakePxvsPxMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fFakePyvsPyMCTRUE", &fFakePyvsPyMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fFakePzvsPzMCTRUE", &fFakePzvsPzMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fFakePtvsPtMCTRUE", &fFakePtvsPtMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fFakeEtavsEtaMCTRUE", &fFakeEtavsEtaMCTRUE);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonAllPt", &fFakeMuonAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonAllEta_lowPt", &fFakeMuonAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonAllPhi_lowPt", &fFakeMuonAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonAllEta_highPt", &fFakeMuonAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonAllPhi_highPt", &fFakeMuonAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonPionPt", &fFakeMuonPionPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonPionEta_lowPt", &fFakeMuonPionEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonPionPhi_lowPt", &fFakeMuonPionPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonPionEta_highPt", &fFakeMuonPionEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonPionPhi_highPt", &fFakeMuonPionPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonKaonPt", &fFakeMuonKaonPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonKaonEta_lowPt", &fFakeMuonKaonEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonKaonPhi_lowPt", &fFakeMuonKaonPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonKaonEta_highPt", &fFakeMuonKaonEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeMuonKaonPhi_highPt", &fFakeMuonKaonPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonPt", &fFakeDecayMuonPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonEta_lowPt", &fFakeDecayMuonEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonPhi_lowPt", &fFakeDecayMuonPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonEta_highPt", &fFakeDecayMuonEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonPhi_highPt", &fFakeDecayMuonPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonPionPt", &fFakeDecayMuonPionPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonPionEta_lowPt", &fFakeDecayMuonPionEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonPionPhi_lowPt", &fFakeDecayMuonPionPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonPionEta_highPt", &fFakeDecayMuonPionEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonPionPhi_highPt", &fFakeDecayMuonPionPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonKaonPt", &fFakeDecayMuonKaonPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonKaonEta_lowPt", &fFakeDecayMuonKaonEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonKaonPhi_lowPt", &fFakeDecayMuonKaonPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonKaonEta_highPt", &fFakeDecayMuonKaonEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeDecayMuonKaonPhi_highPt", &fFakeDecayMuonKaonPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonPt", &fFakePunchMuonPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonEta_lowPt", &fFakePunchMuonEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonPhi_lowPt", &fFakePunchMuonPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonEta_highPt", &fFakePunchMuonEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonPhi_highPt", &fFakePunchMuonPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonPionPt", &fFakePunchMuonPionPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonPionEta_lowPt", &fFakePunchMuonPionEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonPionPhi_lowPt", &fFakePunchMuonPionPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonPionEta_highPt", &fFakePunchMuonPionEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonPionPhi_highPt", &fFakePunchMuonPionPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonKaonPt", &fFakePunchMuonKaonPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonKaonEta_lowPt", &fFakePunchMuonKaonEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonKaonPhi_lowPt", &fFakePunchMuonKaonPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonKaonEta_highPt", &fFakePunchMuonKaonEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePunchMuonKaonPhi_highPt", &fFakePunchMuonKaonPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonProbabilityAllPt", &fMuonProbabilityAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonProbabilityAllEta_lowPt", &fMuonProbabilityAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonProbabilityAllPhi_lowPt", &fMuonProbabilityAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonProbabilityAllEta_highPt", &fMuonProbabilityAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonProbabilityAllPhi_highPt", &fMuonProbabilityAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePionProbabilityAllPt", &fFakePionProbabilityAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePionProbabilityAllEta_lowPt", &fFakePionProbabilityAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePionProbabilityAllPhi_lowPt", &fFakePionProbabilityAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePionProbabilityAllEta_highPt", &fFakePionProbabilityAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakePionProbabilityAllPhi_highPt", &fFakePionProbabilityAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeKaonProbabilityAllPt", &fFakeKaonProbabilityAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeKaonProbabilityAllEta_lowPt", &fFakeKaonProbabilityAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeKaonProbabilityAllPhi_lowPt", &fFakeKaonProbabilityAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeKaonProbabilityAllEta_highPt", &fFakeKaonProbabilityAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeKaonProbabilityAllPhi_highPt", &fFakeKaonProbabilityAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayProbabilityAllPt", &fMuonDecayProbabilityAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayProbabilityAllEta_lowPt", &fMuonDecayProbabilityAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayProbabilityAllPhi_lowPt", &fMuonDecayProbabilityAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayProbabilityAllEta_highPt", &fMuonDecayProbabilityAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayProbabilityAllPhi_highPt", &fMuonDecayProbabilityAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayPionProbabilityAllPt", &fMuonDecayPionProbabilityAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayPionProbabilityAllEta_lowPt", &fMuonDecayPionProbabilityAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayPionProbabilityAllPhi_lowPt", &fMuonDecayPionProbabilityAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayPionProbabilityAllEta_highPt", &fMuonDecayPionProbabilityAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayPionProbabilityAllPhi_highPt", &fMuonDecayPionProbabilityAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayKaonProbabilityAllPt", &fMuonDecayKaonProbabilityAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayKaonProbabilityAllEta_lowPt", &fMuonDecayKaonProbabilityAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayKaonProbabilityAllPhi_lowPt", &fMuonDecayKaonProbabilityAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayKaonProbabilityAllEta_highPt", &fMuonDecayKaonProbabilityAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonDecayKaonProbabilityAllPhi_highPt", &fMuonDecayKaonProbabilityAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchProbabilityAllPt", &fMuonPunchProbabilityAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchProbabilityAllEta_lowPt", &fMuonPunchProbabilityAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchProbabilityAllPhi_lowPt", &fMuonPunchProbabilityAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchProbabilityAllEta_highPt", &fMuonPunchProbabilityAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchProbabilityAllPhi_highPt", &fMuonPunchProbabilityAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchPionProbabilityAllPt", &fMuonPunchPionProbabilityAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchPionProbabilityAllEta_lowPt", &fMuonPunchPionProbabilityAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchPionProbabilityAllPhi_lowPt", &fMuonPunchPionProbabilityAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchPionProbabilityAllEta_highPt", &fMuonPunchPionProbabilityAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchPionProbabilityAllPhi_highPt", &fMuonPunchPionProbabilityAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchKaonProbabilityAllPt", &fMuonPunchKaonProbabilityAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchKaonProbabilityAllEta_lowPt", &fMuonPunchKaonProbabilityAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchKaonProbabilityAllPhi_lowPt", &fMuonPunchKaonProbabilityAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchKaonProbabilityAllEta_highPt", &fMuonPunchKaonProbabilityAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fMuonPunchKaonProbabilityAllPhi_highPt", &fMuonPunchKaonProbabilityAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fPrec_PtruevsDecdistPion_rear", &fPrec_PtruevsDecdistPion_rear);
      R__insp.Inspect(R__cl, R__parent, "*fPrec_PtruevsDecdistPion_central", &fPrec_PtruevsDecdistPion_central);
      R__insp.Inspect(R__cl, R__parent, "*fPrec_PtruevsDecdistPion_forward", &fPrec_PtruevsDecdistPion_forward);
      R__insp.Inspect(R__cl, R__parent, "*fPrec_PtruevsDecdistKaon_rear", &fPrec_PtruevsDecdistKaon_rear);
      R__insp.Inspect(R__cl, R__parent, "*fPrec_PtruevsDecdistKaon_central", &fPrec_PtruevsDecdistKaon_central);
      R__insp.Inspect(R__cl, R__parent, "*fPrec_PtruevsDecdistKaon_forward", &fPrec_PtruevsDecdistKaon_forward);
      R__insp.Inspect(R__cl, R__parent, "*fPrec_PtruevsDecdistMuon_rear", &fPrec_PtruevsDecdistMuon_rear);
      R__insp.Inspect(R__cl, R__parent, "*fPrec_PtruevsDecdistMuon_central", &fPrec_PtruevsDecdistMuon_central);
      R__insp.Inspect(R__cl, R__parent, "*fPrec_PtruevsDecdistMuon_forward", &fPrec_PtruevsDecdistMuon_forward);
      R__insp.Inspect(R__cl, R__parent, "*fFake2DMuonAll_PtEta", &fFake2DMuonAll_PtEta);
      R__insp.Inspect(R__cl, R__parent, "*fFake2DMuonDecay_PtEta", &fFake2DMuonDecay_PtEta);
      R__insp.Inspect(R__cl, R__parent, "*fFake2DMuonPunch_PtEta", &fFake2DMuonPunch_PtEta);
      R__insp.Inspect(R__cl, R__parent, "*fProbability2DMuonAll_PtEta", &fProbability2DMuonAll_PtEta);
      R__insp.Inspect(R__cl, R__parent, "*fProbability2DMuonDecay_PtEta", &fProbability2DMuonDecay_PtEta);
      R__insp.Inspect(R__cl, R__parent, "*fProbability2DMuonPunch_PtEta", &fProbability2DMuonPunch_PtEta);
      R__insp.Inspect(R__cl, R__parent, "*fRecTrueMuonMother", &fRecTrueMuonMother);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityAllPt", &fFakeProbabilityAllPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityAllEta_lowPt", &fFakeProbabilityAllEta_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityAllPhi_lowPt", &fFakeProbabilityAllPhi_lowPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityAllEta_highPt", &fFakeProbabilityAllEta_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFakeProbabilityAllPhi_highPt", &fFakeProbabilityAllPhi_highPt);
      R__insp.Inspect(R__cl, R__parent, "*fFake2DMuonAll_PtEta_Bremat", &fFake2DMuonAll_PtEta_Bremat);
      R__insp.Inspect(R__cl, R__parent, "*fFake2DMuonAll_PtEta_MPMatch", &fFake2DMuonAll_PtEta_MPMatch);
      R__insp.Inspect(R__cl, R__parent, "*fFake2DMuonAll_PtEta_Bac", &fFake2DMuonAll_PtEta_Bac);
      R__insp.Inspect(R__cl, R__parent, "*fFake2DProbMuonAll_PtEta_Bremat", &fFake2DProbMuonAll_PtEta_Bremat);
      R__insp.Inspect(R__cl, R__parent, "*fFake2DProbMuonAll_PtEta_MPMatch", &fFake2DProbMuonAll_PtEta_MPMatch);
      R__insp.Inspect(R__cl, R__parent, "*fFake2DProbMuonAll_PtEta_Bac", &fFake2DProbMuonAll_PtEta_Bac);
      GPhysObj::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GMuons(void *p) {
      return  p ? new(p) ::GMuons : new ::GMuons;
   }
   static void *newArray_GMuons(Long_t nElements, void *p) {
      return p ? new(p) ::GMuons[nElements] : new ::GMuons[nElements];
   }
   // Wrapper around operator delete
   static void delete_GMuons(void *p) {
      delete ((::GMuons*)p);
   }
   static void deleteArray_GMuons(void *p) {
      delete [] ((::GMuons*)p);
   }
   static void destruct_GMuons(void *p) {
      typedef ::GMuons current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GMuons

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GMuonsDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGMuonsDict();

extern "C" void G__set_cpp_environmentGMuonsDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GMuons.h");
  G__cpp_reset_tagtableGMuonsDict();
}
#include <new>
extern "C" int G__cpp_dllrevGMuonsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GMuons */
static int G__GMuonsDict_177_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GMuons* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GMuons[n];
     } else {
       p = new((void*) gvp) GMuons[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GMuons;
     } else {
       p = new((void*) gvp) GMuons;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GMuonsDictLN_GMuons));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->Fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CreateFake());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->ObjectsFillHistos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->ObjectsFillGeneral((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->ObjectsFillControl((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->ObjectsFillFake((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->FillMuonFinderHisto((GMuon*) G__int(libp->para[0]), (TH1D*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->FillMuonFinderHisto((GMuon*) G__int(libp->para[0]), (TH1D*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CountMuons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckGlomu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckForwardTrackMuon((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->ModifyMuonQuality((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckFinderCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckQualityCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckForwardTrackMuonCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckBACFQualityCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckEtaCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckTakeCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckEfficiencyCorrection((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckPCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckPtCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckVcidLowCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckVcidUpCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckBrematCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckMPMatchCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckMUBACCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckOnlyVertexFittedCut((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckAllCuts((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CalcBeamSpotImpactParameter((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CalcMuonIsolation((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CalcMuonImpactParameter((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CalcMuonJetMass((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->FillMuonNdofandZ((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->CheckMVCuts((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->FakeAlreadyStored((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->FillSpecialFinderHisto((TH1D*) G__int(libp->para[0]), (GMuon*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMuons*) G__getstructoffset())->GetSpecialFinderBin((GMuon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->ProduceMirroredPlot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetMuon((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMuons*) G__getstructoffset())->GetNMuons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMuons*) G__getstructoffset())->GetMuonsCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMuons*) G__getstructoffset())->GetBarrelMuons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMuons*) G__getstructoffset())->GetRearMuons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMuons*) G__getstructoffset())->GetForwardMuons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GMuons*) G__getstructoffset())->GetGlomus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMuons*) G__getstructoffset())->GetMuonImp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMuons*) G__getstructoffset())->GetMuonImperr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMuons*) G__getstructoffset())->GetMuonDCA_x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMuons*) G__getstructoffset())->GetMuonDCA_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMuons*) G__getstructoffset())->GetMuonDCA_z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMuons*) G__getstructoffset())->GetMuonImpSig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMuons*) G__getstructoffset())->GetMuonJetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMuons*) G__getstructoffset())->GetMuonJetEt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GMuons*) G__getstructoffset())->GetMuonMuz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GMuons*) G__getstructoffset())->GetMuonMundof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonAllPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonAllEta_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonAllPhi_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonAllEta_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonAllPhi_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonPionPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonPionEta_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonPionPhi_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonPionEta_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonPionPhi_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonKaonPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonKaonEta_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonKaonPhi_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonKaonEta_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeMuonKaonPhi_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeDecayMuonPionPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeDecayMuonPionEta_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeDecayMuonPionPhi_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeDecayMuonPionEta_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeDecayMuonPionPhi_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeDecayMuonKaonPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeDecayMuonKaonEta_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeDecayMuonKaonPhi_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeDecayMuonKaonEta_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakeDecayMuonKaonPhi_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakePunchMuonPionPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakePunchMuonPionEta_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakePunchMuonPionPhi_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakePunchMuonPionEta_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakePunchMuonPionPhi_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakePunchMuonKaonPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakePunchMuonKaonEta_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakePunchMuonKaonPhi_lowPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakePunchMuonKaonEta_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GMuons*) G__getstructoffset())->GetFakePunchMuonKaonPhi_highPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GMuons::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMuons::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GMuons::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GMuons::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GMuons*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMuons::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GMuons::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GMuons::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GMuonsDict_177_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GMuons::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GMuonsDict_177_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GMuons* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GMuons(*(GMuons*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GMuonsDictLN_GMuons));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GMuons G__TGMuons;
static int G__GMuonsDict_177_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GMuons*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GMuons*) (soff+(sizeof(GMuons)*i)))->~G__TGMuons();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GMuons*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GMuons*) (soff))->~G__TGMuons();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GMuonsDict_177_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GMuons* dest = (GMuons*) G__getstructoffset();
   *dest = *(GMuons*) libp->para[0].ref;
   const GMuons& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GMuons */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGMuonsDict {
 public:
  G__Sizep2memfuncGMuonsDict(): p(&G__Sizep2memfuncGMuonsDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGMuonsDict::*p)();
};

size_t G__get_sizep2memfuncGMuonsDict()
{
  G__Sizep2memfuncGMuonsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGMuonsDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GMuonsDictLN_GMuons))) {
     GMuons *G__Lderived;
     G__Lderived=(GMuons*)0x1000;
     {
       GPhysObj *G__Lpbase=(GPhysObj*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GMuonsDictLN_GMuons),G__get_linked_tagnum(&G__GMuonsDictLN_GPhysObj),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GMuonsDictLN_GMuons),G__get_linked_tagnum(&G__GMuonsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGMuonsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GMuonsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GMuonsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GMuonsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GMuonsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GMuonsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GMuonsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GMuons */
static void G__setup_memvarGMuons(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GMuonsDictLN_GMuons));
   { GMuons *p; p=(GMuons*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_GMuonEfficiency),-1,-1,4,"fMuonEfficiency=",0,"muon efficiency object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TRandom),-1,-1,4,"randgen=",0,"random number generator object");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBarrelMuons=",0,"counter for barrel muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRearMuons=",0,"counter for rear muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fForwardMuons=",0,"counter for forward muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMuons=",0,"number of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TClonesArray),-1,-1,4,"fMuons=",0,"array of muons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMuonsCut=",0,"counter for available muons which passed muon identification");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMuonsMinIsolation10Veto=",0,"flag for minimum isolation for cone 1.0, if one good muon of event has a smaller isolation, veto event");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fGlomus=",0,"set if at least 1 muon with glomuid  ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMuonImp=",0,"Muon 2D impact parameter using Tracking Block");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMuonImperr=",0,"Muon 2D impact parameter error using Tracking Block");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMuonDCA_x=",0,"Muon Distance of closest approach in x using Tracking Block");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMuonDCA_y=",0,"Muon Distance of closest approach in y using Tracking Block");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMuonDCA_z=",0,"Muon Distance of closest approach in z using Tracking Block");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMuonImpSig=",0,"Muon 2D impact parameter significance using Tracking Block");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMuonJetMass=",0,"Mass of Jet containing Muon");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMuonJetEt=",0,"Et of Muon Jet");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMuonMuz=",0,"Muon Z");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMuonMundof=",0,"Muon Ndf");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralNMU_uncut=",0,"uncut number of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralNMUForward_uncut=",0,"uncut number of forward muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralNMUBarrel_uncut=",0,"uncut number of barrel muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralNMURear_uncut=",0,"uncut number of rear muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralRegions_uncut=",0,"uncut muon regions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeight_uncut=",0,"uncut weight of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightForward_uncut=",0,"uncut weight of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBarrel_uncut=",0,"uncut weight of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightRear_uncut=",0,"uncut weight of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMUBAC_uncut=",0,"uncut weight of muons for by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMUBACForward_uncut=",0,"uncut weight of muons for by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMUBACBarrel_uncut=",0,"uncut weight of muons for by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMUBACRear_uncut=",0,"uncut weight of muons for by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMAT_uncut=",0,"uncut weight of muons for by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATForward_uncut=",0,"uncut weight of muons for by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATBarrel_uncut=",0,"uncut weight of muons for by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATRear_uncut=",0,"uncut weight of muons for by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCH_uncut=",0,"uncut weight of muons for by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHForward_uncut=",0,"uncut weight of muons for by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHBarrel_uncut=",0,"uncut weight of muons for by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHRear_uncut=",0,"uncut weight of muons for by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATMUBAC_uncut=",0,"uncut weight of muons for by BREMAT and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATMUBACForward_uncut=",0,"uncut weight of muons for by BREMAT and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATMUBACBarrel_uncut=",0,"uncut weight of muons for by BREMAT and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATMUBACRear_uncut=",0,"uncut weight of muons for by BREMAT and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHMUBAC_uncut=",0,"uncut weight of muons for by MPMATCH and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHMUBACForward_uncut=",0,"uncut weight of muons for by MPMATCH and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHMUBACBarrel_uncut=",0,"uncut weight of muons for by MPMATCH and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHMUBACRear_uncut=",0,"uncut weight of muons for by MPMATCH and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralProb_uncut=",0,"uncut muon probability distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralProbForward_uncut=",0,"uncut forward muon probability distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralProbBarrel_uncut=",0,"uncut barrel muon probability distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralProbRear_uncut=",0,"uncut rear muon probability distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralP_uncut=",0,"uncut muon momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPForward_uncut=",0,"uncut forward muon momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPBarrel_uncut=",0,"uncut barrel muon momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPRear_uncut=",0,"uncut rear muon momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPt_uncut=",0,"uncut muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtForward_uncut=",0,"uncut forward muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtBarrel_uncut=",0,"uncut barrel muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtRear_uncut=",0,"uncut rear muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtSpecial_uncut=",0,"uncut muon transverse momentum with special binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtSpecialForward_uncut=",0,"uncut forward muon transverse momentum with special binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtSpecialBarrel_uncut=",0,"uncut barrel muon transverse momentum with special binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtSpecialRear_uncut=",0,"uncut rear muon transverse momentum with special binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPx_uncut=",0,"uncut muon x momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPxForward_uncut=",0,"uncut forward muon x momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPxBarrel_uncut=",0,"uncut barrel muon x momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPxRear_uncut=",0,"uncut rear muon x momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPy_uncut=",0,"uncut muon y momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPyForward_uncut=",0,"uncut forward muon y momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPyBarrel_uncut=",0,"uncut barrel muon y momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPyRear_uncut=",0,"uncut rear muon y momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPz_uncut=",0,"uncut muon z momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPzForward_uncut=",0,"uncut forward muon z momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPzBarrel_uncut=",0,"uncut barrel muon z momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPzRear_uncut=",0,"uncut rear muon z momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhi_uncut=",0,"uncut muon phi distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiForward_uncut=",0,"uncut forward muon phi distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBarrel_uncut=",0,"uncut barrel muon phi distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiRear_uncut=",0,"uncut rear muon phi distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMUBAC_uncut=",0,"uncut phi distribution of muon found by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMUBACForward_uncut=",0,"uncut phi distribution of forward muon found by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMUBACBarrel_uncut=",0,"uncut phi distribution of barrel muon found by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMUBACRear_uncut=",0,"uncut phi distribution of rear muon found by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMAT_uncut=",0,"uncut phi distribution of muon found by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATForward_uncut=",0,"uncut phi distribution of forward muon found by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATBarrel_uncut=",0,"uncut phi distribution of barrel muon found by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATRear_uncut=",0,"uncut phi distribution of rear muon found by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCH_uncut=",0,"uncut phi distribution of muon found by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHForward_uncut=",0,"uncut phi distribution of forward muon found by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHBarrel_uncut=",0,"uncut phi distribution of barrel muon found by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHRear_uncut=",0,"uncut phi distribution of rear muon found by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATMUBAC_uncut=",0,"uncut phi distribution of muon found by BREMAT and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATMUBACForward_uncut=",0,"uncut phi distribution of forward muon found by BREMAT and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATMUBACBarrel_uncut=",0,"uncut phi distribution of barrel muon found by BREMAT and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATMUBACRear_uncut=",0,"uncut phi distribution of rear muon found by BREMAT and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHMUBAC_uncut=",0,"uncut phi distribution of muon found by MPMATCH and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHMUBACForward_uncut=",0,"uncut phi distribution of forward muon found by MPMATCH and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHMUBACBarrel_uncut=",0,"uncut phi distribution of barrel muon found by MPMATCH and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHMUBACRear_uncut=",0,"uncut phi distribution of rear muon found by MPMATCH and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralTheta_uncut=",0,"uncut muon theta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralThetaForward_uncut=",0,"uncut forward muon theta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralThetaBarrel_uncut=",0,"uncut barrel muon theta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralThetaRear_uncut=",0,"uncut rear muon theta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEta_uncut=",0,"uncut muon eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEtaForward_uncut=",0,"uncut forward muon eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEtaBarrel_uncut=",0,"uncut barrel muon eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEtaRear_uncut=",0,"uncut rear muon eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCharge_uncut=",0,"uncut muon charge distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChargeForward_uncut=",0,"uncut forward muon charge distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChargeBarrel_uncut=",0,"uncut barrel muon charge distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChargeRear_uncut=",0,"uncut rear muon charge distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralMuonFinder_uncut=",0,"uncut muon found by which muon finder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralMuonFinder4_uncut=",0,"uncut muon found by which muon finder for muon quality 4");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralMuonFinder5_uncut=",0,"uncut muon found by which muon finder for muon quality 5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralMuonFinder6_uncut=",0,"uncut muon found by which muon finder for muon quality 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder_uncut=",0,"uncut muon found by which muon finder with special categories");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinderForward_uncut=",0,"uncut forward muon found by which muon finder with special categories");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinderBarrel_uncut=",0,"uncut barrel muon found by which muon finder with special categories");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinderRear_uncut=",0,"uncut rear muon found by which muon finder with special categories");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPMCTRUE_uncut=",0,"uncut true muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPXMCTRUE_uncut=",0,"uncut true x muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPYMCTRUE_uncut=",0,"uncut true y muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPZMCTRUE_uncut=",0,"uncut true z muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralQuality_uncut=",0,"uncut muon quality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralQualityAndTrue_uncut=",0,"uncut muon quality for muons reconstructed and true");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralQualityForward_uncut=",0,"uncut forward muon quality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralQualityBarrel_uncut=",0,"uncut barrel muon quality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralQualityRear_uncut=",0,"uncut rear muon quality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPvsPMCTRUE_uncut=",0,"uncut muon momentum vs. uncut true muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPXvsPXMCTRUE_uncut=",0,"uncut x muon momentum vs. uncut true x muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPYvsPYMCTRUE_uncut=",0,"uncut y muon momentum vs. uncut true y muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPZvsPZMCTRUE_uncut=",0,"uncut z muon momentum vs. uncut true z muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPMCTRUEpos_uncut=",0,"uncut true muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPXMCTRUEpos_uncut=",0,"uncut true x muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPYMCTRUEpos_uncut=",0,"uncut true y muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPZMCTRUEpos_uncut=",0,"uncut true z muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPvsPMCTRUEpos_uncut=",0,"uncut muon momentum vs. uncut true muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPXvsPXMCTRUEpos_uncut=",0,"uncut x muon momentum vs. uncut true x muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPYvsPYMCTRUEpos_uncut=",0,"uncut y muon momentum vs. uncut true y muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPZvsPZMCTRUEpos_uncut=",0,"uncut z muon momentum vs. uncut true z muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPMCTRUEneg_uncut=",0,"uncut true muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPXMCTRUEneg_uncut=",0,"uncut true x muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPYMCTRUEneg_uncut=",0,"uncut true y muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPZMCTRUEneg_uncut=",0,"uncut true z muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPvsPMCTRUEneg_uncut=",0,"uncut muon momentum vs. uncut true muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPXvsPXMCTRUEneg_uncut=",0,"uncut x muon momentum vs. uncut true x muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPYvsPYMCTRUEneg_uncut=",0,"uncut y muon momentum vs. uncut true y muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPZvsPZMCTRUEneg_uncut=",0,"uncut z muon momentum vs. uncut true z muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneral2DBeamSpotImpactParameter_uncut=",0,"uncut 2D impact parameter to beamspot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneral2DBeamSpotImpactSignificance_uncut=",0,"uncut 2D impact parameter to beamspot significance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneral2DMCBeamSpotImpactParameter_uncut=",0,"uncut true 2D impact parameter to nominal MC beamspot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneral2DTrueImpactParameter_uncut=",0,"uncut 2D impact parameter to nominal MC true vertex");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneral2DMCTrueImpactParameter_uncut=",0,"uncut 2D MC true impact parameter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneral2DTrueImpactParamaterRecVsTrue_uncut=",0,"uncut 2D impact parameter to MC true vertex vs uncut true 2D impact parameter to MC true vertex");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneral2DBeamSpotImpactParamaterRecVsTrue_uncut=",0,"uncut 2D impact parameter to beamspot vs uncut true 2D impact parameter to nominal MC beamspot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralGMuonPVsZTTP_uncut=",0,"uncut momentum from gmuon vs. momentum from ztt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralNMU=",0,"number of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralNMUForward=",0,"number of forward muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralNMUBarrel=",0,"number of barrel muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralNMURear=",0,"number of rear muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralRegions=",0,"muon region");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeight=",0,"weight of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightForward=",0,"weight of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBarrel=",0,"weight of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightRear=",0,"weight of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMUBAC=",0,"weight of muons for by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMUBACForward=",0,"weight of muons for by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMUBACBarrel=",0,"weight of muons for by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMUBACRear=",0,"weight of muons for by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMAT=",0,"weight of muons for by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATForward=",0,"weight of muons for by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATBarrel=",0,"weight of muons for by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATRear=",0,"weight of muons for by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCH=",0,"weight of muons for by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHForward=",0,"weight of muons for by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHBarrel=",0,"weight of muons for by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHRear=",0,"weight of muons for by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATMUBAC=",0,"weight of muons for by BREMAT and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATMUBACForward=",0,"weight of muons for by BREMAT and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATMUBACBarrel=",0,"weight of muons for by BREMAT and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightBREMATMUBACRear=",0,"weight of muons for by BREMAT and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHMUBAC=",0,"weight of muons for by MPMATCH and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHMUBACForward=",0,"weight of muons for by MPMATCH and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHMUBACBarrel=",0,"weight of muons for by MPMATCH and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralWeightMPMATCHMUBACRear=",0,"weight of muons for by MPMATCH and by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralProb=",0,"probability distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralProbForward=",0,"probability distribution for forward muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralProbBarrel=",0,"probability distribution for barrel muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralProbRear=",0,"probability distribution for rear muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralP=",0,"muon momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPForward=",0,"forward muon momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPBarrel=",0,"barrel muon momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPRear=",0,"rear muon momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPt=",0,"muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtChosen=",0,"muon transverse momentum of muon from the chosen match");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtChosenFine2=",0,"muon transverse momentum of muon from the chosen match in finer binning of 0.5 GeV");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtChosenFine4=",0,"muon transverse momentum of muon from the chosen match in finer binning of 0.25 GeV");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtChosenFine8=",0,"muon transverse momentum of muon from the chosen match in finer binning of 0.125 GeV");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtChosenFine16=",0,"muon transverse momentum of muon from the chosen match in finer binning of 0.0625 GeV");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtChosenMC=",0,"muon transverse momentum of muon from the chosen match which is a true MC muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtChosenFineMC=",0,"muon transverse momentum of muon from the chosen match in finer binning which is a true MC muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtForward=",0,"forward muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtBarrel=",0,"barrel muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtRear=",0,"rear muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtSpecial=",0,"muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtSpecialForward=",0,"forward muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtSpecialBarrel=",0,"barrel muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPtSpecialRear=",0,"rear muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPx=",0,"muon x momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPxForward=",0,"forward muon x momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPxBarrel=",0,"barrel muon x momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPxRear=",0,"rear muon x momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPy=",0,"muon y momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPyForward=",0,"forward muon y momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPyBarrel=",0,"barrel muon y momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPyRear=",0,"rear muon y momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPz=",0,"muon z momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPzForward=",0,"forward muon z momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPzBarrel=",0,"barrel muon z momentum ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPzRear=",0,"rear muon z momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhi=",0,"muon phi distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiForward=",0,"forward muon phi distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBarrel=",0,"barrel muon phi distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiRear=",0,"rear muon phi distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMUBAC=",0,"phi distribution of muon found by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMUBACForward=",0,"phi distribution of forward muon found by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMUBACBarrel=",0,"phi distribution of barrel muon found by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMUBACRear=",0,"phi distribution of rear muon found by MUBAC and not by BREMAT or MPMATCH");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMAT=",0,"phi distribution of muon found by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATForward=",0,"phi distribution of forward muon found by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATBarrel=",0,"phi distribution of barrel muon found by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATRear=",0,"phi distribution of rear muon found by BREMAT and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCH=",0,"phi distribution of muon found by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHForward=",0,"phi distribution of forward muon found by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHBarrel=",0,"phi distribution of barrel muon found by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHRear=",0,"phi distribution of rear muon found by MPMATCH and not by MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATMUBAC=",0,"phi distribution of muon found by BREMAT and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATMUBACForward=",0,"phi distribution of forward muon found by BREMAT and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATMUBACBarrel=",0,"phi distribution of barrel muon found by BREMAT and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiBREMATMUBACRear=",0,"phi distribution of rear muon found by BREMAT and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHMUBAC=",0,"phi distribution of muon found by MPMATCH and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHMUBACForward=",0,"phi distribution of forward muon found by MPMATCH and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHMUBACBarrel=",0,"phi distribution of barrel muon found by MPMATCH and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPhiMPMATCHMUBACRear=",0,"phi distribution of rear muon found by MPMATCH and MUBAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralTheta=",0,"muon theta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralThetaForward=",0,"forward muon theta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralThetaBarrel=",0,"barrel muon theta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralThetaRear=",0,"rear muon theta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEta=",0,"muon eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEtaChosen=",0,"muon eta distribution of muon from the chosen match");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEtaChosenLarge=",0,"muon eta distribution of muon from the chosen match in large eta range");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEtaChosenMC=",0,"muon eta distribution of muon from the chosen match which is a true MC muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEtaChosenLargeMC=",0,"muon eta distribution of muon from the chosen match in large eta range which is a true MC muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEtaForward=",0,"forward muon eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEtaBarrel=",0,"barrel muon eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralEtaRear=",0,"rear muon eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCharge=",0,"muon charge distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChargeForward=",0,"forward muon charge distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChargeBarrel=",0,"barrel muon charge distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChargeRear=",0,"rear muon charge distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralMuonFinder=",0,"muon found by which muon finder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralMuonFinder4=",0,"muon found by which muon finder for muon quality 4");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralMuonFinder5=",0,"muon found by which muon finder for muon quality 5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralMuonFinder6=",0,"muon found by which muon finder for muon quality 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder=",0,"muon found by which muon finder with special categories");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder4=",0,"muon found in special categories by which muon finder for muon quality 4");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder5=",0,"muon found in special categories by which muon finder for muon quality 5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder6=",0,"muon found in special categories by which muon finder for muon quality 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder4Forward=",0,"muon found in special categories by which muon finder for muon quality 4");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder5Forward=",0,"muon found in special categories by which muon finder for muon quality 5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder6Forward=",0,"muon found in special categories by which muon finder for muon quality 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder4Barrel=",0,"muon found in special categories by which muon finder for muon quality 4");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder5Barrel=",0,"muon found in special categories by which muon finder for muon quality 5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder6Barrel=",0,"muon found in special categories by which muon finder for muon quality 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder4Rear=",0,"muon found in special categories by which muon finder for muon quality 4");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder5Rear=",0,"muon found in special categories by which muon finder for muon quality 5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinder6Rear=",0,"muon found in special categories by which muon finder for muon quality 6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinderForward=",0,"forward muon found by which muon finder with special categories");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinderBarrel=",0,"barrel muon found by which muon finder with special categories");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralSpecialFinderRear=",0,"rear muon found by which muon finder with special categories");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPMCTRUE=",0,"true muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPXMCTRUE=",0,"true x muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPYMCTRUE=",0,"true y muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPZMCTRUE=",0,"true z muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPvsPMCTRUE=",0,"muon momentum vs. true muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPXvsPXMCTRUE=",0,"x muon momentum vs. true x muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPYvsPYMCTRUE=",0,"y muon momentum vs. true y muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPZvsPZMCTRUE=",0,"z muon momentum vs. true z muon momentum from MC info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPMCTRUEpos=",0,"true muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPXMCTRUEpos=",0,"true x muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPYMCTRUEpos=",0,"true y muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPZMCTRUEpos=",0,"true z muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralQuality=",0,"muon quality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralQualityAndTrue=",0,"muon quality reconstructed and true");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralQualityForward=",0,"forward muon quality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralQualityBarrel=",0,"barrel muon quality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralQualityRear=",0,"rear muon quality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPvsPMCTRUEpos=",0,"muon momentum vs. true muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPXvsPXMCTRUEpos=",0,"x muon momentum vs. true x muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPYvsPYMCTRUEpos=",0,"y muon momentum vs. true y muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPZvsPZMCTRUEpos=",0,"z muon momentum vs. true z muon momentum from MC info for positive FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPMCTRUEneg=",0,"true muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPXMCTRUEneg=",0,"true x muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPYMCTRUEneg=",0,"true y muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralPZMCTRUEneg=",0,"true z muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChosenIso01=",0,"isolation of chosen muons in cone 0.1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChosenIso02=",0,"isolation of chosen muons in cone 0.2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChosenIso03=",0,"isolation of chosen muons in cone 0.3");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChosenIso04=",0,"isolation of chosen muons in cone 0.4");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChosenIso05=",0,"isolation of chosen muons in cone 0.5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChosenIso06=",0,"isolation of chosen muons in cone 0.6");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChosenIso07=",0,"isolation of chosen muons in cone 0.7");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChosenIso08=",0,"isolation of chosen muons in cone 0.8");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChosenIso09=",0,"isolation of chosen muons in cone 0.9");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralChosenIso10=",0,"isolation of chosen muons in cone 1.0");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPvsPMCTRUEneg=",0,"muon momentum vs. true muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPXvsPXMCTRUEneg=",0,"x muon momentum vs. true x muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPYvsPYMCTRUEneg=",0,"y muon momentum vs. true y muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralPZvsPZMCTRUEneg=",0,"z muon momentum vs. true z muon momentum from MC info for negative FMCKIN IDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotal=",0,"total cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotalRecNTrue=",0,"total rec and true cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotalMuChamber=",0,"total cross section using muon chambers info only");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotalMuChamberRecNTrue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotalBAC=",0,"total cross section using bac info only");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossTotalBACRecNTrue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossRegions=",0,"muon region for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossRegionsRecNTrue=",0,"muon regions rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossFinder=",0,"special  muon finder for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossFinderRecNTrue=",0,"muon finder rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossPt=",0,"muon pt for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossPtRecNTrue=",0,"muon pt  rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossEta=",0,"muon eta for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossEtaRecNTrue=",0,"muon eta  rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossPtFine=",0,"fine muon pt for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossPtFineRecNTrue=",0,"fine muon pt  rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossEtaFine=",0,"fine muon eta for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossEtaFineRecNTrue=",0,"fine muon eta  rec and true for cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossPtMassimo=",0,"muon pt for cross section in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossPtMassimoRecNTrue=",0,"muon pt rec and true for cross section in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossEtaMassimo=",0,"muon eta for cross section in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneralCrossEtaMassimoRecNTrue=",0,"muon eta  rec and true for cross section in massimo's binning");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneral2DBeamSpotImpactParameter=",0,"2D impact parameter to beamspot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneral2DBeamSpotImpactParameter_Mirrored=",0,"2D impact parameter to beamspot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneral2DBeamSpotImpactSignificance=",0,"2D impact parameter to beamspot significance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneral2DMCBeamSpotImpactParameter=",0,"true 2D impact parameter to nominal MC beamspot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneral2DTrueImpactParameter=",0,"2D impact parameter to MC true vertex");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fGeneral2DMCTrueImpactParameter=",0,"2D MC true impact parameter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneral2DTrueImpactParamaterRecVsTrue=",0,"2D impact parameter to MC true vertex vs true 2D impact parameter to MC true vertex");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneral2DBeamSpotImpactParamaterRecVsTrue=",0,"2D impact parameter to beamspot vs true 2D impact parameter to nominal MC beamspot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fGeneralGMuonPVsZTTP=",0,"momentum from gmuon vs. momentum from ztt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlProb_uncut=",0,"uncut probability distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlEta_uncut=",0,"uncut muon eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlP_uncut=",0,"uncut muon momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlPt_uncut=",0,"uncut muon transverse momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlChFlg_uncut=",0,"uncut Chamber flag for barrel muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonFinder_uncut=",0,"uncut muon found by which muon finder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfpro_uncut=",0,"uncut kalman filter probability for associated mfrtz track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfndf_uncut=",0,"uncut kalman filter degrees of freedom");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfz_uncut=",0,"uncut kalman filter starting from internal plane (<500)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlQuality_uncut=",0,"uncut gmuon quality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlQualityForwardBAC_uncut=",0,"uncut gmuon quality for forward muons found by mubac");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlWeight_uncut=",0,"uncut weight of muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlProbForward=",0,"forward probability distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlProbBarrel=",0,"barrel probability distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlProbRear=",0,"rear probability distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlEtaForward=",0,"forward eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlEtaBarrel=",0,"barrel eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlEtaRear=",0,"rear eta distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlPForward=",0,"forward momentum distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlPBarrel=",0,"barrel momentum distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlPRear=",0,"rear momentum distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlPtForward=",0,"forward transverse momentum distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlPtBarrel=",0,"barrel transverse momentum distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlPtRear=",0,"rear transverse momentum distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlChFlgForward=",0,"Chamber flag for forward muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlChFlgBarrel=",0,"Chamber flag for barrel muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlChFlgRear=",0,"Chamber flag for rear muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonFinderForward=",0,"forward muon found by which muon finder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonFinderBarrel=",0,"barrel muon found by which muon finder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonFinderRear=",0,"rear muon found by which muon finder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfproForward=",0,"kalman filter probability for associated mfrtz track for forward muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfproBarrel=",0,"kalman filter probability for associated mfrtz track for barrel muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfproRear=",0,"kalman filter probability for associated mfrtz track for rear muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfndfForward=",0,"kalman filter degrees of freedom for forward muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfndfBarrel=",0,"kalman filter degrees of freedom for barrel muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfndfRear=",0,"kalman filter degrees of freedom for rear muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfzForward=",0,"kalman filter starting from internal plane (<500) for forward muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfzBarrel=",0,"kalman filter starting from internal plane (<500) for barrel muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlMuonMfzRear=",0,"kalman filter starting from internal plane (<500) for rear muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlQualityForward=",0,"gmuon quality for forward muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlQualityForwardBAC=",0,"gmuon quality for forward muons found by mubac");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlQualityBarrel=",0,"gmuon quality for barrel muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlQualityRear=",0,"gmuon quality for rear muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fControlWeight=",0,"weight of muons passing all cuts");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fControlChamberFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fPt_fakebin=",0,"special binning for fake muon  plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fEta_lowPt_fakebin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fEta_highPt_fakebin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fPhi_lowPt_fakebin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fPhi_highPt_fakebin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFakePxvsPxMCTRUE=",0,"px vs pxtrue for fake muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFakePyvsPyMCTRUE=",0,"py vs pytrue for fake muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFakePzvsPzMCTRUE=",0,"pz vs pztrue for fake muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFakePtvsPtMCTRUE=",0,"pt vs pttrue for fake muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFakeEtavsEtaMCTRUE=",0,"eta vs etatrue for fake muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonAllPt=",0,"pt dependence of particles identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonAllEta_lowPt=",0,"eta dependence of  particles identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonAllPhi_lowPt=",0,"phi dependence of  particles identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonAllEta_highPt=",0,"eta dependence of  particles identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonAllPhi_highPt=",0,"phi dependence of  particles identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonPionPt=",0,"pt dependence of pions identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonPionEta_lowPt=",0,"eta dependence of pions identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonPionPhi_lowPt=",0,"phi dependence of pions identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonPionEta_highPt=",0,"eta dependence of pions identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonPionPhi_highPt=",0,"phi dependence of pions identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonKaonPt=",0,"pt dependence of kaons identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonKaonEta_lowPt=",0,"eta dependence of kaons identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonKaonPhi_lowPt=",0,"phi dependence of kaons identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonKaonEta_highPt=",0,"eta dependence of kaons identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeMuonKaonPhi_highPt=",0,"phi dependence of kaons identified as muons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonPt=",0,"pt dependence of  identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonEta_lowPt=",0,"eta dependence of K/P identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonPhi_lowPt=",0,"phi dependence of  K/P identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonEta_highPt=",0,"eta dependence of  K/P identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonPhi_highPt=",0,"phi dependence of  K/P identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonPionPt=",0,"pt dependence of pions  K/P identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonPionEta_lowPt=",0,"eta dependence   of pions identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonPionPhi_lowPt=",0,"phi dependence   of pions identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonPionEta_highPt=",0,"eta dependence of pions identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonPionPhi_highPt=",0,"phi dependence of pions identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonKaonPt=",0,"pt dependence of kaons identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonKaonEta_lowPt=",0,"eta dependence of kaons identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonKaonPhi_lowPt=",0,"phi dependence of kaons identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonKaonEta_highPt=",0,"eta dependence of kaons identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeDecayMuonKaonPhi_highPt=",0,"phi dependence of kaons identified as muons from decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonPt=",0,"pt dependence of K/P identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonEta_lowPt=",0,"eta dependence of K/P identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonPhi_lowPt=",0,"phi dependence of K/P identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonEta_highPt=",0,"eta dependence of K/P identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonPhi_highPt=",0,"phi dependence of K/P identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonPionPt=",0,"pt dependence of pions identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonPionEta_lowPt=",0,"eta dependence of pionsidentified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonPionPhi_lowPt=",0,"phi dependence of pions identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonPionEta_highPt=",0,"eta dependence of pions identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonPionPhi_highPt=",0,"phi dependence of pions identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonKaonPt=",0,"pt dependence of kaons identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonKaonEta_lowPt=",0,"eta dependence of kaons identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonKaonPhi_lowPt=",0,"phi dependence of kaons identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonKaonEta_highPt=",0,"eta dependence of kaons identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePunchMuonKaonPhi_highPt=",0,"phi dependence of kaons identified as muons from punch through");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonProbabilityAllPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonProbabilityAllEta_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonProbabilityAllPhi_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonProbabilityAllEta_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonProbabilityAllPhi_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePionProbabilityAllPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePionProbabilityAllEta_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePionProbabilityAllPhi_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePionProbabilityAllEta_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakePionProbabilityAllPhi_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeKaonProbabilityAllPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeKaonProbabilityAllEta_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeKaonProbabilityAllPhi_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeKaonProbabilityAllEta_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeKaonProbabilityAllPhi_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayProbabilityAllPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayProbabilityAllEta_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayProbabilityAllPhi_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayProbabilityAllEta_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayProbabilityAllPhi_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayPionProbabilityAllPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayPionProbabilityAllEta_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayPionProbabilityAllPhi_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayPionProbabilityAllEta_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayPionProbabilityAllPhi_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayKaonProbabilityAllPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayKaonProbabilityAllEta_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayKaonProbabilityAllPhi_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayKaonProbabilityAllEta_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonDecayKaonProbabilityAllPhi_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchProbabilityAllPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchProbabilityAllEta_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchProbabilityAllPhi_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchProbabilityAllEta_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchProbabilityAllPhi_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchPionProbabilityAllPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchPionProbabilityAllEta_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchPionProbabilityAllPhi_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchPionProbabilityAllEta_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchPionProbabilityAllPhi_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchKaonProbabilityAllPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchKaonProbabilityAllEta_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchKaonProbabilityAllPhi_lowPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchKaonProbabilityAllEta_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fMuonPunchKaonProbabilityAllPhi_highPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fPrec_PtruevsDecdistPion_rear=",0,"pt reconstr. - pttrue (muonmother) vs scalar distance from prim vertex");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fPrec_PtruevsDecdistPion_central=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fPrec_PtruevsDecdistPion_forward=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fPrec_PtruevsDecdistKaon_rear=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fPrec_PtruevsDecdistKaon_central=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fPrec_PtruevsDecdistKaon_forward=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fPrec_PtruevsDecdistMuon_rear=",0,"pt reconstr. - pttrue (muon) vs scalar distance from prim vertex");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fPrec_PtruevsDecdistMuon_central=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fPrec_PtruevsDecdistMuon_forward=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFake2DMuonAll_PtEta=",0,"pt vs eta all fake muons ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFake2DMuonDecay_PtEta=",0,"pt vs eta all decays from pi/k");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFake2DMuonPunch_PtEta=",0,"punch+missmatch");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fProbability2DMuonAll_PtEta=",0,"pt vs eta all fake muons ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fProbability2DMuonDecay_PtEta=",0,"pt vs eta all decays from pi/k");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fProbability2DMuonPunch_PtEta=",0,"punch+missmatch");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fRecTrueMuonMother=",0,"muon mother of true muon e.g. no decay muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeProbabilityAllPt=",0,"pt dependence of probability to identify pion as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeProbabilityAllEta_lowPt=",0,"eta dependence of probability to identify charged particle as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeProbabilityAllPhi_lowPt=",0,"phi dependence of probability to identify charged particle as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeProbabilityAllEta_highPt=",0,"eta dependence of probability to identify charged particle as muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH1D),-1,-1,4,"fFakeProbabilityAllPhi_highPt=",0,"phi dependence of probability to identify charged particle as muon low Pt");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFake2DMuonAll_PtEta_Bremat=",0,"2D fakes for special finders");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFake2DMuonAll_PtEta_MPMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFake2DMuonAll_PtEta_Bac=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFake2DProbMuonAll_PtEta_Bremat=",0,"2D fakes probabilities for special finders");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFake2DProbMuonAll_PtEta_MPMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TH2D),-1,-1,4,"fFake2DProbMuonAll_PtEta_Bac=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GMuonsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGMuonsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGMuons(void) {
   /* GMuons */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GMuonsDictLN_GMuons));
   G__memfunc_setup("GMuons",601,G__GMuonsDict_177_0_1, 105, G__get_linked_tagnum(&G__GMuonsDictLN_GMuons), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Do",179,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,G__GMuonsDict_177_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAllCuts",984,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillHistos",1025,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateGeneral",1298,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateFake",971,G__GMuonsDict_177_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillGeneral",1093,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateControl",1333,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillHistos",1739,G__GMuonsDict_177_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillGeneral",1807,G__GMuonsDict_177_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillControl",1842,G__GMuonsDict_177_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectsFillFake",1480,G__GMuonsDict_177_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillMuonFinderHisto",1925,G__GMuonsDict_177_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'GMuon' - 0 - muon U 'TH1D' - 0 - histo "
"d - 'Double_t' 0 '1.0' weight", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CountMuons",1051,G__GMuonsDict_177_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckGlomu",994,G__GMuonsDict_177_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckForwardTrackMuon",2119,G__GMuonsDict_177_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModifyMuonQuality",1776,G__GMuonsDict_177_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckFinderCut",1378,G__GMuonsDict_177_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckQualityCut",1523,G__GMuonsDict_177_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckForwardTrackMuonCut",2419,G__GMuonsDict_177_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckBACFQualityCut",1791,G__GMuonsDict_177_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckEtaCut",1060,G__GMuonsDict_177_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckTakeCut",1167,G__GMuonsDict_177_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckEfficiencyCorrection",2539,G__GMuonsDict_177_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckPCut",858,G__GMuonsDict_177_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckPtCut",974,G__GMuonsDict_177_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckVcidLowCut",1474,G__GMuonsDict_177_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckVcidUpCut",1365,G__GMuonsDict_177_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckBrematCut",1381,G__GMuonsDict_177_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckMPMatchCut",1428,G__GMuonsDict_177_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckMUBACCut",1138,G__GMuonsDict_177_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckOnlyVertexFittedCut",2442,G__GMuonsDict_177_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckAllCuts",1174,G__GMuonsDict_177_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcBeamSpotImpactParameter",2701,G__GMuonsDict_177_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcMuonIsolation",1732,G__GMuonsDict_177_0_38, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcMuonImpactParameter",2321,G__GMuonsDict_177_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcMuonJetMass",1481,G__GMuonsDict_177_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillMuonNdofandZ",1594,G__GMuonsDict_177_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckMVCuts",1056,G__GMuonsDict_177_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FakeAlreadyStored",1706,G__GMuonsDict_177_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillSpecialFinderHisto",2215,G__GMuonsDict_177_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TH1D' - 0 - histo U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSpecialFinderBin",1874,G__GMuonsDict_177_0_45, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'GMuon' - 0 - muon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProduceMirroredPlot",1973,G__GMuonsDict_177_0_46, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuon",703,G__GMuonsDict_177_0_47, 85, G__get_linked_tagnum(&G__GMuonsDictLN_GMuon), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintMessage",1234,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__GMuonsDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNMuons",896,G__GMuonsDict_177_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonsCut",1118,G__GMuonsDict_177_0_51, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBarrelMuons",1418,G__GMuonsDict_177_0_52, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRearMuons",1212,G__GMuonsDict_177_0_53, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetForwardMuons",1543,G__GMuonsDict_177_0_54, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGlomus",919,G__GMuonsDict_177_0_55, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonImp",997,G__GMuonsDict_177_0_56, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonImperr",1326,G__GMuonsDict_177_0_57, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonDCA_x",1118,G__GMuonsDict_177_0_58, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonDCA_y",1119,G__GMuonsDict_177_0_59, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonDCA_z",1120,G__GMuonsDict_177_0_60, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonImpSig",1288,G__GMuonsDict_177_0_61, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonJetMass",1398,G__GMuonsDict_177_0_62, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonJetEt",1179,G__GMuonsDict_177_0_63, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonMuz",1019,G__GMuonsDict_177_0_64, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMuonMundof",1320,G__GMuonsDict_177_0_65, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonAllPt",1555,G__GMuonsDict_177_0_66, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonAllEta_lowPt",2270,G__GMuonsDict_177_0_67, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonAllPhi_lowPt",2277,G__GMuonsDict_177_0_68, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonAllEta_highPt",2348,G__GMuonsDict_177_0_69, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonAllPhi_highPt",2355,G__GMuonsDict_177_0_70, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonPionPt",1680,G__GMuonsDict_177_0_71, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonPionEta_lowPt",2395,G__GMuonsDict_177_0_72, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonPionPhi_lowPt",2402,G__GMuonsDict_177_0_73, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonPionEta_highPt",2473,G__GMuonsDict_177_0_74, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonPionPhi_highPt",2480,G__GMuonsDict_177_0_75, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonKaonPt",1667,G__GMuonsDict_177_0_76, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonKaonEta_lowPt",2382,G__GMuonsDict_177_0_77, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonKaonPhi_lowPt",2389,G__GMuonsDict_177_0_78, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonKaonEta_highPt",2460,G__GMuonsDict_177_0_79, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeMuonKaonPhi_highPt",2467,G__GMuonsDict_177_0_80, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeDecayMuonPionPt",2166,G__GMuonsDict_177_0_81, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeDecayMuonPionEta_lowPt",2881,G__GMuonsDict_177_0_82, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeDecayMuonPionPhi_lowPt",2888,G__GMuonsDict_177_0_83, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeDecayMuonPionEta_highPt",2959,G__GMuonsDict_177_0_84, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeDecayMuonPionPhi_highPt",2966,G__GMuonsDict_177_0_85, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeDecayMuonKaonPt",2153,G__GMuonsDict_177_0_86, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeDecayMuonKaonEta_lowPt",2868,G__GMuonsDict_177_0_87, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeDecayMuonKaonPhi_lowPt",2875,G__GMuonsDict_177_0_88, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeDecayMuonKaonEta_highPt",2946,G__GMuonsDict_177_0_89, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakeDecayMuonKaonPhi_highPt",2953,G__GMuonsDict_177_0_90, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakePunchMuonPionPt",2190,G__GMuonsDict_177_0_91, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakePunchMuonPionEta_lowPt",2905,G__GMuonsDict_177_0_92, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakePunchMuonPionPhi_lowPt",2912,G__GMuonsDict_177_0_93, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakePunchMuonPionEta_highPt",2983,G__GMuonsDict_177_0_94, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakePunchMuonPionPhi_highPt",2990,G__GMuonsDict_177_0_95, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakePunchMuonKaonPt",2177,G__GMuonsDict_177_0_96, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakePunchMuonKaonEta_lowPt",2892,G__GMuonsDict_177_0_97, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakePunchMuonKaonPhi_lowPt",2899,G__GMuonsDict_177_0_98, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakePunchMuonKaonEta_highPt",2970,G__GMuonsDict_177_0_99, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFakePunchMuonKaonPhi_highPt",2977,G__GMuonsDict_177_0_100, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GMuonsDict_177_0_101, 85, G__get_linked_tagnum(&G__GMuonsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GMuons::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GMuonsDict_177_0_102, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMuons::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GMuonsDict_177_0_103, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GMuons::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GMuonsDict_177_0_104, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GMuons::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GMuonsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GMuonsDict_177_0_108, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GMuonsDict_177_0_109, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMuons::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GMuonsDict_177_0_110, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GMuons::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GMuonsDict_177_0_111, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GMuons::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GMuonsDict_177_0_112, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GMuons::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GMuons", 601, G__GMuonsDict_177_0_113, (int) ('i'), G__get_linked_tagnum(&G__GMuonsDictLN_GMuons), -1, 0, 1, 1, 1, 0, "u 'GMuons' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GMuons", 727, G__GMuonsDict_177_0_114, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GMuonsDict_177_0_115, (int) ('u'), G__get_linked_tagnum(&G__GMuonsDictLN_GMuons), -1, 1, 1, 1, 1, 0, "u 'GMuons' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGMuonsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGMuonsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGMuonsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GMuonsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_GMuon = { "GMuon" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_GPhysObj = { "GPhysObj" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_TRandom = { "TRandom" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_GMuonEfficiency = { "GMuonEfficiency" , 99 , -1 };
G__linked_taginfo G__GMuonsDictLN_GMuons = { "GMuons" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGMuonsDict() {
  G__GMuonsDictLN_TClass.tagnum = -1 ;
  G__GMuonsDictLN_TBuffer.tagnum = -1 ;
  G__GMuonsDictLN_TMemberInspector.tagnum = -1 ;
  G__GMuonsDictLN_TObject.tagnum = -1 ;
  G__GMuonsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GMuonsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GMuonsDictLN_TString.tagnum = -1 ;
  G__GMuonsDictLN_TClonesArray.tagnum = -1 ;
  G__GMuonsDictLN_TH1D.tagnum = -1 ;
  G__GMuonsDictLN_TH2D.tagnum = -1 ;
  G__GMuonsDictLN_GMuon.tagnum = -1 ;
  G__GMuonsDictLN_GPhysObj.tagnum = -1 ;
  G__GMuonsDictLN_TRandom.tagnum = -1 ;
  G__GMuonsDictLN_GMuonEfficiency.tagnum = -1 ;
  G__GMuonsDictLN_GMuons.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGMuonsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_TString);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_GMuon);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_GPhysObj);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_TRandom);
   G__get_linked_tagnum_fwd(&G__GMuonsDictLN_GMuonEfficiency);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GMuonsDictLN_GMuons),sizeof(GMuons),-1,29952,"Muon Class for everything which is related only to Muons",G__setup_memvarGMuons,G__setup_memfuncGMuons);
}
extern "C" void G__cpp_setupGMuonsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGMuonsDict()");
  G__set_cpp_environmentGMuonsDict();
  G__cpp_setup_tagtableGMuonsDict();

  G__cpp_setup_inheritanceGMuonsDict();

  G__cpp_setup_typetableGMuonsDict();

  G__cpp_setup_memvarGMuonsDict();

  G__cpp_setup_memfuncGMuonsDict();
  G__cpp_setup_globalGMuonsDict();
  G__cpp_setup_funcGMuonsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGMuonsDict();
  return;
}
class G__cpp_setup_initGMuonsDict {
  public:
    G__cpp_setup_initGMuonsDict() { G__add_setup_func("GMuonsDict",(G__incsetup)(&G__cpp_setupGMuonsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGMuonsDict() { G__remove_setup_func("GMuonsDict"); }
};
G__cpp_setup_initGMuonsDict G__cpp_setup_initializerGMuonsDict;

