//
// File generated by rootcint at Fri Oct 24 10:58:03 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GRunDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GRun_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_GRun(void *p = 0);
   static void *newArray_GRun(Long_t size, void *p);
   static void delete_GRun(void *p);
   static void deleteArray_GRun(void *p);
   static void destruct_GRun(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GRun*)
   {
      ::GRun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GRun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GRun", ::GRun::Class_Version(), "/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GRun.h", 32,
                  typeid(::GRun), DefineBehavior(ptr, ptr),
                  &::GRun::Dictionary, isa_proxy, 0,
                  sizeof(::GRun) );
      instance.SetNew(&new_GRun);
      instance.SetNewArray(&newArray_GRun);
      instance.SetDelete(&delete_GRun);
      instance.SetDeleteArray(&deleteArray_GRun);
      instance.SetDestructor(&destruct_GRun);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GRun*)
   {
      return GenerateInitInstanceLocal((::GRun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GRun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GRun::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GRun::Class_Name()
{
   return "GRun";
}

//______________________________________________________________________________
const char *GRun::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GRun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GRun::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GRun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GRun::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GRun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GRun::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GRun*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GRun::Streamer(TBuffer &R__b)
{
   // Stream an object of class GRun.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void GRun::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GRun.
      TClass *R__cl = ::GRun::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRun", &fRun);
      R__insp.Inspect(R__cl, R__parent, "fEvents", &fEvents);
      R__insp.Inspect(R__cl, R__parent, "fLumi_Cal", &fLumi_Cal);
      R__insp.Inspect(R__cl, R__parent, "fLumi_Spec", &fLumi_Spec);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GRun(void *p) {
      return  p ? new(p) ::GRun : new ::GRun;
   }
   static void *newArray_GRun(Long_t nElements, void *p) {
      return p ? new(p) ::GRun[nElements] : new ::GRun[nElements];
   }
   // Wrapper around operator delete
   static void delete_GRun(void *p) {
      delete ((::GRun*)p);
   }
   static void deleteArray_GRun(void *p) {
      delete [] ((::GRun*)p);
   }
   static void destruct_GRun(void *p) {
      typedef ::GRun current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GRun

/********************************************************
* /data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/dict/GRunDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGRunDict();

extern "C" void G__set_cpp_environmentGRunDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/data/zenith234d/stefan/GoodCodeGit/libraries/GutLib/inc//GRun.h");
  G__cpp_reset_tagtableGRunDict();
}
#include <new>
extern "C" int G__cpp_dllrevGRunDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GRun */
static int G__GRunDict_155_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GRun[n];
     } else {
       p = new((void*) gvp) GRun[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GRun;
     } else {
       p = new((void*) gvp) GRun;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GRunDictLN_GRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GRun(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (EZRunType) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) GRun(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (EZRunType) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GRun(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) GRun(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GRunDictLN_GRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GRun*) G__getstructoffset())->GetRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GRun*) G__getstructoffset())->GetEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GRun*) G__getstructoffset())->GetLumi_Cal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GRun*) G__getstructoffset())->GetLumi_Spec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GRun*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GRun*) G__getstructoffset())->PrintMessage(*((TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GRun*) G__getstructoffset())->Print(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GRun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GRun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GRun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GRun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GRun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GRun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GRun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GRun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRunDict_155_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GRun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GRunDict_155_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GRun* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GRun(*(GRun*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GRunDictLN_GRun));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GRun G__TGRun;
static int G__GRunDict_155_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GRun*) (soff+(sizeof(GRun)*i)))->~G__TGRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GRun*) (soff))->~G__TGRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GRunDict_155_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GRun* dest = (GRun*) G__getstructoffset();
   *dest = *(GRun*) libp->para[0].ref;
   const GRun& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GRun */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGRunDict {
 public:
  G__Sizep2memfuncGRunDict(): p(&G__Sizep2memfuncGRunDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGRunDict::*p)();
};

size_t G__get_sizep2memfuncGRunDict()
{
  G__Sizep2memfuncGRunDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGRunDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GRunDictLN_GRun))) {
     GRun *G__Lderived;
     G__Lderived=(GRun*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GRunDictLN_GRun),G__get_linked_tagnum(&G__GRunDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGRunDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__GRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GRunDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GRunDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GRun */
static void G__setup_memvarGRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GRunDictLN_GRun));
   { GRun *p; p=(GRun*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRun=",0,"run number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEvents=",0,"number of events in run");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLumi_Cal=",0,"calorimeter lumi");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLumi_Spec=",0,"spectrometer lumi");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__GRunDictLN_EZRunType),-1,-1,4,"fType=",0,"run type, especially for 03p-04p, where there are low and high configuration runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRunDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGRunDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGRun(void) {
   /* GRun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GRunDictLN_GRun));
   G__memfunc_setup("GRun",380,G__GRunDict_155_0_1, 105, G__get_linked_tagnum(&G__GRunDictLN_GRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GRun",380,G__GRunDict_155_0_2, 105, G__get_linked_tagnum(&G__GRunDictLN_GRun), -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - run i - 'Int_t' 0 - events "
"d - 'Double_t' 0 - lumi_cal d - 'Double_t' 0 - lumi_spec "
"i 'EZRunType' - 0 'kNormal' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRun",597,G__GRunDict_155_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEvents",917,G__GRunDict_155_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLumi_Cal",1062,G__GRunDict_155_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLumi_Spec",1185,G__GRunDict_155_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__GRunDict_155_0_7, 105, G__get_linked_tagnum(&G__GRunDictLN_EZRunType), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintMessage",1234,G__GRunDict_155_0_8, 117, G__get_linked_tagnum(&G__GRunDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__GRunDict_155_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GRunDict_155_0_10, 85, G__get_linked_tagnum(&G__GRunDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GRun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GRunDict_155_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GRun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GRunDict_155_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GRun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GRunDict_155_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GRun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GRunDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GRunDict_155_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GRunDict_155_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GRun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GRunDict_155_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GRun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GRunDict_155_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GRun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GRunDict_155_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GRun::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GRun", 380, G__GRunDict_155_0_22, (int) ('i'), G__get_linked_tagnum(&G__GRunDictLN_GRun), -1, 0, 1, 1, 1, 0, "u 'GRun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GRun", 506, G__GRunDict_155_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GRunDict_155_0_24, (int) ('u'), G__get_linked_tagnum(&G__GRunDictLN_GRun), -1, 1, 1, 1, 1, 0, "u 'GRun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGRunDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGRunDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGRunDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GRunDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GRunDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GRunDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GRunDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GRunDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GRunDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GRunDictLN_EZRunType = { "EZRunType" , 101 , -1 };
G__linked_taginfo G__GRunDictLN_GRun = { "GRun" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGRunDict() {
  G__GRunDictLN_TClass.tagnum = -1 ;
  G__GRunDictLN_TBuffer.tagnum = -1 ;
  G__GRunDictLN_TMemberInspector.tagnum = -1 ;
  G__GRunDictLN_TObject.tagnum = -1 ;
  G__GRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GRunDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GRunDictLN_TString.tagnum = -1 ;
  G__GRunDictLN_EZRunType.tagnum = -1 ;
  G__GRunDictLN_GRun.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGRunDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GRunDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GRunDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GRunDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GRunDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GRunDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GRunDictLN_TString);
   G__get_linked_tagnum_fwd(&G__GRunDictLN_EZRunType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GRunDictLN_GRun),sizeof(GRun),-1,62720,"run class",G__setup_memvarGRun,G__setup_memfuncGRun);
}
extern "C" void G__cpp_setupGRunDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGRunDict()");
  G__set_cpp_environmentGRunDict();
  G__cpp_setup_tagtableGRunDict();

  G__cpp_setup_inheritanceGRunDict();

  G__cpp_setup_typetableGRunDict();

  G__cpp_setup_memvarGRunDict();

  G__cpp_setup_memfuncGRunDict();
  G__cpp_setup_globalGRunDict();
  G__cpp_setup_funcGRunDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGRunDict();
  return;
}
class G__cpp_setup_initGRunDict {
  public:
    G__cpp_setup_initGRunDict() { G__add_setup_func("GRunDict",(G__incsetup)(&G__cpp_setupGRunDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGRunDict() { G__remove_setup_func("GRunDict"); }
};
G__cpp_setup_initGRunDict G__cpp_setup_initializerGRunDict;

